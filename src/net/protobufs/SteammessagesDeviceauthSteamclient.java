package net.protobufs;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_deviceauth.steamclient.proto

public final class SteammessagesDeviceauthSteamclient {
  private SteammessagesDeviceauthSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CDeviceAuth_GetOwnAuthorizedDevices_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetOwnAuthorizedDevices_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    boolean hasIncludeCanceled();
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    boolean getIncludeCanceled();
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Request}
   */
  public static final class CDeviceAuth_GetOwnAuthorizedDevices_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetOwnAuthorizedDevices_Request)
      CDeviceAuth_GetOwnAuthorizedDevices_RequestOrBuilder {
    // Use CDeviceAuth_GetOwnAuthorizedDevices_Request.newBuilder() to construct.
    private CDeviceAuth_GetOwnAuthorizedDevices_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetOwnAuthorizedDevices_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetOwnAuthorizedDevices_Request defaultInstance;
    public static CDeviceAuth_GetOwnAuthorizedDevices_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetOwnAuthorizedDevices_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetOwnAuthorizedDevices_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              includeCanceled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetOwnAuthorizedDevices_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetOwnAuthorizedDevices_Request>() {
      public CDeviceAuth_GetOwnAuthorizedDevices_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetOwnAuthorizedDevices_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetOwnAuthorizedDevices_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int INCLUDE_CANCELED_FIELD_NUMBER = 2;
    private boolean includeCanceled_;
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    public boolean hasIncludeCanceled() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    public boolean getIncludeCanceled() {
      return includeCanceled_;
    }

    private void initFields() {
      steamid_ = 0L;
      includeCanceled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, includeCanceled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, includeCanceled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetOwnAuthorizedDevices_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        includeCanceled_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.includeCanceled_ = includeCanceled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasIncludeCanceled()) {
          setIncludeCanceled(other.getIncludeCanceled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private boolean includeCanceled_ ;
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public boolean hasIncludeCanceled() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public boolean getIncludeCanceled() {
        return includeCanceled_;
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public Builder setIncludeCanceled(boolean value) {
        bitField0_ |= 0x00000002;
        includeCanceled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public Builder clearIncludeCanceled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        includeCanceled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetOwnAuthorizedDevices_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_GetOwnAuthorizedDevices_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetOwnAuthorizedDevices_Request)
  }

  public interface CDeviceAuth_GetOwnAuthorizedDevices_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetOwnAuthorizedDevices_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> 
        getDevicesList();
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device getDevices(int index);
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    int getDevicesCount();
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder> 
        getDevicesOrBuilderList();
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Response}
   */
  public static final class CDeviceAuth_GetOwnAuthorizedDevices_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetOwnAuthorizedDevices_Response)
      CDeviceAuth_GetOwnAuthorizedDevices_ResponseOrBuilder {
    // Use CDeviceAuth_GetOwnAuthorizedDevices_Response.newBuilder() to construct.
    private CDeviceAuth_GetOwnAuthorizedDevices_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetOwnAuthorizedDevices_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetOwnAuthorizedDevices_Response defaultInstance;
    public static CDeviceAuth_GetOwnAuthorizedDevices_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetOwnAuthorizedDevices_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetOwnAuthorizedDevices_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                devices_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device>();
                mutable_bitField0_ |= 0x00000001;
              }
              devices_.add(input.readMessage(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          devices_ = java.util.Collections.unmodifiableList(devices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetOwnAuthorizedDevices_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetOwnAuthorizedDevices_Response>() {
      public CDeviceAuth_GetOwnAuthorizedDevices_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetOwnAuthorizedDevices_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetOwnAuthorizedDevices_Response> getParserForType() {
      return PARSER;
    }

    public interface DeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      boolean hasAuthDeviceToken();
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      long getAuthDeviceToken();

      /**
       * <code>optional string device_name = 2;</code>
       */
      boolean hasDeviceName();
      /**
       * <code>optional string device_name = 2;</code>
       */
      java.lang.String getDeviceName();
      /**
       * <code>optional string device_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getDeviceNameBytes();

      /**
       * <code>optional bool is_pending = 3;</code>
       */
      boolean hasIsPending();
      /**
       * <code>optional bool is_pending = 3;</code>
       */
      boolean getIsPending();

      /**
       * <code>optional bool is_canceled = 4;</code>
       */
      boolean hasIsCanceled();
      /**
       * <code>optional bool is_canceled = 4;</code>
       */
      boolean getIsCanceled();

      /**
       * <code>optional uint32 last_time_used = 5;</code>
       */
      boolean hasLastTimeUsed();
      /**
       * <code>optional uint32 last_time_used = 5;</code>
       */
      int getLastTimeUsed();

      /**
       * <code>optional fixed64 last_borrower_id = 6;</code>
       */
      boolean hasLastBorrowerId();
      /**
       * <code>optional fixed64 last_borrower_id = 6;</code>
       */
      long getLastBorrowerId();

      /**
       * <code>optional uint32 last_app_played = 7;</code>
       */
      boolean hasLastAppPlayed();
      /**
       * <code>optional uint32 last_app_played = 7;</code>
       */
      int getLastAppPlayed();

      /**
       * <code>optional bool is_limited = 8;</code>
       */
      boolean hasIsLimited();
      /**
       * <code>optional bool is_limited = 8;</code>
       */
      boolean getIsLimited();
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Response.Device}
     */
    public static final class Device extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
        DeviceOrBuilder {
      // Use Device.newBuilder() to construct.
      private Device(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Device(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Device defaultInstance;
      public static Device getDefaultInstance() {
        return defaultInstance;
      }

      public Device getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Device(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                authDeviceToken_ = input.readFixed64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                deviceName_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                isPending_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                isCanceled_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                lastTimeUsed_ = input.readUInt32();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                lastBorrowerId_ = input.readFixed64();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                lastAppPlayed_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                isLimited_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder.class);
      }

      public static com.google.protobuf.Parser<Device> PARSER =
          new com.google.protobuf.AbstractParser<Device>() {
        public Device parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Device(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Device> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int AUTH_DEVICE_TOKEN_FIELD_NUMBER = 1;
      private long authDeviceToken_;
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      public boolean hasAuthDeviceToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      public long getAuthDeviceToken() {
        return authDeviceToken_;
      }

      public static final int DEVICE_NAME_FIELD_NUMBER = 2;
      private java.lang.Object deviceName_;
      /**
       * <code>optional string device_name = 2;</code>
       */
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device_name = 2;</code>
       */
      public java.lang.String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string device_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IS_PENDING_FIELD_NUMBER = 3;
      private boolean isPending_;
      /**
       * <code>optional bool is_pending = 3;</code>
       */
      public boolean hasIsPending() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_pending = 3;</code>
       */
      public boolean getIsPending() {
        return isPending_;
      }

      public static final int IS_CANCELED_FIELD_NUMBER = 4;
      private boolean isCanceled_;
      /**
       * <code>optional bool is_canceled = 4;</code>
       */
      public boolean hasIsCanceled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool is_canceled = 4;</code>
       */
      public boolean getIsCanceled() {
        return isCanceled_;
      }

      public static final int LAST_TIME_USED_FIELD_NUMBER = 5;
      private int lastTimeUsed_;
      /**
       * <code>optional uint32 last_time_used = 5;</code>
       */
      public boolean hasLastTimeUsed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 last_time_used = 5;</code>
       */
      public int getLastTimeUsed() {
        return lastTimeUsed_;
      }

      public static final int LAST_BORROWER_ID_FIELD_NUMBER = 6;
      private long lastBorrowerId_;
      /**
       * <code>optional fixed64 last_borrower_id = 6;</code>
       */
      public boolean hasLastBorrowerId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed64 last_borrower_id = 6;</code>
       */
      public long getLastBorrowerId() {
        return lastBorrowerId_;
      }

      public static final int LAST_APP_PLAYED_FIELD_NUMBER = 7;
      private int lastAppPlayed_;
      /**
       * <code>optional uint32 last_app_played = 7;</code>
       */
      public boolean hasLastAppPlayed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 last_app_played = 7;</code>
       */
      public int getLastAppPlayed() {
        return lastAppPlayed_;
      }

      public static final int IS_LIMITED_FIELD_NUMBER = 8;
      private boolean isLimited_;
      /**
       * <code>optional bool is_limited = 8;</code>
       */
      public boolean hasIsLimited() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool is_limited = 8;</code>
       */
      public boolean getIsLimited() {
        return isLimited_;
      }

      private void initFields() {
        authDeviceToken_ = 0L;
        deviceName_ = "";
        isPending_ = false;
        isCanceled_ = false;
        lastTimeUsed_ = 0;
        lastBorrowerId_ = 0L;
        lastAppPlayed_ = 0;
        isLimited_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFixed64(1, authDeviceToken_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDeviceNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, isPending_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, isCanceled_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, lastTimeUsed_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFixed64(6, lastBorrowerId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, lastAppPlayed_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(8, isLimited_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, authDeviceToken_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDeviceNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, isPending_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, isCanceled_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, lastTimeUsed_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(6, lastBorrowerId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, lastAppPlayed_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, isLimited_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Response.Device}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder.class);
        }

        // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          authDeviceToken_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          isPending_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          isCanceled_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          lastTimeUsed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          lastBorrowerId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          lastAppPlayed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          isLimited_ = false;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device getDefaultInstanceForType() {
          return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.getDefaultInstance();
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device build() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device buildPartial() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.authDeviceToken_ = authDeviceToken_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceName_ = deviceName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isPending_ = isPending_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.isCanceled_ = isCanceled_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.lastTimeUsed_ = lastTimeUsed_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.lastBorrowerId_ = lastBorrowerId_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.lastAppPlayed_ = lastAppPlayed_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.isLimited_ = isLimited_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device) {
            return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device other) {
          if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.getDefaultInstance()) return this;
          if (other.hasAuthDeviceToken()) {
            setAuthDeviceToken(other.getAuthDeviceToken());
          }
          if (other.hasDeviceName()) {
            bitField0_ |= 0x00000002;
            deviceName_ = other.deviceName_;
            onChanged();
          }
          if (other.hasIsPending()) {
            setIsPending(other.getIsPending());
          }
          if (other.hasIsCanceled()) {
            setIsCanceled(other.getIsCanceled());
          }
          if (other.hasLastTimeUsed()) {
            setLastTimeUsed(other.getLastTimeUsed());
          }
          if (other.hasLastBorrowerId()) {
            setLastBorrowerId(other.getLastBorrowerId());
          }
          if (other.hasLastAppPlayed()) {
            setLastAppPlayed(other.getLastAppPlayed());
          }
          if (other.hasIsLimited()) {
            setIsLimited(other.getIsLimited());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long authDeviceToken_ ;
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public boolean hasAuthDeviceToken() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public long getAuthDeviceToken() {
          return authDeviceToken_;
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public Builder setAuthDeviceToken(long value) {
          bitField0_ |= 0x00000001;
          authDeviceToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public Builder clearAuthDeviceToken() {
          bitField0_ = (bitField0_ & ~0x00000001);
          authDeviceToken_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object deviceName_ = "";
        /**
         * <code>optional string device_name = 2;</code>
         */
        public boolean hasDeviceName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public java.lang.String getDeviceName() {
          java.lang.Object ref = deviceName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              deviceName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceNameBytes() {
          java.lang.Object ref = deviceName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder setDeviceName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder clearDeviceName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceName_ = getDefaultInstance().getDeviceName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder setDeviceNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceName_ = value;
          onChanged();
          return this;
        }

        private boolean isPending_ ;
        /**
         * <code>optional bool is_pending = 3;</code>
         */
        public boolean hasIsPending() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool is_pending = 3;</code>
         */
        public boolean getIsPending() {
          return isPending_;
        }
        /**
         * <code>optional bool is_pending = 3;</code>
         */
        public Builder setIsPending(boolean value) {
          bitField0_ |= 0x00000004;
          isPending_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_pending = 3;</code>
         */
        public Builder clearIsPending() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isPending_ = false;
          onChanged();
          return this;
        }

        private boolean isCanceled_ ;
        /**
         * <code>optional bool is_canceled = 4;</code>
         */
        public boolean hasIsCanceled() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool is_canceled = 4;</code>
         */
        public boolean getIsCanceled() {
          return isCanceled_;
        }
        /**
         * <code>optional bool is_canceled = 4;</code>
         */
        public Builder setIsCanceled(boolean value) {
          bitField0_ |= 0x00000008;
          isCanceled_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_canceled = 4;</code>
         */
        public Builder clearIsCanceled() {
          bitField0_ = (bitField0_ & ~0x00000008);
          isCanceled_ = false;
          onChanged();
          return this;
        }

        private int lastTimeUsed_ ;
        /**
         * <code>optional uint32 last_time_used = 5;</code>
         */
        public boolean hasLastTimeUsed() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 last_time_used = 5;</code>
         */
        public int getLastTimeUsed() {
          return lastTimeUsed_;
        }
        /**
         * <code>optional uint32 last_time_used = 5;</code>
         */
        public Builder setLastTimeUsed(int value) {
          bitField0_ |= 0x00000010;
          lastTimeUsed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_time_used = 5;</code>
         */
        public Builder clearLastTimeUsed() {
          bitField0_ = (bitField0_ & ~0x00000010);
          lastTimeUsed_ = 0;
          onChanged();
          return this;
        }

        private long lastBorrowerId_ ;
        /**
         * <code>optional fixed64 last_borrower_id = 6;</code>
         */
        public boolean hasLastBorrowerId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional fixed64 last_borrower_id = 6;</code>
         */
        public long getLastBorrowerId() {
          return lastBorrowerId_;
        }
        /**
         * <code>optional fixed64 last_borrower_id = 6;</code>
         */
        public Builder setLastBorrowerId(long value) {
          bitField0_ |= 0x00000020;
          lastBorrowerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 last_borrower_id = 6;</code>
         */
        public Builder clearLastBorrowerId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          lastBorrowerId_ = 0L;
          onChanged();
          return this;
        }

        private int lastAppPlayed_ ;
        /**
         * <code>optional uint32 last_app_played = 7;</code>
         */
        public boolean hasLastAppPlayed() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 last_app_played = 7;</code>
         */
        public int getLastAppPlayed() {
          return lastAppPlayed_;
        }
        /**
         * <code>optional uint32 last_app_played = 7;</code>
         */
        public Builder setLastAppPlayed(int value) {
          bitField0_ |= 0x00000040;
          lastAppPlayed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_app_played = 7;</code>
         */
        public Builder clearLastAppPlayed() {
          bitField0_ = (bitField0_ & ~0x00000040);
          lastAppPlayed_ = 0;
          onChanged();
          return this;
        }

        private boolean isLimited_ ;
        /**
         * <code>optional bool is_limited = 8;</code>
         */
        public boolean hasIsLimited() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional bool is_limited = 8;</code>
         */
        public boolean getIsLimited() {
          return isLimited_;
        }
        /**
         * <code>optional bool is_limited = 8;</code>
         */
        public Builder setIsLimited(boolean value) {
          bitField0_ |= 0x00000080;
          isLimited_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_limited = 8;</code>
         */
        public Builder clearIsLimited() {
          bitField0_ = (bitField0_ & ~0x00000080);
          isLimited_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
      }

      static {
        defaultInstance = new Device(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
    }

    public static final int DEVICES_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> devices_;
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> getDevicesList() {
      return devices_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder> 
        getDevicesOrBuilderList() {
      return devices_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public int getDevicesCount() {
      return devices_.size();
    }
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device getDevices(int index) {
      return devices_.get(index);
    }
    /**
     * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
        int index) {
      return devices_.get(index);
    }

    private void initFields() {
      devices_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < devices_.size(); i++) {
        output.writeMessage(1, devices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < devices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, devices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetOwnAuthorizedDevices_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetOwnAuthorizedDevices_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDevicesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          devicesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response(this);
        int from_bitField0_ = bitField0_;
        if (devicesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            devices_ = java.util.Collections.unmodifiableList(devices_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.devices_ = devices_;
        } else {
          result.devices_ = devicesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.getDefaultInstance()) return this;
        if (devicesBuilder_ == null) {
          if (!other.devices_.isEmpty()) {
            if (devices_.isEmpty()) {
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDevicesIsMutable();
              devices_.addAll(other.devices_);
            }
            onChanged();
          }
        } else {
          if (!other.devices_.isEmpty()) {
            if (devicesBuilder_.isEmpty()) {
              devicesBuilder_.dispose();
              devicesBuilder_ = null;
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000001);
              devicesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDevicesFieldBuilder() : null;
            } else {
              devicesBuilder_.addAllMessages(other.devices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> devices_ =
        java.util.Collections.emptyList();
      private void ensureDevicesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          devices_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device>(devices_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder> devicesBuilder_;

      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> getDevicesList() {
        if (devicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(devices_);
        } else {
          return devicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public int getDevicesCount() {
        if (devicesBuilder_ == null) {
          return devices_.size();
        } else {
          return devicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device getDevices(int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);
        } else {
          return devicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder setDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.set(index, value);
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder setDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.set(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(index, value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addAllDevices(
          java.lang.Iterable<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device> values) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, devices_);
          onChanged();
        } else {
          devicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder clearDevices() {
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          devicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder removeDevices(int index) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.remove(index);
          onChanged();
        } else {
          devicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder getDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
          int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);  } else {
          return devicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder> 
           getDevicesOrBuilderList() {
        if (devicesBuilder_ != null) {
          return devicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(devices_);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder addDevicesBuilder() {
        return getDevicesFieldBuilder().addBuilder(
            SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder addDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().addBuilder(
            index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder> 
           getDevicesBuilderList() {
        return getDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder> 
          getDevicesFieldBuilder() {
        if (devicesBuilder_ == null) {
          devicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetOwnAuthorizedDevices_Response.DeviceOrBuilder>(
                  devices_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          devices_ = null;
        }
        return devicesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetOwnAuthorizedDevices_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_GetOwnAuthorizedDevices_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetOwnAuthorizedDevices_Response)
  }

  public interface CDeviceAuth_AcceptAuthorizationRequest_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AcceptAuthorizationRequest_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    boolean hasAuthDeviceToken();
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    long getAuthDeviceToken();

    /**
     * <code>optional fixed64 auth_code = 3;</code>
     */
    boolean hasAuthCode();
    /**
     * <code>optional fixed64 auth_code = 3;</code>
     */
    long getAuthCode();

    /**
     * <code>optional fixed64 from_steamid = 4;</code>
     */
    boolean hasFromSteamid();
    /**
     * <code>optional fixed64 from_steamid = 4;</code>
     */
    long getFromSteamid();
  }
  /**
   * Protobuf type {@code CDeviceAuth_AcceptAuthorizationRequest_Request}
   */
  public static final class CDeviceAuth_AcceptAuthorizationRequest_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AcceptAuthorizationRequest_Request)
      CDeviceAuth_AcceptAuthorizationRequest_RequestOrBuilder {
    // Use CDeviceAuth_AcceptAuthorizationRequest_Request.newBuilder() to construct.
    private CDeviceAuth_AcceptAuthorizationRequest_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AcceptAuthorizationRequest_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AcceptAuthorizationRequest_Request defaultInstance;
    public static CDeviceAuth_AcceptAuthorizationRequest_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AcceptAuthorizationRequest_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AcceptAuthorizationRequest_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              authDeviceToken_ = input.readFixed64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              authCode_ = input.readFixed64();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              fromSteamid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AcceptAuthorizationRequest_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AcceptAuthorizationRequest_Request>() {
      public CDeviceAuth_AcceptAuthorizationRequest_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AcceptAuthorizationRequest_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AcceptAuthorizationRequest_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int AUTH_DEVICE_TOKEN_FIELD_NUMBER = 2;
    private long authDeviceToken_;
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public boolean hasAuthDeviceToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public long getAuthDeviceToken() {
      return authDeviceToken_;
    }

    public static final int AUTH_CODE_FIELD_NUMBER = 3;
    private long authCode_;
    /**
     * <code>optional fixed64 auth_code = 3;</code>
     */
    public boolean hasAuthCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed64 auth_code = 3;</code>
     */
    public long getAuthCode() {
      return authCode_;
    }

    public static final int FROM_STEAMID_FIELD_NUMBER = 4;
    private long fromSteamid_;
    /**
     * <code>optional fixed64 from_steamid = 4;</code>
     */
    public boolean hasFromSteamid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional fixed64 from_steamid = 4;</code>
     */
    public long getFromSteamid() {
      return fromSteamid_;
    }

    private void initFields() {
      steamid_ = 0L;
      authDeviceToken_ = 0L;
      authCode_ = 0L;
      fromSteamid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, authDeviceToken_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed64(3, authCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFixed64(4, fromSteamid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, authDeviceToken_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, authCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, fromSteamid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AcceptAuthorizationRequest_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AcceptAuthorizationRequest_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        authDeviceToken_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        authCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        fromSteamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authDeviceToken_ = authDeviceToken_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.authCode_ = authCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fromSteamid_ = fromSteamid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasAuthDeviceToken()) {
          setAuthDeviceToken(other.getAuthDeviceToken());
        }
        if (other.hasAuthCode()) {
          setAuthCode(other.getAuthCode());
        }
        if (other.hasFromSteamid()) {
          setFromSteamid(other.getFromSteamid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private long authDeviceToken_ ;
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public boolean hasAuthDeviceToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public long getAuthDeviceToken() {
        return authDeviceToken_;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder setAuthDeviceToken(long value) {
        bitField0_ |= 0x00000002;
        authDeviceToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder clearAuthDeviceToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authDeviceToken_ = 0L;
        onChanged();
        return this;
      }

      private long authCode_ ;
      /**
       * <code>optional fixed64 auth_code = 3;</code>
       */
      public boolean hasAuthCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed64 auth_code = 3;</code>
       */
      public long getAuthCode() {
        return authCode_;
      }
      /**
       * <code>optional fixed64 auth_code = 3;</code>
       */
      public Builder setAuthCode(long value) {
        bitField0_ |= 0x00000004;
        authCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 auth_code = 3;</code>
       */
      public Builder clearAuthCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        authCode_ = 0L;
        onChanged();
        return this;
      }

      private long fromSteamid_ ;
      /**
       * <code>optional fixed64 from_steamid = 4;</code>
       */
      public boolean hasFromSteamid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional fixed64 from_steamid = 4;</code>
       */
      public long getFromSteamid() {
        return fromSteamid_;
      }
      /**
       * <code>optional fixed64 from_steamid = 4;</code>
       */
      public Builder setFromSteamid(long value) {
        bitField0_ |= 0x00000008;
        fromSteamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 from_steamid = 4;</code>
       */
      public Builder clearFromSteamid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fromSteamid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AcceptAuthorizationRequest_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_AcceptAuthorizationRequest_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AcceptAuthorizationRequest_Request)
  }

  public interface CDeviceAuth_AcceptAuthorizationRequest_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AcceptAuthorizationRequest_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDeviceAuth_AcceptAuthorizationRequest_Response}
   */
  public static final class CDeviceAuth_AcceptAuthorizationRequest_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AcceptAuthorizationRequest_Response)
      CDeviceAuth_AcceptAuthorizationRequest_ResponseOrBuilder {
    // Use CDeviceAuth_AcceptAuthorizationRequest_Response.newBuilder() to construct.
    private CDeviceAuth_AcceptAuthorizationRequest_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AcceptAuthorizationRequest_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AcceptAuthorizationRequest_Response defaultInstance;
    public static CDeviceAuth_AcceptAuthorizationRequest_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AcceptAuthorizationRequest_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AcceptAuthorizationRequest_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AcceptAuthorizationRequest_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AcceptAuthorizationRequest_Response>() {
      public CDeviceAuth_AcceptAuthorizationRequest_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AcceptAuthorizationRequest_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AcceptAuthorizationRequest_Response> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AcceptAuthorizationRequest_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AcceptAuthorizationRequest_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AcceptAuthorizationRequest_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AcceptAuthorizationRequest_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_AcceptAuthorizationRequest_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AcceptAuthorizationRequest_Response)
  }

  public interface CDeviceAuth_AuthorizeRemoteDevice_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AuthorizeRemoteDevice_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    boolean hasAuthDeviceToken();
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    long getAuthDeviceToken();
  }
  /**
   * Protobuf type {@code CDeviceAuth_AuthorizeRemoteDevice_Request}
   */
  public static final class CDeviceAuth_AuthorizeRemoteDevice_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AuthorizeRemoteDevice_Request)
      CDeviceAuth_AuthorizeRemoteDevice_RequestOrBuilder {
    // Use CDeviceAuth_AuthorizeRemoteDevice_Request.newBuilder() to construct.
    private CDeviceAuth_AuthorizeRemoteDevice_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AuthorizeRemoteDevice_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AuthorizeRemoteDevice_Request defaultInstance;
    public static CDeviceAuth_AuthorizeRemoteDevice_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AuthorizeRemoteDevice_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AuthorizeRemoteDevice_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              authDeviceToken_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AuthorizeRemoteDevice_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AuthorizeRemoteDevice_Request>() {
      public CDeviceAuth_AuthorizeRemoteDevice_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AuthorizeRemoteDevice_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AuthorizeRemoteDevice_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int AUTH_DEVICE_TOKEN_FIELD_NUMBER = 2;
    private long authDeviceToken_;
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public boolean hasAuthDeviceToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public long getAuthDeviceToken() {
      return authDeviceToken_;
    }

    private void initFields() {
      steamid_ = 0L;
      authDeviceToken_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, authDeviceToken_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, authDeviceToken_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AuthorizeRemoteDevice_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AuthorizeRemoteDevice_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        authDeviceToken_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authDeviceToken_ = authDeviceToken_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasAuthDeviceToken()) {
          setAuthDeviceToken(other.getAuthDeviceToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private long authDeviceToken_ ;
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public boolean hasAuthDeviceToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public long getAuthDeviceToken() {
        return authDeviceToken_;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder setAuthDeviceToken(long value) {
        bitField0_ |= 0x00000002;
        authDeviceToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder clearAuthDeviceToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authDeviceToken_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AuthorizeRemoteDevice_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_AuthorizeRemoteDevice_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AuthorizeRemoteDevice_Request)
  }

  public interface CDeviceAuth_AuthorizeRemoteDevice_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AuthorizeRemoteDevice_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDeviceAuth_AuthorizeRemoteDevice_Response}
   */
  public static final class CDeviceAuth_AuthorizeRemoteDevice_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AuthorizeRemoteDevice_Response)
      CDeviceAuth_AuthorizeRemoteDevice_ResponseOrBuilder {
    // Use CDeviceAuth_AuthorizeRemoteDevice_Response.newBuilder() to construct.
    private CDeviceAuth_AuthorizeRemoteDevice_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AuthorizeRemoteDevice_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AuthorizeRemoteDevice_Response defaultInstance;
    public static CDeviceAuth_AuthorizeRemoteDevice_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AuthorizeRemoteDevice_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AuthorizeRemoteDevice_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AuthorizeRemoteDevice_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AuthorizeRemoteDevice_Response>() {
      public CDeviceAuth_AuthorizeRemoteDevice_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AuthorizeRemoteDevice_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AuthorizeRemoteDevice_Response> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AuthorizeRemoteDevice_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AuthorizeRemoteDevice_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AuthorizeRemoteDevice_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AuthorizeRemoteDevice_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_AuthorizeRemoteDevice_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AuthorizeRemoteDevice_Response)
  }

  public interface CDeviceAuth_DeauthorizeRemoteDevice_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_DeauthorizeRemoteDevice_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    boolean hasAuthDeviceToken();
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    long getAuthDeviceToken();
  }
  /**
   * Protobuf type {@code CDeviceAuth_DeauthorizeRemoteDevice_Request}
   */
  public static final class CDeviceAuth_DeauthorizeRemoteDevice_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_DeauthorizeRemoteDevice_Request)
      CDeviceAuth_DeauthorizeRemoteDevice_RequestOrBuilder {
    // Use CDeviceAuth_DeauthorizeRemoteDevice_Request.newBuilder() to construct.
    private CDeviceAuth_DeauthorizeRemoteDevice_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_DeauthorizeRemoteDevice_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_DeauthorizeRemoteDevice_Request defaultInstance;
    public static CDeviceAuth_DeauthorizeRemoteDevice_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_DeauthorizeRemoteDevice_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_DeauthorizeRemoteDevice_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              authDeviceToken_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_DeauthorizeRemoteDevice_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_DeauthorizeRemoteDevice_Request>() {
      public CDeviceAuth_DeauthorizeRemoteDevice_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_DeauthorizeRemoteDevice_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_DeauthorizeRemoteDevice_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int AUTH_DEVICE_TOKEN_FIELD_NUMBER = 2;
    private long authDeviceToken_;
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public boolean hasAuthDeviceToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 auth_device_token = 2;</code>
     */
    public long getAuthDeviceToken() {
      return authDeviceToken_;
    }

    private void initFields() {
      steamid_ = 0L;
      authDeviceToken_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, authDeviceToken_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, authDeviceToken_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_DeauthorizeRemoteDevice_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_DeauthorizeRemoteDevice_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        authDeviceToken_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authDeviceToken_ = authDeviceToken_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasAuthDeviceToken()) {
          setAuthDeviceToken(other.getAuthDeviceToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private long authDeviceToken_ ;
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public boolean hasAuthDeviceToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public long getAuthDeviceToken() {
        return authDeviceToken_;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder setAuthDeviceToken(long value) {
        bitField0_ |= 0x00000002;
        authDeviceToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 auth_device_token = 2;</code>
       */
      public Builder clearAuthDeviceToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authDeviceToken_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_DeauthorizeRemoteDevice_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_DeauthorizeRemoteDevice_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_DeauthorizeRemoteDevice_Request)
  }

  public interface CDeviceAuth_DeauthorizeRemoteDevice_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_DeauthorizeRemoteDevice_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDeviceAuth_DeauthorizeRemoteDevice_Response}
   */
  public static final class CDeviceAuth_DeauthorizeRemoteDevice_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_DeauthorizeRemoteDevice_Response)
      CDeviceAuth_DeauthorizeRemoteDevice_ResponseOrBuilder {
    // Use CDeviceAuth_DeauthorizeRemoteDevice_Response.newBuilder() to construct.
    private CDeviceAuth_DeauthorizeRemoteDevice_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_DeauthorizeRemoteDevice_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_DeauthorizeRemoteDevice_Response defaultInstance;
    public static CDeviceAuth_DeauthorizeRemoteDevice_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_DeauthorizeRemoteDevice_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_DeauthorizeRemoteDevice_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_DeauthorizeRemoteDevice_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_DeauthorizeRemoteDevice_Response>() {
      public CDeviceAuth_DeauthorizeRemoteDevice_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_DeauthorizeRemoteDevice_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_DeauthorizeRemoteDevice_Response> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_DeauthorizeRemoteDevice_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_DeauthorizeRemoteDevice_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_DeauthorizeRemoteDevice_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_DeauthorizeRemoteDevice_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_DeauthorizeRemoteDevice_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_DeauthorizeRemoteDevice_Response)
  }

  public interface CDeviceAuth_GetUsedAuthorizedDevices_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetUsedAuthorizedDevices_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Request}
   */
  public static final class CDeviceAuth_GetUsedAuthorizedDevices_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetUsedAuthorizedDevices_Request)
      CDeviceAuth_GetUsedAuthorizedDevices_RequestOrBuilder {
    // Use CDeviceAuth_GetUsedAuthorizedDevices_Request.newBuilder() to construct.
    private CDeviceAuth_GetUsedAuthorizedDevices_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetUsedAuthorizedDevices_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetUsedAuthorizedDevices_Request defaultInstance;
    public static CDeviceAuth_GetUsedAuthorizedDevices_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetUsedAuthorizedDevices_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetUsedAuthorizedDevices_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetUsedAuthorizedDevices_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetUsedAuthorizedDevices_Request>() {
      public CDeviceAuth_GetUsedAuthorizedDevices_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetUsedAuthorizedDevices_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetUsedAuthorizedDevices_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    private void initFields() {
      steamid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetUsedAuthorizedDevices_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetUsedAuthorizedDevices_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_GetUsedAuthorizedDevices_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetUsedAuthorizedDevices_Request)
  }

  public interface CDeviceAuth_GetUsedAuthorizedDevices_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetUsedAuthorizedDevices_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> 
        getDevicesList();
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device getDevices(int index);
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    int getDevicesCount();
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder> 
        getDevicesOrBuilderList();
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Response}
   */
  public static final class CDeviceAuth_GetUsedAuthorizedDevices_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetUsedAuthorizedDevices_Response)
      CDeviceAuth_GetUsedAuthorizedDevices_ResponseOrBuilder {
    // Use CDeviceAuth_GetUsedAuthorizedDevices_Response.newBuilder() to construct.
    private CDeviceAuth_GetUsedAuthorizedDevices_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetUsedAuthorizedDevices_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetUsedAuthorizedDevices_Response defaultInstance;
    public static CDeviceAuth_GetUsedAuthorizedDevices_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetUsedAuthorizedDevices_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetUsedAuthorizedDevices_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                devices_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device>();
                mutable_bitField0_ |= 0x00000001;
              }
              devices_.add(input.readMessage(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          devices_ = java.util.Collections.unmodifiableList(devices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetUsedAuthorizedDevices_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetUsedAuthorizedDevices_Response>() {
      public CDeviceAuth_GetUsedAuthorizedDevices_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetUsedAuthorizedDevices_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetUsedAuthorizedDevices_Response> getParserForType() {
      return PARSER;
    }

    public interface DeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      boolean hasAuthDeviceToken();
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      long getAuthDeviceToken();

      /**
       * <code>optional string device_name = 2;</code>
       */
      boolean hasDeviceName();
      /**
       * <code>optional string device_name = 2;</code>
       */
      java.lang.String getDeviceName();
      /**
       * <code>optional string device_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getDeviceNameBytes();

      /**
       * <code>optional fixed64 owner_steamid = 3;</code>
       */
      boolean hasOwnerSteamid();
      /**
       * <code>optional fixed64 owner_steamid = 3;</code>
       */
      long getOwnerSteamid();

      /**
       * <code>optional uint32 last_time_used = 4;</code>
       */
      boolean hasLastTimeUsed();
      /**
       * <code>optional uint32 last_time_used = 4;</code>
       */
      int getLastTimeUsed();

      /**
       * <code>optional uint32 last_app_played = 5;</code>
       */
      boolean hasLastAppPlayed();
      /**
       * <code>optional uint32 last_app_played = 5;</code>
       */
      int getLastAppPlayed();
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Response.Device}
     */
    public static final class Device extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
        DeviceOrBuilder {
      // Use Device.newBuilder() to construct.
      private Device(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Device(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Device defaultInstance;
      public static Device getDefaultInstance() {
        return defaultInstance;
      }

      public Device getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Device(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                authDeviceToken_ = input.readFixed64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                deviceName_ = bs;
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                ownerSteamid_ = input.readFixed64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                lastTimeUsed_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                lastAppPlayed_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder.class);
      }

      public static com.google.protobuf.Parser<Device> PARSER =
          new com.google.protobuf.AbstractParser<Device>() {
        public Device parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Device(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Device> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int AUTH_DEVICE_TOKEN_FIELD_NUMBER = 1;
      private long authDeviceToken_;
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      public boolean hasAuthDeviceToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 auth_device_token = 1;</code>
       */
      public long getAuthDeviceToken() {
        return authDeviceToken_;
      }

      public static final int DEVICE_NAME_FIELD_NUMBER = 2;
      private java.lang.Object deviceName_;
      /**
       * <code>optional string device_name = 2;</code>
       */
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device_name = 2;</code>
       */
      public java.lang.String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string device_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OWNER_STEAMID_FIELD_NUMBER = 3;
      private long ownerSteamid_;
      /**
       * <code>optional fixed64 owner_steamid = 3;</code>
       */
      public boolean hasOwnerSteamid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed64 owner_steamid = 3;</code>
       */
      public long getOwnerSteamid() {
        return ownerSteamid_;
      }

      public static final int LAST_TIME_USED_FIELD_NUMBER = 4;
      private int lastTimeUsed_;
      /**
       * <code>optional uint32 last_time_used = 4;</code>
       */
      public boolean hasLastTimeUsed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 last_time_used = 4;</code>
       */
      public int getLastTimeUsed() {
        return lastTimeUsed_;
      }

      public static final int LAST_APP_PLAYED_FIELD_NUMBER = 5;
      private int lastAppPlayed_;
      /**
       * <code>optional uint32 last_app_played = 5;</code>
       */
      public boolean hasLastAppPlayed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 last_app_played = 5;</code>
       */
      public int getLastAppPlayed() {
        return lastAppPlayed_;
      }

      private void initFields() {
        authDeviceToken_ = 0L;
        deviceName_ = "";
        ownerSteamid_ = 0L;
        lastTimeUsed_ = 0;
        lastAppPlayed_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFixed64(1, authDeviceToken_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDeviceNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFixed64(3, ownerSteamid_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, lastTimeUsed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, lastAppPlayed_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, authDeviceToken_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDeviceNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(3, ownerSteamid_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, lastTimeUsed_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, lastAppPlayed_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Response.Device}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder.class);
        }

        // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          authDeviceToken_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerSteamid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          lastTimeUsed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          lastAppPlayed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device getDefaultInstanceForType() {
          return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.getDefaultInstance();
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device build() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device buildPartial() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.authDeviceToken_ = authDeviceToken_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceName_ = deviceName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ownerSteamid_ = ownerSteamid_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.lastTimeUsed_ = lastTimeUsed_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.lastAppPlayed_ = lastAppPlayed_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device) {
            return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device other) {
          if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.getDefaultInstance()) return this;
          if (other.hasAuthDeviceToken()) {
            setAuthDeviceToken(other.getAuthDeviceToken());
          }
          if (other.hasDeviceName()) {
            bitField0_ |= 0x00000002;
            deviceName_ = other.deviceName_;
            onChanged();
          }
          if (other.hasOwnerSteamid()) {
            setOwnerSteamid(other.getOwnerSteamid());
          }
          if (other.hasLastTimeUsed()) {
            setLastTimeUsed(other.getLastTimeUsed());
          }
          if (other.hasLastAppPlayed()) {
            setLastAppPlayed(other.getLastAppPlayed());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long authDeviceToken_ ;
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public boolean hasAuthDeviceToken() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public long getAuthDeviceToken() {
          return authDeviceToken_;
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public Builder setAuthDeviceToken(long value) {
          bitField0_ |= 0x00000001;
          authDeviceToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 auth_device_token = 1;</code>
         */
        public Builder clearAuthDeviceToken() {
          bitField0_ = (bitField0_ & ~0x00000001);
          authDeviceToken_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object deviceName_ = "";
        /**
         * <code>optional string device_name = 2;</code>
         */
        public boolean hasDeviceName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public java.lang.String getDeviceName() {
          java.lang.Object ref = deviceName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              deviceName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceNameBytes() {
          java.lang.Object ref = deviceName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder setDeviceName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder clearDeviceName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceName_ = getDefaultInstance().getDeviceName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string device_name = 2;</code>
         */
        public Builder setDeviceNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceName_ = value;
          onChanged();
          return this;
        }

        private long ownerSteamid_ ;
        /**
         * <code>optional fixed64 owner_steamid = 3;</code>
         */
        public boolean hasOwnerSteamid() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional fixed64 owner_steamid = 3;</code>
         */
        public long getOwnerSteamid() {
          return ownerSteamid_;
        }
        /**
         * <code>optional fixed64 owner_steamid = 3;</code>
         */
        public Builder setOwnerSteamid(long value) {
          bitField0_ |= 0x00000004;
          ownerSteamid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 owner_steamid = 3;</code>
         */
        public Builder clearOwnerSteamid() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ownerSteamid_ = 0L;
          onChanged();
          return this;
        }

        private int lastTimeUsed_ ;
        /**
         * <code>optional uint32 last_time_used = 4;</code>
         */
        public boolean hasLastTimeUsed() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 last_time_used = 4;</code>
         */
        public int getLastTimeUsed() {
          return lastTimeUsed_;
        }
        /**
         * <code>optional uint32 last_time_used = 4;</code>
         */
        public Builder setLastTimeUsed(int value) {
          bitField0_ |= 0x00000008;
          lastTimeUsed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_time_used = 4;</code>
         */
        public Builder clearLastTimeUsed() {
          bitField0_ = (bitField0_ & ~0x00000008);
          lastTimeUsed_ = 0;
          onChanged();
          return this;
        }

        private int lastAppPlayed_ ;
        /**
         * <code>optional uint32 last_app_played = 5;</code>
         */
        public boolean hasLastAppPlayed() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 last_app_played = 5;</code>
         */
        public int getLastAppPlayed() {
          return lastAppPlayed_;
        }
        /**
         * <code>optional uint32 last_app_played = 5;</code>
         */
        public Builder setLastAppPlayed(int value) {
          bitField0_ |= 0x00000010;
          lastAppPlayed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_app_played = 5;</code>
         */
        public Builder clearLastAppPlayed() {
          bitField0_ = (bitField0_ & ~0x00000010);
          lastAppPlayed_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
      }

      static {
        defaultInstance = new Device(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
    }

    public static final int DEVICES_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> devices_;
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> getDevicesList() {
      return devices_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder> 
        getDevicesOrBuilderList() {
      return devices_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public int getDevicesCount() {
      return devices_.size();
    }
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device getDevices(int index) {
      return devices_.get(index);
    }
    /**
     * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
        int index) {
      return devices_.get(index);
    }

    private void initFields() {
      devices_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < devices_.size(); i++) {
        output.writeMessage(1, devices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < devices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, devices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetUsedAuthorizedDevices_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetUsedAuthorizedDevices_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDevicesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          devicesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response(this);
        int from_bitField0_ = bitField0_;
        if (devicesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            devices_ = java.util.Collections.unmodifiableList(devices_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.devices_ = devices_;
        } else {
          result.devices_ = devicesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.getDefaultInstance()) return this;
        if (devicesBuilder_ == null) {
          if (!other.devices_.isEmpty()) {
            if (devices_.isEmpty()) {
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDevicesIsMutable();
              devices_.addAll(other.devices_);
            }
            onChanged();
          }
        } else {
          if (!other.devices_.isEmpty()) {
            if (devicesBuilder_.isEmpty()) {
              devicesBuilder_.dispose();
              devicesBuilder_ = null;
              devices_ = other.devices_;
              bitField0_ = (bitField0_ & ~0x00000001);
              devicesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDevicesFieldBuilder() : null;
            } else {
              devicesBuilder_.addAllMessages(other.devices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> devices_ =
        java.util.Collections.emptyList();
      private void ensureDevicesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          devices_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device>(devices_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder> devicesBuilder_;

      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> getDevicesList() {
        if (devicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(devices_);
        } else {
          return devicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public int getDevicesCount() {
        if (devicesBuilder_ == null) {
          return devices_.size();
        } else {
          return devicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device getDevices(int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);
        } else {
          return devicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder setDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.set(index, value);
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder setDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.set(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device value) {
        if (devicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDevicesIsMutable();
          devices_.add(index, value);
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addDevices(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder builderForValue) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.add(index, builderForValue.build());
          onChanged();
        } else {
          devicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder addAllDevices(
          java.lang.Iterable<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device> values) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, devices_);
          onChanged();
        } else {
          devicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder clearDevices() {
        if (devicesBuilder_ == null) {
          devices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          devicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public Builder removeDevices(int index) {
        if (devicesBuilder_ == null) {
          ensureDevicesIsMutable();
          devices_.remove(index);
          onChanged();
        } else {
          devicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder getDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder getDevicesOrBuilder(
          int index) {
        if (devicesBuilder_ == null) {
          return devices_.get(index);  } else {
          return devicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder> 
           getDevicesOrBuilderList() {
        if (devicesBuilder_ != null) {
          return devicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(devices_);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder addDevicesBuilder() {
        return getDevicesFieldBuilder().addBuilder(
            SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder addDevicesBuilder(
          int index) {
        return getDevicesFieldBuilder().addBuilder(
            index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder> 
           getDevicesBuilderList() {
        return getDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder> 
          getDevicesFieldBuilder() {
        if (devicesBuilder_ == null) {
          devicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetUsedAuthorizedDevices_Response.DeviceOrBuilder>(
                  devices_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          devices_ = null;
        }
        return devicesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetUsedAuthorizedDevices_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_GetUsedAuthorizedDevices_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetUsedAuthorizedDevices_Response)
  }

  public interface CDeviceAuth_GetAuthorizedBorrowers_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetAuthorizedBorrowers_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    boolean hasIncludeCanceled();
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    boolean getIncludeCanceled();

    /**
     * <code>optional bool include_pending = 3;</code>
     */
    boolean hasIncludePending();
    /**
     * <code>optional bool include_pending = 3;</code>
     */
    boolean getIncludePending();
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Request}
   */
  public static final class CDeviceAuth_GetAuthorizedBorrowers_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetAuthorizedBorrowers_Request)
      CDeviceAuth_GetAuthorizedBorrowers_RequestOrBuilder {
    // Use CDeviceAuth_GetAuthorizedBorrowers_Request.newBuilder() to construct.
    private CDeviceAuth_GetAuthorizedBorrowers_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetAuthorizedBorrowers_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetAuthorizedBorrowers_Request defaultInstance;
    public static CDeviceAuth_GetAuthorizedBorrowers_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetAuthorizedBorrowers_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetAuthorizedBorrowers_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              includeCanceled_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              includePending_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetAuthorizedBorrowers_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetAuthorizedBorrowers_Request>() {
      public CDeviceAuth_GetAuthorizedBorrowers_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetAuthorizedBorrowers_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetAuthorizedBorrowers_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int INCLUDE_CANCELED_FIELD_NUMBER = 2;
    private boolean includeCanceled_;
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    public boolean hasIncludeCanceled() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool include_canceled = 2;</code>
     */
    public boolean getIncludeCanceled() {
      return includeCanceled_;
    }

    public static final int INCLUDE_PENDING_FIELD_NUMBER = 3;
    private boolean includePending_;
    /**
     * <code>optional bool include_pending = 3;</code>
     */
    public boolean hasIncludePending() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool include_pending = 3;</code>
     */
    public boolean getIncludePending() {
      return includePending_;
    }

    private void initFields() {
      steamid_ = 0L;
      includeCanceled_ = false;
      includePending_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, includeCanceled_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, includePending_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, includeCanceled_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, includePending_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetAuthorizedBorrowers_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        includeCanceled_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        includePending_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.includeCanceled_ = includeCanceled_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.includePending_ = includePending_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (other.hasIncludeCanceled()) {
          setIncludeCanceled(other.getIncludeCanceled());
        }
        if (other.hasIncludePending()) {
          setIncludePending(other.getIncludePending());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private boolean includeCanceled_ ;
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public boolean hasIncludeCanceled() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public boolean getIncludeCanceled() {
        return includeCanceled_;
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public Builder setIncludeCanceled(boolean value) {
        bitField0_ |= 0x00000002;
        includeCanceled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_canceled = 2;</code>
       */
      public Builder clearIncludeCanceled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        includeCanceled_ = false;
        onChanged();
        return this;
      }

      private boolean includePending_ ;
      /**
       * <code>optional bool include_pending = 3;</code>
       */
      public boolean hasIncludePending() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool include_pending = 3;</code>
       */
      public boolean getIncludePending() {
        return includePending_;
      }
      /**
       * <code>optional bool include_pending = 3;</code>
       */
      public Builder setIncludePending(boolean value) {
        bitField0_ |= 0x00000004;
        includePending_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_pending = 3;</code>
       */
      public Builder clearIncludePending() {
        bitField0_ = (bitField0_ & ~0x00000004);
        includePending_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetAuthorizedBorrowers_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_GetAuthorizedBorrowers_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetAuthorizedBorrowers_Request)
  }

  public interface CDeviceAuth_GetAuthorizedBorrowers_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetAuthorizedBorrowers_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> 
        getBorrowersList();
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower getBorrowers(int index);
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    int getBorrowersCount();
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder> 
        getBorrowersOrBuilderList();
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder getBorrowersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Response}
   */
  public static final class CDeviceAuth_GetAuthorizedBorrowers_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_GetAuthorizedBorrowers_Response)
      CDeviceAuth_GetAuthorizedBorrowers_ResponseOrBuilder {
    // Use CDeviceAuth_GetAuthorizedBorrowers_Response.newBuilder() to construct.
    private CDeviceAuth_GetAuthorizedBorrowers_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_GetAuthorizedBorrowers_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_GetAuthorizedBorrowers_Response defaultInstance;
    public static CDeviceAuth_GetAuthorizedBorrowers_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_GetAuthorizedBorrowers_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_GetAuthorizedBorrowers_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                borrowers_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower>();
                mutable_bitField0_ |= 0x00000001;
              }
              borrowers_.add(input.readMessage(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          borrowers_ = java.util.Collections.unmodifiableList(borrowers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_GetAuthorizedBorrowers_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_GetAuthorizedBorrowers_Response>() {
      public CDeviceAuth_GetAuthorizedBorrowers_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_GetAuthorizedBorrowers_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_GetAuthorizedBorrowers_Response> getParserForType() {
      return PARSER;
    }

    public interface BorrowerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      boolean hasSteamid();
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      long getSteamid();

      /**
       * <code>optional bool is_pending = 2;</code>
       */
      boolean hasIsPending();
      /**
       * <code>optional bool is_pending = 2;</code>
       */
      boolean getIsPending();

      /**
       * <code>optional bool is_canceled = 3;</code>
       */
      boolean hasIsCanceled();
      /**
       * <code>optional bool is_canceled = 3;</code>
       */
      boolean getIsCanceled();

      /**
       * <code>optional uint32 time_created = 4;</code>
       */
      boolean hasTimeCreated();
      /**
       * <code>optional uint32 time_created = 4;</code>
       */
      int getTimeCreated();
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower}
     */
    public static final class Borrower extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
        BorrowerOrBuilder {
      // Use Borrower.newBuilder() to construct.
      private Borrower(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Borrower(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Borrower defaultInstance;
      public static Borrower getDefaultInstance() {
        return defaultInstance;
      }

      public Borrower getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Borrower(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                steamid_ = input.readFixed64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                isPending_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                isCanceled_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                timeCreated_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder.class);
      }

      public static com.google.protobuf.Parser<Borrower> PARSER =
          new com.google.protobuf.AbstractParser<Borrower>() {
        public Borrower parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Borrower(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Borrower> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int STEAMID_FIELD_NUMBER = 1;
      private long steamid_;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }

      public static final int IS_PENDING_FIELD_NUMBER = 2;
      private boolean isPending_;
      /**
       * <code>optional bool is_pending = 2;</code>
       */
      public boolean hasIsPending() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_pending = 2;</code>
       */
      public boolean getIsPending() {
        return isPending_;
      }

      public static final int IS_CANCELED_FIELD_NUMBER = 3;
      private boolean isCanceled_;
      /**
       * <code>optional bool is_canceled = 3;</code>
       */
      public boolean hasIsCanceled() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_canceled = 3;</code>
       */
      public boolean getIsCanceled() {
        return isCanceled_;
      }

      public static final int TIME_CREATED_FIELD_NUMBER = 4;
      private int timeCreated_;
      /**
       * <code>optional uint32 time_created = 4;</code>
       */
      public boolean hasTimeCreated() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time_created = 4;</code>
       */
      public int getTimeCreated() {
        return timeCreated_;
      }

      private void initFields() {
        steamid_ = 0L;
        isPending_ = false;
        isCanceled_ = false;
        timeCreated_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFixed64(1, steamid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, isPending_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, isCanceled_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, timeCreated_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, steamid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isPending_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, isCanceled_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, timeCreated_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder.class);
        }

        // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          steamid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          isPending_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          isCanceled_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          timeCreated_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower getDefaultInstanceForType() {
          return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.getDefaultInstance();
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower build() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower buildPartial() {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.steamid_ = steamid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.isPending_ = isPending_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isCanceled_ = isCanceled_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timeCreated_ = timeCreated_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower) {
            return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower other) {
          if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.getDefaultInstance()) return this;
          if (other.hasSteamid()) {
            setSteamid(other.getSteamid());
          }
          if (other.hasIsPending()) {
            setIsPending(other.getIsPending());
          }
          if (other.hasIsCanceled()) {
            setIsCanceled(other.getIsCanceled());
          }
          if (other.hasTimeCreated()) {
            setTimeCreated(other.getTimeCreated());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long steamid_ ;
        /**
         * <code>optional fixed64 steamid = 1;</code>
         */
        public boolean hasSteamid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional fixed64 steamid = 1;</code>
         */
        public long getSteamid() {
          return steamid_;
        }
        /**
         * <code>optional fixed64 steamid = 1;</code>
         */
        public Builder setSteamid(long value) {
          bitField0_ |= 0x00000001;
          steamid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steamid = 1;</code>
         */
        public Builder clearSteamid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          steamid_ = 0L;
          onChanged();
          return this;
        }

        private boolean isPending_ ;
        /**
         * <code>optional bool is_pending = 2;</code>
         */
        public boolean hasIsPending() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool is_pending = 2;</code>
         */
        public boolean getIsPending() {
          return isPending_;
        }
        /**
         * <code>optional bool is_pending = 2;</code>
         */
        public Builder setIsPending(boolean value) {
          bitField0_ |= 0x00000002;
          isPending_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_pending = 2;</code>
         */
        public Builder clearIsPending() {
          bitField0_ = (bitField0_ & ~0x00000002);
          isPending_ = false;
          onChanged();
          return this;
        }

        private boolean isCanceled_ ;
        /**
         * <code>optional bool is_canceled = 3;</code>
         */
        public boolean hasIsCanceled() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool is_canceled = 3;</code>
         */
        public boolean getIsCanceled() {
          return isCanceled_;
        }
        /**
         * <code>optional bool is_canceled = 3;</code>
         */
        public Builder setIsCanceled(boolean value) {
          bitField0_ |= 0x00000004;
          isCanceled_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_canceled = 3;</code>
         */
        public Builder clearIsCanceled() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isCanceled_ = false;
          onChanged();
          return this;
        }

        private int timeCreated_ ;
        /**
         * <code>optional uint32 time_created = 4;</code>
         */
        public boolean hasTimeCreated() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 time_created = 4;</code>
         */
        public int getTimeCreated() {
          return timeCreated_;
        }
        /**
         * <code>optional uint32 time_created = 4;</code>
         */
        public Builder setTimeCreated(int value) {
          bitField0_ |= 0x00000008;
          timeCreated_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_created = 4;</code>
         */
        public Builder clearTimeCreated() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timeCreated_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
      }

      static {
        defaultInstance = new Borrower(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
    }

    public static final int BORROWERS_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> borrowers_;
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> getBorrowersList() {
      return borrowers_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder> 
        getBorrowersOrBuilderList() {
      return borrowers_;
    }
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    public int getBorrowersCount() {
      return borrowers_.size();
    }
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower getBorrowers(int index) {
      return borrowers_.get(index);
    }
    /**
     * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
     */
    public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder getBorrowersOrBuilder(
        int index) {
      return borrowers_.get(index);
    }

    private void initFields() {
      borrowers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < borrowers_.size(); i++) {
        output.writeMessage(1, borrowers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < borrowers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, borrowers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_GetAuthorizedBorrowers_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_GetAuthorizedBorrowers_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBorrowersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (borrowersBuilder_ == null) {
          borrowers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          borrowersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response(this);
        int from_bitField0_ = bitField0_;
        if (borrowersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            borrowers_ = java.util.Collections.unmodifiableList(borrowers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.borrowers_ = borrowers_;
        } else {
          result.borrowers_ = borrowersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.getDefaultInstance()) return this;
        if (borrowersBuilder_ == null) {
          if (!other.borrowers_.isEmpty()) {
            if (borrowers_.isEmpty()) {
              borrowers_ = other.borrowers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBorrowersIsMutable();
              borrowers_.addAll(other.borrowers_);
            }
            onChanged();
          }
        } else {
          if (!other.borrowers_.isEmpty()) {
            if (borrowersBuilder_.isEmpty()) {
              borrowersBuilder_.dispose();
              borrowersBuilder_ = null;
              borrowers_ = other.borrowers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              borrowersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBorrowersFieldBuilder() : null;
            } else {
              borrowersBuilder_.addAllMessages(other.borrowers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> borrowers_ =
        java.util.Collections.emptyList();
      private void ensureBorrowersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          borrowers_ = new java.util.ArrayList<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower>(borrowers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder> borrowersBuilder_;

      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> getBorrowersList() {
        if (borrowersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(borrowers_);
        } else {
          return borrowersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public int getBorrowersCount() {
        if (borrowersBuilder_ == null) {
          return borrowers_.size();
        } else {
          return borrowersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower getBorrowers(int index) {
        if (borrowersBuilder_ == null) {
          return borrowers_.get(index);
        } else {
          return borrowersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder setBorrowers(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower value) {
        if (borrowersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBorrowersIsMutable();
          borrowers_.set(index, value);
          onChanged();
        } else {
          borrowersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder setBorrowers(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder builderForValue) {
        if (borrowersBuilder_ == null) {
          ensureBorrowersIsMutable();
          borrowers_.set(index, builderForValue.build());
          onChanged();
        } else {
          borrowersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder addBorrowers(SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower value) {
        if (borrowersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBorrowersIsMutable();
          borrowers_.add(value);
          onChanged();
        } else {
          borrowersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder addBorrowers(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower value) {
        if (borrowersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBorrowersIsMutable();
          borrowers_.add(index, value);
          onChanged();
        } else {
          borrowersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder addBorrowers(
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder builderForValue) {
        if (borrowersBuilder_ == null) {
          ensureBorrowersIsMutable();
          borrowers_.add(builderForValue.build());
          onChanged();
        } else {
          borrowersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder addBorrowers(
          int index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder builderForValue) {
        if (borrowersBuilder_ == null) {
          ensureBorrowersIsMutable();
          borrowers_.add(index, builderForValue.build());
          onChanged();
        } else {
          borrowersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder addAllBorrowers(
          java.lang.Iterable<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower> values) {
        if (borrowersBuilder_ == null) {
          ensureBorrowersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, borrowers_);
          onChanged();
        } else {
          borrowersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder clearBorrowers() {
        if (borrowersBuilder_ == null) {
          borrowers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          borrowersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public Builder removeBorrowers(int index) {
        if (borrowersBuilder_ == null) {
          ensureBorrowersIsMutable();
          borrowers_.remove(index);
          onChanged();
        } else {
          borrowersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder getBorrowersBuilder(
          int index) {
        return getBorrowersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder getBorrowersOrBuilder(
          int index) {
        if (borrowersBuilder_ == null) {
          return borrowers_.get(index);  } else {
          return borrowersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public java.util.List<? extends SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder> 
           getBorrowersOrBuilderList() {
        if (borrowersBuilder_ != null) {
          return borrowersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(borrowers_);
        }
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder addBorrowersBuilder() {
        return getBorrowersFieldBuilder().addBuilder(
            SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder addBorrowersBuilder(
          int index) {
        return getBorrowersFieldBuilder().addBuilder(
            index, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.getDefaultInstance());
      }
      /**
       * <code>repeated .CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;</code>
       */
      public java.util.List<SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder> 
           getBorrowersBuilderList() {
        return getBorrowersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder> 
          getBorrowersFieldBuilder() {
        if (borrowersBuilder_ == null) {
          borrowersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.Builder, SteammessagesDeviceauthSteamclient.CDeviceAuth_GetAuthorizedBorrowers_Response.BorrowerOrBuilder>(
                  borrowers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          borrowers_ = null;
        }
        return borrowersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_GetAuthorizedBorrowers_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_GetAuthorizedBorrowers_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_GetAuthorizedBorrowers_Response)
  }

  public interface CDeviceAuth_AddAuthorizedBorrowers_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AddAuthorizedBorrowers_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    java.util.List<java.lang.Long> getSteamidBorrowerList();
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    int getSteamidBorrowerCount();
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    long getSteamidBorrower(int index);
  }
  /**
   * Protobuf type {@code CDeviceAuth_AddAuthorizedBorrowers_Request}
   */
  public static final class CDeviceAuth_AddAuthorizedBorrowers_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AddAuthorizedBorrowers_Request)
      CDeviceAuth_AddAuthorizedBorrowers_RequestOrBuilder {
    // Use CDeviceAuth_AddAuthorizedBorrowers_Request.newBuilder() to construct.
    private CDeviceAuth_AddAuthorizedBorrowers_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AddAuthorizedBorrowers_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AddAuthorizedBorrowers_Request defaultInstance;
    public static CDeviceAuth_AddAuthorizedBorrowers_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AddAuthorizedBorrowers_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AddAuthorizedBorrowers_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                steamidBorrower_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              steamidBorrower_.add(input.readFixed64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                steamidBorrower_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                steamidBorrower_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = java.util.Collections.unmodifiableList(steamidBorrower_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AddAuthorizedBorrowers_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AddAuthorizedBorrowers_Request>() {
      public CDeviceAuth_AddAuthorizedBorrowers_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AddAuthorizedBorrowers_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AddAuthorizedBorrowers_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int STEAMID_BORROWER_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> steamidBorrower_;
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getSteamidBorrowerList() {
      return steamidBorrower_;
    }
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public int getSteamidBorrowerCount() {
      return steamidBorrower_.size();
    }
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public long getSteamidBorrower(int index) {
      return steamidBorrower_.get(index);
    }

    private void initFields() {
      steamid_ = 0L;
      steamidBorrower_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      for (int i = 0; i < steamidBorrower_.size(); i++) {
        output.writeFixed64(2, steamidBorrower_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSteamidBorrowerList().size();
        size += dataSize;
        size += 1 * getSteamidBorrowerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AddAuthorizedBorrowers_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AddAuthorizedBorrowers_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        steamidBorrower_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = java.util.Collections.unmodifiableList(steamidBorrower_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.steamidBorrower_ = steamidBorrower_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (!other.steamidBorrower_.isEmpty()) {
          if (steamidBorrower_.isEmpty()) {
            steamidBorrower_ = other.steamidBorrower_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSteamidBorrowerIsMutable();
            steamidBorrower_.addAll(other.steamidBorrower_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> steamidBorrower_ = java.util.Collections.emptyList();
      private void ensureSteamidBorrowerIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = new java.util.ArrayList<java.lang.Long>(steamidBorrower_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getSteamidBorrowerList() {
        return java.util.Collections.unmodifiableList(steamidBorrower_);
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public int getSteamidBorrowerCount() {
        return steamidBorrower_.size();
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public long getSteamidBorrower(int index) {
        return steamidBorrower_.get(index);
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder setSteamidBorrower(
          int index, long value) {
        ensureSteamidBorrowerIsMutable();
        steamidBorrower_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder addSteamidBorrower(long value) {
        ensureSteamidBorrowerIsMutable();
        steamidBorrower_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder addAllSteamidBorrower(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSteamidBorrowerIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, steamidBorrower_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder clearSteamidBorrower() {
        steamidBorrower_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AddAuthorizedBorrowers_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_AddAuthorizedBorrowers_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AddAuthorizedBorrowers_Request)
  }

  public interface CDeviceAuth_AddAuthorizedBorrowers_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_AddAuthorizedBorrowers_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 seconds_to_wait = 1;</code>
     */
    boolean hasSecondsToWait();
    /**
     * <code>optional int32 seconds_to_wait = 1;</code>
     */
    int getSecondsToWait();
  }
  /**
   * Protobuf type {@code CDeviceAuth_AddAuthorizedBorrowers_Response}
   */
  public static final class CDeviceAuth_AddAuthorizedBorrowers_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_AddAuthorizedBorrowers_Response)
      CDeviceAuth_AddAuthorizedBorrowers_ResponseOrBuilder {
    // Use CDeviceAuth_AddAuthorizedBorrowers_Response.newBuilder() to construct.
    private CDeviceAuth_AddAuthorizedBorrowers_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_AddAuthorizedBorrowers_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_AddAuthorizedBorrowers_Response defaultInstance;
    public static CDeviceAuth_AddAuthorizedBorrowers_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_AddAuthorizedBorrowers_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_AddAuthorizedBorrowers_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsToWait_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_AddAuthorizedBorrowers_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_AddAuthorizedBorrowers_Response>() {
      public CDeviceAuth_AddAuthorizedBorrowers_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_AddAuthorizedBorrowers_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_AddAuthorizedBorrowers_Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SECONDS_TO_WAIT_FIELD_NUMBER = 1;
    private int secondsToWait_;
    /**
     * <code>optional int32 seconds_to_wait = 1;</code>
     */
    public boolean hasSecondsToWait() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seconds_to_wait = 1;</code>
     */
    public int getSecondsToWait() {
      return secondsToWait_;
    }

    private void initFields() {
      secondsToWait_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, secondsToWait_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, secondsToWait_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_AddAuthorizedBorrowers_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_AddAuthorizedBorrowers_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        secondsToWait_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsToWait_ = secondsToWait_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response.getDefaultInstance()) return this;
        if (other.hasSecondsToWait()) {
          setSecondsToWait(other.getSecondsToWait());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_AddAuthorizedBorrowers_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int secondsToWait_ ;
      /**
       * <code>optional int32 seconds_to_wait = 1;</code>
       */
      public boolean hasSecondsToWait() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seconds_to_wait = 1;</code>
       */
      public int getSecondsToWait() {
        return secondsToWait_;
      }
      /**
       * <code>optional int32 seconds_to_wait = 1;</code>
       */
      public Builder setSecondsToWait(int value) {
        bitField0_ |= 0x00000001;
        secondsToWait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seconds_to_wait = 1;</code>
       */
      public Builder clearSecondsToWait() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsToWait_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_AddAuthorizedBorrowers_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_AddAuthorizedBorrowers_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_AddAuthorizedBorrowers_Response)
  }

  public interface CDeviceAuth_RemoveAuthorizedBorrowers_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_RemoveAuthorizedBorrowers_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    boolean hasSteamid();
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    long getSteamid();

    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    java.util.List<java.lang.Long> getSteamidBorrowerList();
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    int getSteamidBorrowerCount();
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    long getSteamidBorrower(int index);
  }
  /**
   * Protobuf type {@code CDeviceAuth_RemoveAuthorizedBorrowers_Request}
   */
  public static final class CDeviceAuth_RemoveAuthorizedBorrowers_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_RemoveAuthorizedBorrowers_Request)
      CDeviceAuth_RemoveAuthorizedBorrowers_RequestOrBuilder {
    // Use CDeviceAuth_RemoveAuthorizedBorrowers_Request.newBuilder() to construct.
    private CDeviceAuth_RemoveAuthorizedBorrowers_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_RemoveAuthorizedBorrowers_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_RemoveAuthorizedBorrowers_Request defaultInstance;
    public static CDeviceAuth_RemoveAuthorizedBorrowers_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_RemoveAuthorizedBorrowers_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_RemoveAuthorizedBorrowers_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              steamid_ = input.readFixed64();
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                steamidBorrower_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              steamidBorrower_.add(input.readFixed64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                steamidBorrower_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                steamidBorrower_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = java.util.Collections.unmodifiableList(steamidBorrower_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_RemoveAuthorizedBorrowers_Request> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_RemoveAuthorizedBorrowers_Request>() {
      public CDeviceAuth_RemoveAuthorizedBorrowers_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_RemoveAuthorizedBorrowers_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_RemoveAuthorizedBorrowers_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STEAMID_FIELD_NUMBER = 1;
    private long steamid_;
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public boolean hasSteamid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 steamid = 1;</code>
     */
    public long getSteamid() {
      return steamid_;
    }

    public static final int STEAMID_BORROWER_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> steamidBorrower_;
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getSteamidBorrowerList() {
      return steamidBorrower_;
    }
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public int getSteamidBorrowerCount() {
      return steamidBorrower_.size();
    }
    /**
     * <code>repeated fixed64 steamid_borrower = 2;</code>
     */
    public long getSteamidBorrower(int index) {
      return steamidBorrower_.get(index);
    }

    private void initFields() {
      steamid_ = 0L;
      steamidBorrower_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, steamid_);
      }
      for (int i = 0; i < steamidBorrower_.size(); i++) {
        output.writeFixed64(2, steamidBorrower_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, steamid_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSteamidBorrowerList().size();
        size += dataSize;
        size += 1 * getSteamidBorrowerList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_RemoveAuthorizedBorrowers_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_RemoveAuthorizedBorrowers_Request)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        steamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        steamidBorrower_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamid_ = steamid_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = java.util.Collections.unmodifiableList(steamidBorrower_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.steamidBorrower_ = steamidBorrower_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request.getDefaultInstance()) return this;
        if (other.hasSteamid()) {
          setSteamid(other.getSteamid());
        }
        if (!other.steamidBorrower_.isEmpty()) {
          if (steamidBorrower_.isEmpty()) {
            steamidBorrower_ = other.steamidBorrower_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSteamidBorrowerIsMutable();
            steamidBorrower_.addAll(other.steamidBorrower_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamid_ ;
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public long getSteamid() {
        return steamid_;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder setSteamid(long value) {
        bitField0_ |= 0x00000001;
        steamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid = 1;</code>
       */
      public Builder clearSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamid_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> steamidBorrower_ = java.util.Collections.emptyList();
      private void ensureSteamidBorrowerIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          steamidBorrower_ = new java.util.ArrayList<java.lang.Long>(steamidBorrower_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getSteamidBorrowerList() {
        return java.util.Collections.unmodifiableList(steamidBorrower_);
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public int getSteamidBorrowerCount() {
        return steamidBorrower_.size();
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public long getSteamidBorrower(int index) {
        return steamidBorrower_.get(index);
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder setSteamidBorrower(
          int index, long value) {
        ensureSteamidBorrowerIsMutable();
        steamidBorrower_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder addSteamidBorrower(long value) {
        ensureSteamidBorrowerIsMutable();
        steamidBorrower_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder addAllSteamidBorrower(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSteamidBorrowerIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, steamidBorrower_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 steamid_borrower = 2;</code>
       */
      public Builder clearSteamidBorrower() {
        steamidBorrower_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_RemoveAuthorizedBorrowers_Request)
    }

    static {
      defaultInstance = new CDeviceAuth_RemoveAuthorizedBorrowers_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_RemoveAuthorizedBorrowers_Request)
  }

  public interface CDeviceAuth_RemoveAuthorizedBorrowers_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDeviceAuth_RemoveAuthorizedBorrowers_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CDeviceAuth_RemoveAuthorizedBorrowers_Response}
   */
  public static final class CDeviceAuth_RemoveAuthorizedBorrowers_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDeviceAuth_RemoveAuthorizedBorrowers_Response)
      CDeviceAuth_RemoveAuthorizedBorrowers_ResponseOrBuilder {
    // Use CDeviceAuth_RemoveAuthorizedBorrowers_Response.newBuilder() to construct.
    private CDeviceAuth_RemoveAuthorizedBorrowers_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDeviceAuth_RemoveAuthorizedBorrowers_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDeviceAuth_RemoveAuthorizedBorrowers_Response defaultInstance;
    public static CDeviceAuth_RemoveAuthorizedBorrowers_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CDeviceAuth_RemoveAuthorizedBorrowers_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDeviceAuth_RemoveAuthorizedBorrowers_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CDeviceAuth_RemoveAuthorizedBorrowers_Response> PARSER =
        new com.google.protobuf.AbstractParser<CDeviceAuth_RemoveAuthorizedBorrowers_Response>() {
      public CDeviceAuth_RemoveAuthorizedBorrowers_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDeviceAuth_RemoveAuthorizedBorrowers_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDeviceAuth_RemoveAuthorizedBorrowers_Response> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDeviceAuth_RemoveAuthorizedBorrowers_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDeviceAuth_RemoveAuthorizedBorrowers_Response)
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.class, SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.Builder.class);
      }

      // Construct using SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesDeviceauthSteamclient.internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response getDefaultInstanceForType() {
        return SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.getDefaultInstance();
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response build() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response buildPartial() {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response result = new SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response) {
          return mergeFrom((SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response other) {
        if (other == SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesDeviceauthSteamclient.CDeviceAuth_RemoveAuthorizedBorrowers_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDeviceAuth_RemoveAuthorizedBorrowers_Response)
    }

    static {
      defaultInstance = new CDeviceAuth_RemoveAuthorizedBorrowers_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDeviceAuth_RemoveAuthorizedBorrowers_Response)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*steammessages_deviceauth.steamclient.p" +
      "roto\032,steammessages_unified_base.steamcl" +
      "ient.proto\"X\n+CDeviceAuth_GetOwnAuthoriz" +
      "edDevices_Request\022\017\n\007steamid\030\001 \001(\006\022\030\n\020in" +
      "clude_canceled\030\002 \001(\010\"\270\002\n,CDeviceAuth_Get" +
      "OwnAuthorizedDevices_Response\022E\n\007devices" +
      "\030\001 \003(\01324.CDeviceAuth_GetOwnAuthorizedDev" +
      "ices_Response.Device\032\300\001\n\006Device\022\031\n\021auth_" +
      "device_token\030\001 \001(\006\022\023\n\013device_name\030\002 \001(\t\022" +
      "\022\n\nis_pending\030\003 \001(\010\022\023\n\013is_canceled\030\004 \001(\010",
      "\022\026\n\016last_time_used\030\005 \001(\r\022\030\n\020last_borrowe" +
      "r_id\030\006 \001(\006\022\027\n\017last_app_played\030\007 \001(\r\022\022\n\ni" +
      "s_limited\030\010 \001(\010\"\205\001\n.CDeviceAuth_AcceptAu" +
      "thorizationRequest_Request\022\017\n\007steamid\030\001 " +
      "\001(\006\022\031\n\021auth_device_token\030\002 \001(\006\022\021\n\tauth_c" +
      "ode\030\003 \001(\006\022\024\n\014from_steamid\030\004 \001(\006\"1\n/CDevi" +
      "ceAuth_AcceptAuthorizationRequest_Respon" +
      "se\"W\n)CDeviceAuth_AuthorizeRemoteDevice_" +
      "Request\022\017\n\007steamid\030\001 \001(\006\022\031\n\021auth_device_" +
      "token\030\002 \001(\006\",\n*CDeviceAuth_AuthorizeRemo",
      "teDevice_Response\"Y\n+CDeviceAuth_Deautho" +
      "rizeRemoteDevice_Request\022\017\n\007steamid\030\001 \001(" +
      "\006\022\031\n\021auth_device_token\030\002 \001(\006\".\n,CDeviceA" +
      "uth_DeauthorizeRemoteDevice_Response\"?\n," +
      "CDeviceAuth_GetUsedAuthorizedDevices_Req" +
      "uest\022\017\n\007steamid\030\001 \001(\006\"\372\001\n-CDeviceAuth_Ge" +
      "tUsedAuthorizedDevices_Response\022F\n\007devic" +
      "es\030\001 \003(\01325.CDeviceAuth_GetUsedAuthorized" +
      "Devices_Response.Device\032\200\001\n\006Device\022\031\n\021au" +
      "th_device_token\030\001 \001(\006\022\023\n\013device_name\030\002 \001",
      "(\t\022\025\n\rowner_steamid\030\003 \001(\006\022\026\n\016last_time_u" +
      "sed\030\004 \001(\r\022\027\n\017last_app_played\030\005 \001(\r\"p\n*CD" +
      "eviceAuth_GetAuthorizedBorrowers_Request" +
      "\022\017\n\007steamid\030\001 \001(\006\022\030\n\020include_canceled\030\002 " +
      "\001(\010\022\027\n\017include_pending\030\003 \001(\010\"\323\001\n+CDevice" +
      "Auth_GetAuthorizedBorrowers_Response\022H\n\t" +
      "borrowers\030\001 \003(\01325.CDeviceAuth_GetAuthori" +
      "zedBorrowers_Response.Borrower\032Z\n\010Borrow" +
      "er\022\017\n\007steamid\030\001 \001(\006\022\022\n\nis_pending\030\002 \001(\010\022" +
      "\023\n\013is_canceled\030\003 \001(\010\022\024\n\014time_created\030\004 \001",
      "(\r\"W\n*CDeviceAuth_AddAuthorizedBorrowers" +
      "_Request\022\017\n\007steamid\030\001 \001(\006\022\030\n\020steamid_bor" +
      "rower\030\002 \003(\006\"F\n+CDeviceAuth_AddAuthorized" +
      "Borrowers_Response\022\027\n\017seconds_to_wait\030\001 " +
      "\001(\005\"Z\n-CDeviceAuth_RemoveAuthorizedBorro" +
      "wers_Request\022\017\n\007steamid\030\001 \001(\006\022\030\n\020steamid" +
      "_borrower\030\002 \003(\006\"0\n.CDeviceAuth_RemoveAut" +
      "horizedBorrowers_Response2\267\013\n\nDeviceAuth" +
      "\022\232\001\n\027GetOwnAuthorizedDevices\022,.CDeviceAu" +
      "th_GetOwnAuthorizedDevices_Request\032-.CDe",
      "viceAuth_GetOwnAuthorizedDevices_Respons" +
      "e\"\"\202\265\030\036Get list of authorized devices\022\265\001" +
      "\n\032AcceptAuthorizationRequest\022/.CDeviceAu" +
      "th_AcceptAuthorizationRequest_Request\0320." +
      "CDeviceAuth_AcceptAuthorizationRequest_R" +
      "esponse\"4\202\265\0300Accept an authorization req" +
      "uest by another users\022\252\001\n\025AuthorizeRemot" +
      "eDevice\022*.CDeviceAuth_AuthorizeRemoteDev" +
      "ice_Request\032+.CDeviceAuth_AuthorizeRemot" +
      "eDevice_Response\"8\202\265\0304Authorize own remo",
      "te device that has pending request\022\233\001\n\027D" +
      "eauthorizeRemoteDevice\022,.CDeviceAuth_Dea" +
      "uthorizeRemoteDevice_Request\032-.CDeviceAu" +
      "th_DeauthorizeRemoteDevice_Response\"#\202\265\030" +
      "\037Revoke own device authorization\022\273\001\n\030Get" +
      "UsedAuthorizedDevices\022-.CDeviceAuth_GetU" +
      "sedAuthorizedDevices_Request\032..CDeviceAu" +
      "th_GetUsedAuthorizedDevices_Response\"@\202\265" +
      "\030<Get list of authorized devices user pl" +
      "ayed borrowed games on\022\262\001\n\026GetAuthorized",
      "Borrowers\022+.CDeviceAuth_GetAuthorizedBor" +
      "rowers_Request\032,.CDeviceAuth_GetAuthoriz" +
      "edBorrowers_Response\"=\202\265\0309Get list of us" +
      "ers that can borrow on an authorized dev" +
      "ice\022\260\001\n\026AddAuthorizedBorrowers\022+.CDevice" +
      "Auth_AddAuthorizedBorrowers_Request\032,.CD" +
      "eviceAuth_AddAuthorizedBorrowers_Respons" +
      "e\";\202\265\0307Add users that can borrow on limi" +
      "ted authorized devices\022\274\001\n\031RemoveAuthori" +
      "zedBorrowers\022..CDeviceAuth_RemoveAuthori",
      "zedBorrowers_Request\032/.CDeviceAuth_Remov" +
      "eAuthorizedBorrowers_Response\">\202\265\030:Remov" +
      "e users that can borrow on limited autho" +
      "rized devices\032$\202\265\030 Library Sharing setti" +
      "ngs serviceB\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Request_descriptor,
        new java.lang.String[] { "Steamid", "IncludeCanceled", });
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor,
        new java.lang.String[] { "Devices", });
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor =
      internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_descriptor.getNestedTypes().get(0);
    internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_descriptor,
        new java.lang.String[] { "AuthDeviceToken", "DeviceName", "IsPending", "IsCanceled", "LastTimeUsed", "LastBorrowerId", "LastAppPlayed", "IsLimited", });
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AcceptAuthorizationRequest_Request_descriptor,
        new java.lang.String[] { "Steamid", "AuthDeviceToken", "AuthCode", "FromSteamid", });
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AcceptAuthorizationRequest_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AuthorizeRemoteDevice_Request_descriptor,
        new java.lang.String[] { "Steamid", "AuthDeviceToken", });
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AuthorizeRemoteDevice_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Request_descriptor,
        new java.lang.String[] { "Steamid", "AuthDeviceToken", });
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_DeauthorizeRemoteDevice_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Request_descriptor,
        new java.lang.String[] { "Steamid", });
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor,
        new java.lang.String[] { "Devices", });
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor =
      internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_descriptor.getNestedTypes().get(0);
    internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_descriptor,
        new java.lang.String[] { "AuthDeviceToken", "DeviceName", "OwnerSteamid", "LastTimeUsed", "LastAppPlayed", });
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetAuthorizedBorrowers_Request_descriptor,
        new java.lang.String[] { "Steamid", "IncludeCanceled", "IncludePending", });
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor,
        new java.lang.String[] { "Borrowers", });
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor =
      internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_descriptor.getNestedTypes().get(0);
    internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_descriptor,
        new java.lang.String[] { "Steamid", "IsPending", "IsCanceled", "TimeCreated", });
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AddAuthorizedBorrowers_Request_descriptor,
        new java.lang.String[] { "Steamid", "SteamidBorrower", });
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_AddAuthorizedBorrowers_Response_descriptor,
        new java.lang.String[] { "SecondsToWait", });
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Request_descriptor,
        new java.lang.String[] { "Steamid", "SteamidBorrower", });
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDeviceAuth_RemoveAuthorizedBorrowers_Response_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
