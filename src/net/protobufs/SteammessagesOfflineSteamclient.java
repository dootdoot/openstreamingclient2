package net.protobufs;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_offline.steamclient.proto

public final class SteammessagesOfflineSteamclient {
  private SteammessagesOfflineSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface COffline_GetOfflineLogonTicket_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:COffline_GetOfflineLogonTicket_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 priority = 1;</code>
     */
    boolean hasPriority();
    /**
     * <code>optional uint32 priority = 1;</code>
     */
    int getPriority();
  }
  /**
   * Protobuf type {@code COffline_GetOfflineLogonTicket_Request}
   */
  public static final class COffline_GetOfflineLogonTicket_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:COffline_GetOfflineLogonTicket_Request)
      COffline_GetOfflineLogonTicket_RequestOrBuilder {
    // Use COffline_GetOfflineLogonTicket_Request.newBuilder() to construct.
    private COffline_GetOfflineLogonTicket_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private COffline_GetOfflineLogonTicket_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final COffline_GetOfflineLogonTicket_Request defaultInstance;
    public static COffline_GetOfflineLogonTicket_Request getDefaultInstance() {
      return defaultInstance;
    }

    public COffline_GetOfflineLogonTicket_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private COffline_GetOfflineLogonTicket_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              priority_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.class, SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<COffline_GetOfflineLogonTicket_Request> PARSER =
        new com.google.protobuf.AbstractParser<COffline_GetOfflineLogonTicket_Request>() {
      public COffline_GetOfflineLogonTicket_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new COffline_GetOfflineLogonTicket_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<COffline_GetOfflineLogonTicket_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PRIORITY_FIELD_NUMBER = 1;
    private int priority_;
    /**
     * <code>optional uint32 priority = 1;</code>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 priority = 1;</code>
     */
    public int getPriority() {
      return priority_;
    }

    private void initFields() {
      priority_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, priority_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, priority_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code COffline_GetOfflineLogonTicket_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:COffline_GetOfflineLogonTicket_Request)
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.class, SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.Builder.class);
      }

      // Construct using SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Request_descriptor;
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request getDefaultInstanceForType() {
        return SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.getDefaultInstance();
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request build() {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request buildPartial() {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request result = new SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.priority_ = priority_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request) {
          return mergeFrom((SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request other) {
        if (other == SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request.getDefaultInstance()) return this;
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int priority_ ;
      /**
       * <code>optional uint32 priority = 1;</code>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 priority = 1;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional uint32 priority = 1;</code>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000001;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 priority = 1;</code>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000001);
        priority_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:COffline_GetOfflineLogonTicket_Request)
    }

    static {
      defaultInstance = new COffline_GetOfflineLogonTicket_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:COffline_GetOfflineLogonTicket_Request)
  }

  public interface COffline_GetOfflineLogonTicket_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:COffline_GetOfflineLogonTicket_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes serialized_ticket = 1;</code>
     */
    boolean hasSerializedTicket();
    /**
     * <code>optional bytes serialized_ticket = 1;</code>
     */
    com.google.protobuf.ByteString getSerializedTicket();

    /**
     * <code>optional bytes signature = 2;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 2;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code COffline_GetOfflineLogonTicket_Response}
   */
  public static final class COffline_GetOfflineLogonTicket_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:COffline_GetOfflineLogonTicket_Response)
      COffline_GetOfflineLogonTicket_ResponseOrBuilder {
    // Use COffline_GetOfflineLogonTicket_Response.newBuilder() to construct.
    private COffline_GetOfflineLogonTicket_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private COffline_GetOfflineLogonTicket_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final COffline_GetOfflineLogonTicket_Response defaultInstance;
    public static COffline_GetOfflineLogonTicket_Response getDefaultInstance() {
      return defaultInstance;
    }

    public COffline_GetOfflineLogonTicket_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private COffline_GetOfflineLogonTicket_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              serializedTicket_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.class, SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<COffline_GetOfflineLogonTicket_Response> PARSER =
        new com.google.protobuf.AbstractParser<COffline_GetOfflineLogonTicket_Response>() {
      public COffline_GetOfflineLogonTicket_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new COffline_GetOfflineLogonTicket_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<COffline_GetOfflineLogonTicket_Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERIALIZED_TICKET_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString serializedTicket_;
    /**
     * <code>optional bytes serialized_ticket = 1;</code>
     */
    public boolean hasSerializedTicket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes serialized_ticket = 1;</code>
     */
    public com.google.protobuf.ByteString getSerializedTicket() {
      return serializedTicket_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 2;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes signature = 2;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      serializedTicket_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, serializedTicket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, serializedTicket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code COffline_GetOfflineLogonTicket_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:COffline_GetOfflineLogonTicket_Response)
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.class, SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.Builder.class);
      }

      // Construct using SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serializedTicket_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetOfflineLogonTicket_Response_descriptor;
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response getDefaultInstanceForType() {
        return SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.getDefaultInstance();
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response build() {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response buildPartial() {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response result = new SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serializedTicket_ = serializedTicket_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response) {
          return mergeFrom((SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response other) {
        if (other == SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response.getDefaultInstance()) return this;
        if (other.hasSerializedTicket()) {
          setSerializedTicket(other.getSerializedTicket());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesOfflineSteamclient.COffline_GetOfflineLogonTicket_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString serializedTicket_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes serialized_ticket = 1;</code>
       */
      public boolean hasSerializedTicket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes serialized_ticket = 1;</code>
       */
      public com.google.protobuf.ByteString getSerializedTicket() {
        return serializedTicket_;
      }
      /**
       * <code>optional bytes serialized_ticket = 1;</code>
       */
      public Builder setSerializedTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serializedTicket_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes serialized_ticket = 1;</code>
       */
      public Builder clearSerializedTicket() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serializedTicket_ = getDefaultInstance().getSerializedTicket();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:COffline_GetOfflineLogonTicket_Response)
    }

    static {
      defaultInstance = new COffline_GetOfflineLogonTicket_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:COffline_GetOfflineLogonTicket_Response)
  }

  public interface COffline_GetUnsignedOfflineLogonTicket_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:COffline_GetUnsignedOfflineLogonTicket_Request)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code COffline_GetUnsignedOfflineLogonTicket_Request}
   */
  public static final class COffline_GetUnsignedOfflineLogonTicket_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:COffline_GetUnsignedOfflineLogonTicket_Request)
      COffline_GetUnsignedOfflineLogonTicket_RequestOrBuilder {
    // Use COffline_GetUnsignedOfflineLogonTicket_Request.newBuilder() to construct.
    private COffline_GetUnsignedOfflineLogonTicket_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private COffline_GetUnsignedOfflineLogonTicket_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final COffline_GetUnsignedOfflineLogonTicket_Request defaultInstance;
    public static COffline_GetUnsignedOfflineLogonTicket_Request getDefaultInstance() {
      return defaultInstance;
    }

    public COffline_GetUnsignedOfflineLogonTicket_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private COffline_GetUnsignedOfflineLogonTicket_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.class, SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<COffline_GetUnsignedOfflineLogonTicket_Request> PARSER =
        new com.google.protobuf.AbstractParser<COffline_GetUnsignedOfflineLogonTicket_Request>() {
      public COffline_GetUnsignedOfflineLogonTicket_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new COffline_GetUnsignedOfflineLogonTicket_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<COffline_GetUnsignedOfflineLogonTicket_Request> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code COffline_GetUnsignedOfflineLogonTicket_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:COffline_GetUnsignedOfflineLogonTicket_Request)
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.class, SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.Builder.class);
      }

      // Construct using SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor;
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request getDefaultInstanceForType() {
        return SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.getDefaultInstance();
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request build() {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request buildPartial() {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request result = new SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request) {
          return mergeFrom((SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request other) {
        if (other == SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:COffline_GetUnsignedOfflineLogonTicket_Request)
    }

    static {
      defaultInstance = new COffline_GetUnsignedOfflineLogonTicket_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:COffline_GetUnsignedOfflineLogonTicket_Request)
  }

  public interface COffline_OfflineLogonTicketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:COffline_OfflineLogonTicket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    int getAccountid();

    /**
     * <code>optional fixed32 rtime32_creation_time = 2;</code>
     */
    boolean hasRtime32CreationTime();
    /**
     * <code>optional fixed32 rtime32_creation_time = 2;</code>
     */
    int getRtime32CreationTime();
  }
  /**
   * Protobuf type {@code COffline_OfflineLogonTicket}
   */
  public static final class COffline_OfflineLogonTicket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:COffline_OfflineLogonTicket)
      COffline_OfflineLogonTicketOrBuilder {
    // Use COffline_OfflineLogonTicket.newBuilder() to construct.
    private COffline_OfflineLogonTicket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private COffline_OfflineLogonTicket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final COffline_OfflineLogonTicket defaultInstance;
    public static COffline_OfflineLogonTicket getDefaultInstance() {
      return defaultInstance;
    }

    public COffline_OfflineLogonTicket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private COffline_OfflineLogonTicket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountid_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              rtime32CreationTime_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_OfflineLogonTicket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_OfflineLogonTicket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.class, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder.class);
    }

    public static com.google.protobuf.Parser<COffline_OfflineLogonTicket> PARSER =
        new com.google.protobuf.AbstractParser<COffline_OfflineLogonTicket>() {
      public COffline_OfflineLogonTicket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new COffline_OfflineLogonTicket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<COffline_OfflineLogonTicket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int RTIME32_CREATION_TIME_FIELD_NUMBER = 2;
    private int rtime32CreationTime_;
    /**
     * <code>optional fixed32 rtime32_creation_time = 2;</code>
     */
    public boolean hasRtime32CreationTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed32 rtime32_creation_time = 2;</code>
     */
    public int getRtime32CreationTime() {
      return rtime32CreationTime_;
    }

    private void initFields() {
      accountid_ = 0;
      rtime32CreationTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, rtime32CreationTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, rtime32CreationTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code COffline_OfflineLogonTicket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:COffline_OfflineLogonTicket)
        SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_OfflineLogonTicket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_OfflineLogonTicket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.class, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder.class);
      }

      // Construct using SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rtime32CreationTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_OfflineLogonTicket_descriptor;
      }

      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket getDefaultInstanceForType() {
        return SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance();
      }

      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket build() {
        SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket buildPartial() {
        SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket result = new SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rtime32CreationTime_ = rtime32CreationTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket) {
          return mergeFrom((SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket other) {
        if (other == SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasRtime32CreationTime()) {
          setRtime32CreationTime(other.getRtime32CreationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000001;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private int rtime32CreationTime_ ;
      /**
       * <code>optional fixed32 rtime32_creation_time = 2;</code>
       */
      public boolean hasRtime32CreationTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed32 rtime32_creation_time = 2;</code>
       */
      public int getRtime32CreationTime() {
        return rtime32CreationTime_;
      }
      /**
       * <code>optional fixed32 rtime32_creation_time = 2;</code>
       */
      public Builder setRtime32CreationTime(int value) {
        bitField0_ |= 0x00000002;
        rtime32CreationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 rtime32_creation_time = 2;</code>
       */
      public Builder clearRtime32CreationTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rtime32CreationTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:COffline_OfflineLogonTicket)
    }

    static {
      defaultInstance = new COffline_OfflineLogonTicket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:COffline_OfflineLogonTicket)
  }

  public interface COffline_GetUnsignedOfflineLogonTicket_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:COffline_GetUnsignedOfflineLogonTicket_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    boolean hasTicket();
    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket getTicket();
    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder getTicketOrBuilder();
  }
  /**
   * Protobuf type {@code COffline_GetUnsignedOfflineLogonTicket_Response}
   */
  public static final class COffline_GetUnsignedOfflineLogonTicket_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:COffline_GetUnsignedOfflineLogonTicket_Response)
      COffline_GetUnsignedOfflineLogonTicket_ResponseOrBuilder {
    // Use COffline_GetUnsignedOfflineLogonTicket_Response.newBuilder() to construct.
    private COffline_GetUnsignedOfflineLogonTicket_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private COffline_GetUnsignedOfflineLogonTicket_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final COffline_GetUnsignedOfflineLogonTicket_Response defaultInstance;
    public static COffline_GetUnsignedOfflineLogonTicket_Response getDefaultInstance() {
      return defaultInstance;
    }

    public COffline_GetUnsignedOfflineLogonTicket_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private COffline_GetUnsignedOfflineLogonTicket_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = ticket_.toBuilder();
              }
              ticket_ = input.readMessage(SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ticket_);
                ticket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.class, SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<COffline_GetUnsignedOfflineLogonTicket_Response> PARSER =
        new com.google.protobuf.AbstractParser<COffline_GetUnsignedOfflineLogonTicket_Response>() {
      public COffline_GetUnsignedOfflineLogonTicket_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new COffline_GetUnsignedOfflineLogonTicket_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<COffline_GetUnsignedOfflineLogonTicket_Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TICKET_FIELD_NUMBER = 1;
    private SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket ticket_;
    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    public boolean hasTicket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket getTicket() {
      return ticket_;
    }
    /**
     * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
     */
    public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder getTicketOrBuilder() {
      return ticket_;
    }

    private void initFields() {
      ticket_ = SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, ticket_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ticket_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code COffline_GetUnsignedOfflineLogonTicket_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:COffline_GetUnsignedOfflineLogonTicket_Response)
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.class, SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.Builder.class);
      }

      // Construct using SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTicketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (ticketBuilder_ == null) {
          ticket_ = SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance();
        } else {
          ticketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesOfflineSteamclient.internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor;
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response getDefaultInstanceForType() {
        return SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.getDefaultInstance();
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response build() {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response buildPartial() {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response result = new SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (ticketBuilder_ == null) {
          result.ticket_ = ticket_;
        } else {
          result.ticket_ = ticketBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response) {
          return mergeFrom((SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response other) {
        if (other == SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response.getDefaultInstance()) return this;
        if (other.hasTicket()) {
          mergeTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesOfflineSteamclient.COffline_GetUnsignedOfflineLogonTicket_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket ticket_ = SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder> ticketBuilder_;
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public boolean hasTicket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket getTicket() {
        if (ticketBuilder_ == null) {
          return ticket_;
        } else {
          return ticketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public Builder setTicket(SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket value) {
        if (ticketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ticket_ = value;
          onChanged();
        } else {
          ticketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public Builder setTicket(
          SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder builderForValue) {
        if (ticketBuilder_ == null) {
          ticket_ = builderForValue.build();
          onChanged();
        } else {
          ticketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public Builder mergeTicket(SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket value) {
        if (ticketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              ticket_ != SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance()) {
            ticket_ =
              SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.newBuilder(ticket_).mergeFrom(value).buildPartial();
          } else {
            ticket_ = value;
          }
          onChanged();
        } else {
          ticketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public Builder clearTicket() {
        if (ticketBuilder_ == null) {
          ticket_ = SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.getDefaultInstance();
          onChanged();
        } else {
          ticketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder getTicketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTicketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      public SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder getTicketOrBuilder() {
        if (ticketBuilder_ != null) {
          return ticketBuilder_.getMessageOrBuilder();
        } else {
          return ticket_;
        }
      }
      /**
       * <code>optional .COffline_OfflineLogonTicket ticket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder> 
          getTicketFieldBuilder() {
        if (ticketBuilder_ == null) {
          ticketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicket.Builder, SteammessagesOfflineSteamclient.COffline_OfflineLogonTicketOrBuilder>(
                  getTicket(),
                  getParentForChildren(),
                  isClean());
          ticket_ = null;
        }
        return ticketBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:COffline_GetUnsignedOfflineLogonTicket_Response)
    }

    static {
      defaultInstance = new COffline_GetUnsignedOfflineLogonTicket_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:COffline_GetUnsignedOfflineLogonTicket_Response)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_COffline_GetOfflineLogonTicket_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_COffline_GetOfflineLogonTicket_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_COffline_GetOfflineLogonTicket_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_COffline_GetOfflineLogonTicket_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_COffline_OfflineLogonTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_COffline_OfflineLogonTicket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'steammessages_offline.steamclient.prot" +
      "o\032,steammessages_unified_base.steamclien" +
      "t.proto\":\n&COffline_GetOfflineLogonTicke" +
      "t_Request\022\020\n\010priority\030\001 \001(\r\"W\n\'COffline_" +
      "GetOfflineLogonTicket_Response\022\031\n\021serial" +
      "ized_ticket\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014\"0\n." +
      "COffline_GetUnsignedOfflineLogonTicket_R" +
      "equest\"O\n\033COffline_OfflineLogonTicket\022\021\n" +
      "\taccountid\030\001 \001(\r\022\035\n\025rtime32_creation_tim" +
      "e\030\002 \001(\007\"_\n/COffline_GetUnsignedOfflineLo",
      "gonTicket_Response\022,\n\006ticket\030\001 \001(\0132\034.COf" +
      "fline_OfflineLogonTicket2\243\003\n\007Offline\022\265\001\n" +
      "\025GetOfflineLogonTicket\022\'.COffline_GetOff" +
      "lineLogonTicket_Request\032(.COffline_GetOf" +
      "flineLogonTicket_Response\"I\202\265\030EGet a ser" +
      "ialized and signed offline logon ticket " +
      "for the current user\022\301\001\n\035GetUnsignedOffl" +
      "ineLogonTicket\022/.COffline_GetUnsignedOff" +
      "lineLogonTicket_Request\0320.COffline_GetUn" +
      "signedOfflineLogonTicket_Response\"=\202\265\0309G",
      "et an unsigned offline logon ticket for " +
      "the current user\032\034\202\265\030\030Offline settings s" +
      "erviceB\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_COffline_GetOfflineLogonTicket_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_COffline_GetOfflineLogonTicket_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_COffline_GetOfflineLogonTicket_Request_descriptor,
        new java.lang.String[] { "Priority", });
    internal_static_COffline_GetOfflineLogonTicket_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_COffline_GetOfflineLogonTicket_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_COffline_GetOfflineLogonTicket_Response_descriptor,
        new java.lang.String[] { "SerializedTicket", "Signature", });
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_COffline_GetUnsignedOfflineLogonTicket_Request_descriptor,
        new java.lang.String[] { });
    internal_static_COffline_OfflineLogonTicket_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_COffline_OfflineLogonTicket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_COffline_OfflineLogonTicket_descriptor,
        new java.lang.String[] { "Accountid", "Rtime32CreationTime", });
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_COffline_GetUnsignedOfflineLogonTicket_Response_descriptor,
        new java.lang.String[] { "Ticket", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
