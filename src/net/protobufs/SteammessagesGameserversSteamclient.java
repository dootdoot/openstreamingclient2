package net.protobufs;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_gameservers.steamclient.proto

public final class SteammessagesGameserversSteamclient {
  private SteammessagesGameserversSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CGameServers_GetServerList_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameServers_GetServerList_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string filter = 1;</code>
     */
    boolean hasFilter();
    /**
     * <code>optional string filter = 1;</code>
     */
    java.lang.String getFilter();
    /**
     * <code>optional string filter = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilterBytes();

    /**
     * <code>optional uint32 limit = 2 [default = 100];</code>
     */
    boolean hasLimit();
    /**
     * <code>optional uint32 limit = 2 [default = 100];</code>
     */
    int getLimit();
  }
  /**
   * Protobuf type {@code CGameServers_GetServerList_Request}
   */
  public static final class CGameServers_GetServerList_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CGameServers_GetServerList_Request)
      CGameServers_GetServerList_RequestOrBuilder {
    // Use CGameServers_GetServerList_Request.newBuilder() to construct.
    private CGameServers_GetServerList_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGameServers_GetServerList_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGameServers_GetServerList_Request defaultInstance;
    public static CGameServers_GetServerList_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CGameServers_GetServerList_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGameServers_GetServerList_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              filter_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              limit_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CGameServers_GetServerList_Request> PARSER =
        new com.google.protobuf.AbstractParser<CGameServers_GetServerList_Request>() {
      public CGameServers_GetServerList_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGameServers_GetServerList_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGameServers_GetServerList_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FILTER_FIELD_NUMBER = 1;
    private java.lang.Object filter_;
    /**
     * <code>optional string filter = 1;</code>
     */
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string filter = 1;</code>
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string filter = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMIT_FIELD_NUMBER = 2;
    private int limit_;
    /**
     * <code>optional uint32 limit = 2 [default = 100];</code>
     */
    public boolean hasLimit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 limit = 2 [default = 100];</code>
     */
    public int getLimit() {
      return limit_;
    }

    private void initFields() {
      filter_ = "";
      limit_ = 100;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFilterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, limit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFilterBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, limit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameServers_GetServerList_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameServers_GetServerList_Request)
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.Builder.class);
      }

      // Construct using SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        filter_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        limit_ = 100;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Request_descriptor;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request getDefaultInstanceForType() {
        return SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.getDefaultInstance();
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request build() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request buildPartial() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request result = new SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.filter_ = filter_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.limit_ = limit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request) {
          return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request other) {
        if (other == SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request.getDefaultInstance()) return this;
        if (other.hasFilter()) {
          bitField0_ |= 0x00000001;
          filter_ = other.filter_;
          onChanged();
        }
        if (other.hasLimit()) {
          setLimit(other.getLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_GetServerList_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object filter_ = "";
      /**
       * <code>optional string filter = 1;</code>
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string filter = 1;</code>
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filter_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string filter = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string filter = 1;</code>
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string filter = 1;</code>
       */
      public Builder clearFilter() {
        bitField0_ = (bitField0_ & ~0x00000001);
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string filter = 1;</code>
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filter_ = value;
        onChanged();
        return this;
      }

      private int limit_ = 100;
      /**
       * <code>optional uint32 limit = 2 [default = 100];</code>
       */
      public boolean hasLimit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 limit = 2 [default = 100];</code>
       */
      public int getLimit() {
        return limit_;
      }
      /**
       * <code>optional uint32 limit = 2 [default = 100];</code>
       */
      public Builder setLimit(int value) {
        bitField0_ |= 0x00000002;
        limit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 limit = 2 [default = 100];</code>
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        limit_ = 100;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CGameServers_GetServerList_Request)
    }

    static {
      defaultInstance = new CGameServers_GetServerList_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Request)
  }

  public interface CGameServers_GetServerList_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameServers_GetServerList_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> 
        getServersList();
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server getServers(int index);
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    int getServersCount();
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder> 
        getServersOrBuilderList();
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder getServersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CGameServers_GetServerList_Response}
   */
  public static final class CGameServers_GetServerList_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CGameServers_GetServerList_Response)
      CGameServers_GetServerList_ResponseOrBuilder {
    // Use CGameServers_GetServerList_Response.newBuilder() to construct.
    private CGameServers_GetServerList_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGameServers_GetServerList_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGameServers_GetServerList_Response defaultInstance;
    public static CGameServers_GetServerList_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CGameServers_GetServerList_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGameServers_GetServerList_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                servers_ = new java.util.ArrayList<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server>();
                mutable_bitField0_ |= 0x00000001;
              }
              servers_.add(input.readMessage(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = java.util.Collections.unmodifiableList(servers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CGameServers_GetServerList_Response> PARSER =
        new com.google.protobuf.AbstractParser<CGameServers_GetServerList_Response>() {
      public CGameServers_GetServerList_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGameServers_GetServerList_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGameServers_GetServerList_Response> getParserForType() {
      return PARSER;
    }

    public interface ServerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CGameServers_GetServerList_Response.Server)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string addr = 1;</code>
       */
      boolean hasAddr();
      /**
       * <code>optional string addr = 1;</code>
       */
      java.lang.String getAddr();
      /**
       * <code>optional string addr = 1;</code>
       */
      com.google.protobuf.ByteString
          getAddrBytes();

      /**
       * <code>optional uint32 gameport = 2;</code>
       */
      boolean hasGameport();
      /**
       * <code>optional uint32 gameport = 2;</code>
       */
      int getGameport();

      /**
       * <code>optional uint32 specport = 3;</code>
       */
      boolean hasSpecport();
      /**
       * <code>optional uint32 specport = 3;</code>
       */
      int getSpecport();

      /**
       * <code>optional fixed64 steamid = 4;</code>
       */
      boolean hasSteamid();
      /**
       * <code>optional fixed64 steamid = 4;</code>
       */
      long getSteamid();

      /**
       * <code>optional string name = 5;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 5;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 5;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional uint32 appid = 6;</code>
       */
      boolean hasAppid();
      /**
       * <code>optional uint32 appid = 6;</code>
       */
      int getAppid();

      /**
       * <code>optional string gamedir = 7;</code>
       */
      boolean hasGamedir();
      /**
       * <code>optional string gamedir = 7;</code>
       */
      java.lang.String getGamedir();
      /**
       * <code>optional string gamedir = 7;</code>
       */
      com.google.protobuf.ByteString
          getGamedirBytes();

      /**
       * <code>optional string version = 8;</code>
       */
      boolean hasVersion();
      /**
       * <code>optional string version = 8;</code>
       */
      java.lang.String getVersion();
      /**
       * <code>optional string version = 8;</code>
       */
      com.google.protobuf.ByteString
          getVersionBytes();

      /**
       * <code>optional string product = 9;</code>
       */
      boolean hasProduct();
      /**
       * <code>optional string product = 9;</code>
       */
      java.lang.String getProduct();
      /**
       * <code>optional string product = 9;</code>
       */
      com.google.protobuf.ByteString
          getProductBytes();

      /**
       * <code>optional int32 region = 10;</code>
       */
      boolean hasRegion();
      /**
       * <code>optional int32 region = 10;</code>
       */
      int getRegion();

      /**
       * <code>optional int32 players = 11;</code>
       */
      boolean hasPlayers();
      /**
       * <code>optional int32 players = 11;</code>
       */
      int getPlayers();

      /**
       * <code>optional int32 max_players = 12;</code>
       */
      boolean hasMaxPlayers();
      /**
       * <code>optional int32 max_players = 12;</code>
       */
      int getMaxPlayers();

      /**
       * <code>optional int32 bots = 13;</code>
       */
      boolean hasBots();
      /**
       * <code>optional int32 bots = 13;</code>
       */
      int getBots();

      /**
       * <code>optional string map = 14;</code>
       */
      boolean hasMap();
      /**
       * <code>optional string map = 14;</code>
       */
      java.lang.String getMap();
      /**
       * <code>optional string map = 14;</code>
       */
      com.google.protobuf.ByteString
          getMapBytes();

      /**
       * <code>optional bool secure = 15;</code>
       */
      boolean hasSecure();
      /**
       * <code>optional bool secure = 15;</code>
       */
      boolean getSecure();

      /**
       * <code>optional bool dedicated = 16;</code>
       */
      boolean hasDedicated();
      /**
       * <code>optional bool dedicated = 16;</code>
       */
      boolean getDedicated();

      /**
       * <code>optional string os = 17;</code>
       */
      boolean hasOs();
      /**
       * <code>optional string os = 17;</code>
       */
      java.lang.String getOs();
      /**
       * <code>optional string os = 17;</code>
       */
      com.google.protobuf.ByteString
          getOsBytes();

      /**
       * <code>optional string gametype = 18;</code>
       */
      boolean hasGametype();
      /**
       * <code>optional string gametype = 18;</code>
       */
      java.lang.String getGametype();
      /**
       * <code>optional string gametype = 18;</code>
       */
      com.google.protobuf.ByteString
          getGametypeBytes();
    }
    /**
     * Protobuf type {@code CGameServers_GetServerList_Response.Server}
     */
    public static final class Server extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CGameServers_GetServerList_Response.Server)
        ServerOrBuilder {
      // Use Server.newBuilder() to construct.
      private Server(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Server(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Server defaultInstance;
      public static Server getDefaultInstance() {
        return defaultInstance;
      }

      public Server getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Server(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                addr_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                gameport_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                specport_ = input.readUInt32();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                steamid_ = input.readFixed64();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                name_ = bs;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                appid_ = input.readUInt32();
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                gamedir_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                version_ = bs;
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                product_ = bs;
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                region_ = input.readInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                players_ = input.readInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                maxPlayers_ = input.readInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                bots_ = input.readInt32();
                break;
              }
              case 114: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00002000;
                map_ = bs;
                break;
              }
              case 120: {
                bitField0_ |= 0x00004000;
                secure_ = input.readBool();
                break;
              }
              case 128: {
                bitField0_ |= 0x00008000;
                dedicated_ = input.readBool();
                break;
              }
              case 138: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00010000;
                os_ = bs;
                break;
              }
              case 146: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00020000;
                gametype_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_Server_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_Server_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder.class);
      }

      public static com.google.protobuf.Parser<Server> PARSER =
          new com.google.protobuf.AbstractParser<Server>() {
        public Server parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Server(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Server> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ADDR_FIELD_NUMBER = 1;
      private java.lang.Object addr_;
      /**
       * <code>optional string addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public java.lang.String getAddr() {
        java.lang.Object ref = addr_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            addr_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddrBytes() {
        java.lang.Object ref = addr_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GAMEPORT_FIELD_NUMBER = 2;
      private int gameport_;
      /**
       * <code>optional uint32 gameport = 2;</code>
       */
      public boolean hasGameport() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 gameport = 2;</code>
       */
      public int getGameport() {
        return gameport_;
      }

      public static final int SPECPORT_FIELD_NUMBER = 3;
      private int specport_;
      /**
       * <code>optional uint32 specport = 3;</code>
       */
      public boolean hasSpecport() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 specport = 3;</code>
       */
      public int getSpecport() {
        return specport_;
      }

      public static final int STEAMID_FIELD_NUMBER = 4;
      private long steamid_;
      /**
       * <code>optional fixed64 steamid = 4;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional fixed64 steamid = 4;</code>
       */
      public long getSteamid() {
        return steamid_;
      }

      public static final int NAME_FIELD_NUMBER = 5;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 5;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int APPID_FIELD_NUMBER = 6;
      private int appid_;
      /**
       * <code>optional uint32 appid = 6;</code>
       */
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 appid = 6;</code>
       */
      public int getAppid() {
        return appid_;
      }

      public static final int GAMEDIR_FIELD_NUMBER = 7;
      private java.lang.Object gamedir_;
      /**
       * <code>optional string gamedir = 7;</code>
       */
      public boolean hasGamedir() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string gamedir = 7;</code>
       */
      public java.lang.String getGamedir() {
        java.lang.Object ref = gamedir_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gamedir_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string gamedir = 7;</code>
       */
      public com.google.protobuf.ByteString
          getGamedirBytes() {
        java.lang.Object ref = gamedir_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gamedir_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VERSION_FIELD_NUMBER = 8;
      private java.lang.Object version_;
      /**
       * <code>optional string version = 8;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string version = 8;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string version = 8;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PRODUCT_FIELD_NUMBER = 9;
      private java.lang.Object product_;
      /**
       * <code>optional string product = 9;</code>
       */
      public boolean hasProduct() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string product = 9;</code>
       */
      public java.lang.String getProduct() {
        java.lang.Object ref = product_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            product_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string product = 9;</code>
       */
      public com.google.protobuf.ByteString
          getProductBytes() {
        java.lang.Object ref = product_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          product_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REGION_FIELD_NUMBER = 10;
      private int region_;
      /**
       * <code>optional int32 region = 10;</code>
       */
      public boolean hasRegion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 region = 10;</code>
       */
      public int getRegion() {
        return region_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 11;
      private int players_;
      /**
       * <code>optional int32 players = 11;</code>
       */
      public boolean hasPlayers() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 players = 11;</code>
       */
      public int getPlayers() {
        return players_;
      }

      public static final int MAX_PLAYERS_FIELD_NUMBER = 12;
      private int maxPlayers_;
      /**
       * <code>optional int32 max_players = 12;</code>
       */
      public boolean hasMaxPlayers() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 max_players = 12;</code>
       */
      public int getMaxPlayers() {
        return maxPlayers_;
      }

      public static final int BOTS_FIELD_NUMBER = 13;
      private int bots_;
      /**
       * <code>optional int32 bots = 13;</code>
       */
      public boolean hasBots() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 bots = 13;</code>
       */
      public int getBots() {
        return bots_;
      }

      public static final int MAP_FIELD_NUMBER = 14;
      private java.lang.Object map_;
      /**
       * <code>optional string map = 14;</code>
       */
      public boolean hasMap() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string map = 14;</code>
       */
      public java.lang.String getMap() {
        java.lang.Object ref = map_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            map_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string map = 14;</code>
       */
      public com.google.protobuf.ByteString
          getMapBytes() {
        java.lang.Object ref = map_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          map_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SECURE_FIELD_NUMBER = 15;
      private boolean secure_;
      /**
       * <code>optional bool secure = 15;</code>
       */
      public boolean hasSecure() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool secure = 15;</code>
       */
      public boolean getSecure() {
        return secure_;
      }

      public static final int DEDICATED_FIELD_NUMBER = 16;
      private boolean dedicated_;
      /**
       * <code>optional bool dedicated = 16;</code>
       */
      public boolean hasDedicated() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool dedicated = 16;</code>
       */
      public boolean getDedicated() {
        return dedicated_;
      }

      public static final int OS_FIELD_NUMBER = 17;
      private java.lang.Object os_;
      /**
       * <code>optional string os = 17;</code>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string os = 17;</code>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            os_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string os = 17;</code>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GAMETYPE_FIELD_NUMBER = 18;
      private java.lang.Object gametype_;
      /**
       * <code>optional string gametype = 18;</code>
       */
      public boolean hasGametype() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string gametype = 18;</code>
       */
      public java.lang.String getGametype() {
        java.lang.Object ref = gametype_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gametype_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string gametype = 18;</code>
       */
      public com.google.protobuf.ByteString
          getGametypeBytes() {
        java.lang.Object ref = gametype_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gametype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        addr_ = "";
        gameport_ = 0;
        specport_ = 0;
        steamid_ = 0L;
        name_ = "";
        appid_ = 0;
        gamedir_ = "";
        version_ = "";
        product_ = "";
        region_ = 0;
        players_ = 0;
        maxPlayers_ = 0;
        bots_ = 0;
        map_ = "";
        secure_ = false;
        dedicated_ = false;
        os_ = "";
        gametype_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getAddrBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, gameport_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, specport_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFixed64(4, steamid_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getNameBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, appid_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getGamedirBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getVersionBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, getProductBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeInt32(10, region_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(11, players_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeInt32(12, maxPlayers_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeInt32(13, bots_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeBytes(14, getMapBytes());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeBool(15, secure_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeBool(16, dedicated_);
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeBytes(17, getOsBytes());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          output.writeBytes(18, getGametypeBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getAddrBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, gameport_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, specport_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(4, steamid_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getNameBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, appid_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getGamedirBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getVersionBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getProductBytes());
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, region_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, players_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(12, maxPlayers_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(13, bots_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(14, getMapBytes());
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(15, secure_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(16, dedicated_);
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(17, getOsBytes());
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(18, getGametypeBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CGameServers_GetServerList_Response.Server}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CGameServers_GetServerList_Response.Server)
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_Server_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_Server_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder.class);
        }

        // Construct using SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          addr_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          gameport_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          specport_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          steamid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          appid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          gamedir_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          version_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          product_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          region_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          players_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          maxPlayers_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          bots_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          map_ = "";
          bitField0_ = (bitField0_ & ~0x00002000);
          secure_ = false;
          bitField0_ = (bitField0_ & ~0x00004000);
          dedicated_ = false;
          bitField0_ = (bitField0_ & ~0x00008000);
          os_ = "";
          bitField0_ = (bitField0_ & ~0x00010000);
          gametype_ = "";
          bitField0_ = (bitField0_ & ~0x00020000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_Server_descriptor;
        }

        public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server getDefaultInstanceForType() {
          return SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.getDefaultInstance();
        }

        public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server build() {
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server buildPartial() {
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server result = new SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.addr_ = addr_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.gameport_ = gameport_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.specport_ = specport_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.steamid_ = steamid_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.appid_ = appid_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.gamedir_ = gamedir_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.version_ = version_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.product_ = product_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.region_ = region_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.players_ = players_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.maxPlayers_ = maxPlayers_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.bots_ = bots_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.map_ = map_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.secure_ = secure_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.dedicated_ = dedicated_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.os_ = os_;
          if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
            to_bitField0_ |= 0x00020000;
          }
          result.gametype_ = gametype_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server) {
            return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server other) {
          if (other == SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.getDefaultInstance()) return this;
          if (other.hasAddr()) {
            bitField0_ |= 0x00000001;
            addr_ = other.addr_;
            onChanged();
          }
          if (other.hasGameport()) {
            setGameport(other.getGameport());
          }
          if (other.hasSpecport()) {
            setSpecport(other.getSpecport());
          }
          if (other.hasSteamid()) {
            setSteamid(other.getSteamid());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000010;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasAppid()) {
            setAppid(other.getAppid());
          }
          if (other.hasGamedir()) {
            bitField0_ |= 0x00000040;
            gamedir_ = other.gamedir_;
            onChanged();
          }
          if (other.hasVersion()) {
            bitField0_ |= 0x00000080;
            version_ = other.version_;
            onChanged();
          }
          if (other.hasProduct()) {
            bitField0_ |= 0x00000100;
            product_ = other.product_;
            onChanged();
          }
          if (other.hasRegion()) {
            setRegion(other.getRegion());
          }
          if (other.hasPlayers()) {
            setPlayers(other.getPlayers());
          }
          if (other.hasMaxPlayers()) {
            setMaxPlayers(other.getMaxPlayers());
          }
          if (other.hasBots()) {
            setBots(other.getBots());
          }
          if (other.hasMap()) {
            bitField0_ |= 0x00002000;
            map_ = other.map_;
            onChanged();
          }
          if (other.hasSecure()) {
            setSecure(other.getSecure());
          }
          if (other.hasDedicated()) {
            setDedicated(other.getDedicated());
          }
          if (other.hasOs()) {
            bitField0_ |= 0x00010000;
            os_ = other.os_;
            onChanged();
          }
          if (other.hasGametype()) {
            bitField0_ |= 0x00020000;
            gametype_ = other.gametype_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object addr_ = "";
        /**
         * <code>optional string addr = 1;</code>
         */
        public boolean hasAddr() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public java.lang.String getAddr() {
          java.lang.Object ref = addr_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              addr_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public com.google.protobuf.ByteString
            getAddrBytes() {
          java.lang.Object ref = addr_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            addr_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder setAddr(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          addr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder clearAddr() {
          bitField0_ = (bitField0_ & ~0x00000001);
          addr_ = getDefaultInstance().getAddr();
          onChanged();
          return this;
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder setAddrBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          addr_ = value;
          onChanged();
          return this;
        }

        private int gameport_ ;
        /**
         * <code>optional uint32 gameport = 2;</code>
         */
        public boolean hasGameport() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 gameport = 2;</code>
         */
        public int getGameport() {
          return gameport_;
        }
        /**
         * <code>optional uint32 gameport = 2;</code>
         */
        public Builder setGameport(int value) {
          bitField0_ |= 0x00000002;
          gameport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gameport = 2;</code>
         */
        public Builder clearGameport() {
          bitField0_ = (bitField0_ & ~0x00000002);
          gameport_ = 0;
          onChanged();
          return this;
        }

        private int specport_ ;
        /**
         * <code>optional uint32 specport = 3;</code>
         */
        public boolean hasSpecport() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 specport = 3;</code>
         */
        public int getSpecport() {
          return specport_;
        }
        /**
         * <code>optional uint32 specport = 3;</code>
         */
        public Builder setSpecport(int value) {
          bitField0_ |= 0x00000004;
          specport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 specport = 3;</code>
         */
        public Builder clearSpecport() {
          bitField0_ = (bitField0_ & ~0x00000004);
          specport_ = 0;
          onChanged();
          return this;
        }

        private long steamid_ ;
        /**
         * <code>optional fixed64 steamid = 4;</code>
         */
        public boolean hasSteamid() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional fixed64 steamid = 4;</code>
         */
        public long getSteamid() {
          return steamid_;
        }
        /**
         * <code>optional fixed64 steamid = 4;</code>
         */
        public Builder setSteamid(long value) {
          bitField0_ |= 0x00000008;
          steamid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steamid = 4;</code>
         */
        public Builder clearSteamid() {
          bitField0_ = (bitField0_ & ~0x00000008);
          steamid_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 5;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string name = 5;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 5;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 5;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 5;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000010);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 5;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          name_ = value;
          onChanged();
          return this;
        }

        private int appid_ ;
        /**
         * <code>optional uint32 appid = 6;</code>
         */
        public boolean hasAppid() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 appid = 6;</code>
         */
        public int getAppid() {
          return appid_;
        }
        /**
         * <code>optional uint32 appid = 6;</code>
         */
        public Builder setAppid(int value) {
          bitField0_ |= 0x00000020;
          appid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 appid = 6;</code>
         */
        public Builder clearAppid() {
          bitField0_ = (bitField0_ & ~0x00000020);
          appid_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object gamedir_ = "";
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public boolean hasGamedir() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public java.lang.String getGamedir() {
          java.lang.Object ref = gamedir_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              gamedir_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public com.google.protobuf.ByteString
            getGamedirBytes() {
          java.lang.Object ref = gamedir_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            gamedir_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public Builder setGamedir(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          gamedir_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public Builder clearGamedir() {
          bitField0_ = (bitField0_ & ~0x00000040);
          gamedir_ = getDefaultInstance().getGamedir();
          onChanged();
          return this;
        }
        /**
         * <code>optional string gamedir = 7;</code>
         */
        public Builder setGamedirBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          gamedir_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object version_ = "";
        /**
         * <code>optional string version = 8;</code>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string version = 8;</code>
         */
        public java.lang.String getVersion() {
          java.lang.Object ref = version_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              version_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string version = 8;</code>
         */
        public com.google.protobuf.ByteString
            getVersionBytes() {
          java.lang.Object ref = version_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            version_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string version = 8;</code>
         */
        public Builder setVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string version = 8;</code>
         */
        public Builder clearVersion() {
          bitField0_ = (bitField0_ & ~0x00000080);
          version_ = getDefaultInstance().getVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string version = 8;</code>
         */
        public Builder setVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          version_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object product_ = "";
        /**
         * <code>optional string product = 9;</code>
         */
        public boolean hasProduct() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string product = 9;</code>
         */
        public java.lang.String getProduct() {
          java.lang.Object ref = product_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              product_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string product = 9;</code>
         */
        public com.google.protobuf.ByteString
            getProductBytes() {
          java.lang.Object ref = product_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            product_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string product = 9;</code>
         */
        public Builder setProduct(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          product_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string product = 9;</code>
         */
        public Builder clearProduct() {
          bitField0_ = (bitField0_ & ~0x00000100);
          product_ = getDefaultInstance().getProduct();
          onChanged();
          return this;
        }
        /**
         * <code>optional string product = 9;</code>
         */
        public Builder setProductBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          product_ = value;
          onChanged();
          return this;
        }

        private int region_ ;
        /**
         * <code>optional int32 region = 10;</code>
         */
        public boolean hasRegion() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional int32 region = 10;</code>
         */
        public int getRegion() {
          return region_;
        }
        /**
         * <code>optional int32 region = 10;</code>
         */
        public Builder setRegion(int value) {
          bitField0_ |= 0x00000200;
          region_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 region = 10;</code>
         */
        public Builder clearRegion() {
          bitField0_ = (bitField0_ & ~0x00000200);
          region_ = 0;
          onChanged();
          return this;
        }

        private int players_ ;
        /**
         * <code>optional int32 players = 11;</code>
         */
        public boolean hasPlayers() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 players = 11;</code>
         */
        public int getPlayers() {
          return players_;
        }
        /**
         * <code>optional int32 players = 11;</code>
         */
        public Builder setPlayers(int value) {
          bitField0_ |= 0x00000400;
          players_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 players = 11;</code>
         */
        public Builder clearPlayers() {
          bitField0_ = (bitField0_ & ~0x00000400);
          players_ = 0;
          onChanged();
          return this;
        }

        private int maxPlayers_ ;
        /**
         * <code>optional int32 max_players = 12;</code>
         */
        public boolean hasMaxPlayers() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional int32 max_players = 12;</code>
         */
        public int getMaxPlayers() {
          return maxPlayers_;
        }
        /**
         * <code>optional int32 max_players = 12;</code>
         */
        public Builder setMaxPlayers(int value) {
          bitField0_ |= 0x00000800;
          maxPlayers_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 max_players = 12;</code>
         */
        public Builder clearMaxPlayers() {
          bitField0_ = (bitField0_ & ~0x00000800);
          maxPlayers_ = 0;
          onChanged();
          return this;
        }

        private int bots_ ;
        /**
         * <code>optional int32 bots = 13;</code>
         */
        public boolean hasBots() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional int32 bots = 13;</code>
         */
        public int getBots() {
          return bots_;
        }
        /**
         * <code>optional int32 bots = 13;</code>
         */
        public Builder setBots(int value) {
          bitField0_ |= 0x00001000;
          bots_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 bots = 13;</code>
         */
        public Builder clearBots() {
          bitField0_ = (bitField0_ & ~0x00001000);
          bots_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object map_ = "";
        /**
         * <code>optional string map = 14;</code>
         */
        public boolean hasMap() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional string map = 14;</code>
         */
        public java.lang.String getMap() {
          java.lang.Object ref = map_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              map_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string map = 14;</code>
         */
        public com.google.protobuf.ByteString
            getMapBytes() {
          java.lang.Object ref = map_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            map_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string map = 14;</code>
         */
        public Builder setMap(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          map_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string map = 14;</code>
         */
        public Builder clearMap() {
          bitField0_ = (bitField0_ & ~0x00002000);
          map_ = getDefaultInstance().getMap();
          onChanged();
          return this;
        }
        /**
         * <code>optional string map = 14;</code>
         */
        public Builder setMapBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          map_ = value;
          onChanged();
          return this;
        }

        private boolean secure_ ;
        /**
         * <code>optional bool secure = 15;</code>
         */
        public boolean hasSecure() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional bool secure = 15;</code>
         */
        public boolean getSecure() {
          return secure_;
        }
        /**
         * <code>optional bool secure = 15;</code>
         */
        public Builder setSecure(boolean value) {
          bitField0_ |= 0x00004000;
          secure_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool secure = 15;</code>
         */
        public Builder clearSecure() {
          bitField0_ = (bitField0_ & ~0x00004000);
          secure_ = false;
          onChanged();
          return this;
        }

        private boolean dedicated_ ;
        /**
         * <code>optional bool dedicated = 16;</code>
         */
        public boolean hasDedicated() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional bool dedicated = 16;</code>
         */
        public boolean getDedicated() {
          return dedicated_;
        }
        /**
         * <code>optional bool dedicated = 16;</code>
         */
        public Builder setDedicated(boolean value) {
          bitField0_ |= 0x00008000;
          dedicated_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool dedicated = 16;</code>
         */
        public Builder clearDedicated() {
          bitField0_ = (bitField0_ & ~0x00008000);
          dedicated_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object os_ = "";
        /**
         * <code>optional string os = 17;</code>
         */
        public boolean hasOs() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional string os = 17;</code>
         */
        public java.lang.String getOs() {
          java.lang.Object ref = os_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              os_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string os = 17;</code>
         */
        public com.google.protobuf.ByteString
            getOsBytes() {
          java.lang.Object ref = os_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            os_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string os = 17;</code>
         */
        public Builder setOs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          os_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string os = 17;</code>
         */
        public Builder clearOs() {
          bitField0_ = (bitField0_ & ~0x00010000);
          os_ = getDefaultInstance().getOs();
          onChanged();
          return this;
        }
        /**
         * <code>optional string os = 17;</code>
         */
        public Builder setOsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
          os_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object gametype_ = "";
        /**
         * <code>optional string gametype = 18;</code>
         */
        public boolean hasGametype() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional string gametype = 18;</code>
         */
        public java.lang.String getGametype() {
          java.lang.Object ref = gametype_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              gametype_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string gametype = 18;</code>
         */
        public com.google.protobuf.ByteString
            getGametypeBytes() {
          java.lang.Object ref = gametype_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            gametype_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string gametype = 18;</code>
         */
        public Builder setGametype(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          gametype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string gametype = 18;</code>
         */
        public Builder clearGametype() {
          bitField0_ = (bitField0_ & ~0x00020000);
          gametype_ = getDefaultInstance().getGametype();
          onChanged();
          return this;
        }
        /**
         * <code>optional string gametype = 18;</code>
         */
        public Builder setGametypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          gametype_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CGameServers_GetServerList_Response.Server)
      }

      static {
        defaultInstance = new Server(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Response.Server)
    }

    public static final int SERVERS_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> servers_;
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    public java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> getServersList() {
      return servers_;
    }
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    public java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder> 
        getServersOrBuilderList() {
      return servers_;
    }
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    public int getServersCount() {
      return servers_.size();
    }
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server getServers(int index) {
      return servers_.get(index);
    }
    /**
     * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
     */
    public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder getServersOrBuilder(
        int index) {
      return servers_.get(index);
    }

    private void initFields() {
      servers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < servers_.size(); i++) {
        output.writeMessage(1, servers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < servers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, servers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameServers_GetServerList_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameServers_GetServerList_Response)
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.class, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Builder.class);
      }

      // Construct using SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getServersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          serversBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerList_Response_descriptor;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response getDefaultInstanceForType() {
        return SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.getDefaultInstance();
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response build() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response buildPartial() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response result = new SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response(this);
        int from_bitField0_ = bitField0_;
        if (serversBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            servers_ = java.util.Collections.unmodifiableList(servers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servers_ = servers_;
        } else {
          result.servers_ = serversBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response) {
          return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response other) {
        if (other == SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.getDefaultInstance()) return this;
        if (serversBuilder_ == null) {
          if (!other.servers_.isEmpty()) {
            if (servers_.isEmpty()) {
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServersIsMutable();
              servers_.addAll(other.servers_);
            }
            onChanged();
          }
        } else {
          if (!other.servers_.isEmpty()) {
            if (serversBuilder_.isEmpty()) {
              serversBuilder_.dispose();
              serversBuilder_ = null;
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              serversBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServersFieldBuilder() : null;
            } else {
              serversBuilder_.addAllMessages(other.servers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> servers_ =
        java.util.Collections.emptyList();
      private void ensureServersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = new java.util.ArrayList<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server>(servers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder> serversBuilder_;

      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> getServersList() {
        if (serversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servers_);
        } else {
          return serversBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public int getServersCount() {
        if (serversBuilder_ == null) {
          return servers_.size();
        } else {
          return serversBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server getServers(int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.set(index, value);
          onChanged();
        } else {
          serversBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.set(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder addServers(SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(value);
          onChanged();
        } else {
          serversBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(index, value);
          onChanged();
        } else {
          serversBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder addAllServers(
          java.lang.Iterable<? extends SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server> values) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, servers_);
          onChanged();
        } else {
          serversBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder clearServers() {
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          serversBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public Builder removeServers(int index) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.remove(index);
          onChanged();
        } else {
          serversBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder getServersBuilder(
          int index) {
        return getServersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder getServersOrBuilder(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);  } else {
          return serversBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder> 
           getServersOrBuilderList() {
        if (serversBuilder_ != null) {
          return serversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servers_);
        }
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder addServersBuilder() {
        return getServersFieldBuilder().addBuilder(
            SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder addServersBuilder(
          int index) {
        return getServersFieldBuilder().addBuilder(
            index, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .CGameServers_GetServerList_Response.Server servers = 1;</code>
       */
      public java.util.List<SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder> 
           getServersBuilderList() {
        return getServersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder> 
          getServersFieldBuilder() {
        if (serversBuilder_ == null) {
          serversBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_GetServerList_Response.ServerOrBuilder>(
                  servers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          servers_ = null;
        }
        return serversBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CGameServers_GetServerList_Response)
    }

    static {
      defaultInstance = new CGameServers_GetServerList_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Response)
  }

  public interface CGameServers_GetServerSteamIDsByIP_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameServers_GetServerSteamIDsByIP_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string server_ips = 1;</code>
     */
    com.google.protobuf.ProtocolStringList
        getServerIpsList();
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    int getServerIpsCount();
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    java.lang.String getServerIps(int index);
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    com.google.protobuf.ByteString
        getServerIpsBytes(int index);
  }
  /**
   * Protobuf type {@code CGameServers_GetServerSteamIDsByIP_Request}
   */
  public static final class CGameServers_GetServerSteamIDsByIP_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CGameServers_GetServerSteamIDsByIP_Request)
      CGameServers_GetServerSteamIDsByIP_RequestOrBuilder {
    // Use CGameServers_GetServerSteamIDsByIP_Request.newBuilder() to construct.
    private CGameServers_GetServerSteamIDsByIP_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGameServers_GetServerSteamIDsByIP_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGameServers_GetServerSteamIDsByIP_Request defaultInstance;
    public static CGameServers_GetServerSteamIDsByIP_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CGameServers_GetServerSteamIDsByIP_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGameServers_GetServerSteamIDsByIP_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                serverIps_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              serverIps_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          serverIps_ = serverIps_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerSteamIDsByIP_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CGameServers_GetServerSteamIDsByIP_Request> PARSER =
        new com.google.protobuf.AbstractParser<CGameServers_GetServerSteamIDsByIP_Request>() {
      public CGameServers_GetServerSteamIDsByIP_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGameServers_GetServerSteamIDsByIP_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGameServers_GetServerSteamIDsByIP_Request> getParserForType() {
      return PARSER;
    }

    public static final int SERVER_IPS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList serverIps_;
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getServerIpsList() {
      return serverIps_;
    }
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    public int getServerIpsCount() {
      return serverIps_.size();
    }
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    public java.lang.String getServerIps(int index) {
      return serverIps_.get(index);
    }
    /**
     * <code>repeated string server_ips = 1;</code>
     */
    public com.google.protobuf.ByteString
        getServerIpsBytes(int index) {
      return serverIps_.getByteString(index);
    }

    private void initFields() {
      serverIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < serverIps_.size(); i++) {
        output.writeBytes(1, serverIps_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < serverIps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(serverIps_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getServerIpsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameServers_GetServerSteamIDsByIP_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameServers_GetServerSteamIDsByIP_Request)
        SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerSteamIDsByIP_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.Builder.class);
      }

      // Construct using SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request getDefaultInstanceForType() {
        return SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.getDefaultInstance();
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request build() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request buildPartial() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request result = new SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          serverIps_ = serverIps_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.serverIps_ = serverIps_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request) {
          return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request other) {
        if (other == SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request.getDefaultInstance()) return this;
        if (!other.serverIps_.isEmpty()) {
          if (serverIps_.isEmpty()) {
            serverIps_ = other.serverIps_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureServerIpsIsMutable();
            serverIps_.addAll(other.serverIps_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_GetServerSteamIDsByIP_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList serverIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureServerIpsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          serverIps_ = new com.google.protobuf.LazyStringArrayList(serverIps_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getServerIpsList() {
        return serverIps_.getUnmodifiableView();
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public int getServerIpsCount() {
        return serverIps_.size();
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public java.lang.String getServerIps(int index) {
        return serverIps_.get(index);
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public com.google.protobuf.ByteString
          getServerIpsBytes(int index) {
        return serverIps_.getByteString(index);
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public Builder setServerIps(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServerIpsIsMutable();
        serverIps_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public Builder addServerIps(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServerIpsIsMutable();
        serverIps_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public Builder addAllServerIps(
          java.lang.Iterable<java.lang.String> values) {
        ensureServerIpsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, serverIps_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public Builder clearServerIps() {
        serverIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string server_ips = 1;</code>
       */
      public Builder addServerIpsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureServerIpsIsMutable();
        serverIps_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CGameServers_GetServerSteamIDsByIP_Request)
    }

    static {
      defaultInstance = new CGameServers_GetServerSteamIDsByIP_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CGameServers_GetServerSteamIDsByIP_Request)
  }

  public interface CGameServers_IPsWithSteamIDs_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameServers_IPsWithSteamIDs_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> 
        getServersList();
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server getServers(int index);
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    int getServersCount();
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder> 
        getServersOrBuilderList();
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder getServersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CGameServers_IPsWithSteamIDs_Response}
   */
  public static final class CGameServers_IPsWithSteamIDs_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CGameServers_IPsWithSteamIDs_Response)
      CGameServers_IPsWithSteamIDs_ResponseOrBuilder {
    // Use CGameServers_IPsWithSteamIDs_Response.newBuilder() to construct.
    private CGameServers_IPsWithSteamIDs_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGameServers_IPsWithSteamIDs_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGameServers_IPsWithSteamIDs_Response defaultInstance;
    public static CGameServers_IPsWithSteamIDs_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CGameServers_IPsWithSteamIDs_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGameServers_IPsWithSteamIDs_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                servers_ = new java.util.ArrayList<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server>();
                mutable_bitField0_ |= 0x00000001;
              }
              servers_.add(input.readMessage(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = java.util.Collections.unmodifiableList(servers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.class, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CGameServers_IPsWithSteamIDs_Response> PARSER =
        new com.google.protobuf.AbstractParser<CGameServers_IPsWithSteamIDs_Response>() {
      public CGameServers_IPsWithSteamIDs_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGameServers_IPsWithSteamIDs_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGameServers_IPsWithSteamIDs_Response> getParserForType() {
      return PARSER;
    }

    public interface ServerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CGameServers_IPsWithSteamIDs_Response.Server)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string addr = 1;</code>
       */
      boolean hasAddr();
      /**
       * <code>optional string addr = 1;</code>
       */
      java.lang.String getAddr();
      /**
       * <code>optional string addr = 1;</code>
       */
      com.google.protobuf.ByteString
          getAddrBytes();

      /**
       * <code>optional fixed64 steamid = 2;</code>
       */
      boolean hasSteamid();
      /**
       * <code>optional fixed64 steamid = 2;</code>
       */
      long getSteamid();
    }
    /**
     * Protobuf type {@code CGameServers_IPsWithSteamIDs_Response.Server}
     */
    public static final class Server extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CGameServers_IPsWithSteamIDs_Response.Server)
        ServerOrBuilder {
      // Use Server.newBuilder() to construct.
      private Server(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Server(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Server defaultInstance;
      public static Server getDefaultInstance() {
        return defaultInstance;
      }

      public Server getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Server(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                addr_ = bs;
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                steamid_ = input.readFixed64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_Server_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.class, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder.class);
      }

      public static com.google.protobuf.Parser<Server> PARSER =
          new com.google.protobuf.AbstractParser<Server>() {
        public Server parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Server(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Server> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ADDR_FIELD_NUMBER = 1;
      private java.lang.Object addr_;
      /**
       * <code>optional string addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public java.lang.String getAddr() {
        java.lang.Object ref = addr_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            addr_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddrBytes() {
        java.lang.Object ref = addr_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STEAMID_FIELD_NUMBER = 2;
      private long steamid_;
      /**
       * <code>optional fixed64 steamid = 2;</code>
       */
      public boolean hasSteamid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 steamid = 2;</code>
       */
      public long getSteamid() {
        return steamid_;
      }

      private void initFields() {
        addr_ = "";
        steamid_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getAddrBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFixed64(2, steamid_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getAddrBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, steamid_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CGameServers_IPsWithSteamIDs_Response.Server}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CGameServers_IPsWithSteamIDs_Response.Server)
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_Server_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.class, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder.class);
        }

        // Construct using SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          addr_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          steamid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor;
        }

        public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server getDefaultInstanceForType() {
          return SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.getDefaultInstance();
        }

        public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server build() {
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server buildPartial() {
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server result = new SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.addr_ = addr_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.steamid_ = steamid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server) {
            return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server other) {
          if (other == SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.getDefaultInstance()) return this;
          if (other.hasAddr()) {
            bitField0_ |= 0x00000001;
            addr_ = other.addr_;
            onChanged();
          }
          if (other.hasSteamid()) {
            setSteamid(other.getSteamid());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object addr_ = "";
        /**
         * <code>optional string addr = 1;</code>
         */
        public boolean hasAddr() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public java.lang.String getAddr() {
          java.lang.Object ref = addr_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              addr_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public com.google.protobuf.ByteString
            getAddrBytes() {
          java.lang.Object ref = addr_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            addr_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder setAddr(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          addr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder clearAddr() {
          bitField0_ = (bitField0_ & ~0x00000001);
          addr_ = getDefaultInstance().getAddr();
          onChanged();
          return this;
        }
        /**
         * <code>optional string addr = 1;</code>
         */
        public Builder setAddrBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          addr_ = value;
          onChanged();
          return this;
        }

        private long steamid_ ;
        /**
         * <code>optional fixed64 steamid = 2;</code>
         */
        public boolean hasSteamid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional fixed64 steamid = 2;</code>
         */
        public long getSteamid() {
          return steamid_;
        }
        /**
         * <code>optional fixed64 steamid = 2;</code>
         */
        public Builder setSteamid(long value) {
          bitField0_ |= 0x00000002;
          steamid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steamid = 2;</code>
         */
        public Builder clearSteamid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          steamid_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CGameServers_IPsWithSteamIDs_Response.Server)
      }

      static {
        defaultInstance = new Server(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CGameServers_IPsWithSteamIDs_Response.Server)
    }

    public static final int SERVERS_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> servers_;
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    public java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> getServersList() {
      return servers_;
    }
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    public java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder> 
        getServersOrBuilderList() {
      return servers_;
    }
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    public int getServersCount() {
      return servers_.size();
    }
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server getServers(int index) {
      return servers_.get(index);
    }
    /**
     * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
     */
    public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder getServersOrBuilder(
        int index) {
      return servers_.get(index);
    }

    private void initFields() {
      servers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < servers_.size(); i++) {
        output.writeMessage(1, servers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < servers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, servers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameServers_IPsWithSteamIDs_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameServers_IPsWithSteamIDs_Response)
        SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.class, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Builder.class);
      }

      // Construct using SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getServersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          serversBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor;
      }

      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response getDefaultInstanceForType() {
        return SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.getDefaultInstance();
      }

      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response build() {
        SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response buildPartial() {
        SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response result = new SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response(this);
        int from_bitField0_ = bitField0_;
        if (serversBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            servers_ = java.util.Collections.unmodifiableList(servers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servers_ = servers_;
        } else {
          result.servers_ = serversBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response) {
          return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response other) {
        if (other == SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.getDefaultInstance()) return this;
        if (serversBuilder_ == null) {
          if (!other.servers_.isEmpty()) {
            if (servers_.isEmpty()) {
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServersIsMutable();
              servers_.addAll(other.servers_);
            }
            onChanged();
          }
        } else {
          if (!other.servers_.isEmpty()) {
            if (serversBuilder_.isEmpty()) {
              serversBuilder_.dispose();
              serversBuilder_ = null;
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              serversBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServersFieldBuilder() : null;
            } else {
              serversBuilder_.addAllMessages(other.servers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> servers_ =
        java.util.Collections.emptyList();
      private void ensureServersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = new java.util.ArrayList<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server>(servers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder> serversBuilder_;

      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> getServersList() {
        if (serversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servers_);
        } else {
          return serversBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public int getServersCount() {
        if (serversBuilder_ == null) {
          return servers_.size();
        } else {
          return serversBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server getServers(int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.set(index, value);
          onChanged();
        } else {
          serversBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.set(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder addServers(SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(value);
          onChanged();
        } else {
          serversBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(index, value);
          onChanged();
        } else {
          serversBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder addAllServers(
          java.lang.Iterable<? extends SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server> values) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, servers_);
          onChanged();
        } else {
          serversBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder clearServers() {
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          serversBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public Builder removeServers(int index) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.remove(index);
          onChanged();
        } else {
          serversBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder getServersBuilder(
          int index) {
        return getServersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder getServersOrBuilder(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);  } else {
          return serversBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public java.util.List<? extends SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder> 
           getServersOrBuilderList() {
        if (serversBuilder_ != null) {
          return serversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servers_);
        }
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder addServersBuilder() {
        return getServersFieldBuilder().addBuilder(
            SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder addServersBuilder(
          int index) {
        return getServersFieldBuilder().addBuilder(
            index, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .CGameServers_IPsWithSteamIDs_Response.Server servers = 1;</code>
       */
      public java.util.List<SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder> 
           getServersBuilderList() {
        return getServersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder> 
          getServersFieldBuilder() {
        if (serversBuilder_ == null) {
          serversBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.Server.Builder, SteammessagesGameserversSteamclient.CGameServers_IPsWithSteamIDs_Response.ServerOrBuilder>(
                  servers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          servers_ = null;
        }
        return serversBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CGameServers_IPsWithSteamIDs_Response)
    }

    static {
      defaultInstance = new CGameServers_IPsWithSteamIDs_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CGameServers_IPsWithSteamIDs_Response)
  }

  public interface CGameServers_GetServerIPsBySteamID_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameServers_GetServerIPsBySteamID_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    java.util.List<java.lang.Long> getServerSteamidsList();
    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    int getServerSteamidsCount();
    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    long getServerSteamids(int index);
  }
  /**
   * Protobuf type {@code CGameServers_GetServerIPsBySteamID_Request}
   */
  public static final class CGameServers_GetServerIPsBySteamID_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CGameServers_GetServerIPsBySteamID_Request)
      CGameServers_GetServerIPsBySteamID_RequestOrBuilder {
    // Use CGameServers_GetServerIPsBySteamID_Request.newBuilder() to construct.
    private CGameServers_GetServerIPsBySteamID_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CGameServers_GetServerIPsBySteamID_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CGameServers_GetServerIPsBySteamID_Request defaultInstance;
    public static CGameServers_GetServerIPsBySteamID_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CGameServers_GetServerIPsBySteamID_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CGameServers_GetServerIPsBySteamID_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                serverSteamids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              serverSteamids_.add(input.readFixed64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                serverSteamids_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                serverSteamids_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          serverSteamids_ = java.util.Collections.unmodifiableList(serverSteamids_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerIPsBySteamID_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CGameServers_GetServerIPsBySteamID_Request> PARSER =
        new com.google.protobuf.AbstractParser<CGameServers_GetServerIPsBySteamID_Request>() {
      public CGameServers_GetServerIPsBySteamID_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CGameServers_GetServerIPsBySteamID_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CGameServers_GetServerIPsBySteamID_Request> getParserForType() {
      return PARSER;
    }

    public static final int SERVER_STEAMIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> serverSteamids_;
    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getServerSteamidsList() {
      return serverSteamids_;
    }
    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    public int getServerSteamidsCount() {
      return serverSteamids_.size();
    }
    /**
     * <code>repeated fixed64 server_steamids = 1;</code>
     */
    public long getServerSteamids(int index) {
      return serverSteamids_.get(index);
    }

    private void initFields() {
      serverSteamids_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < serverSteamids_.size(); i++) {
        output.writeFixed64(1, serverSteamids_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getServerSteamidsList().size();
        size += dataSize;
        size += 1 * getServerSteamidsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameServers_GetServerIPsBySteamID_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameServers_GetServerIPsBySteamID_Request)
        SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerIPsBySteamID_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.class, SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.Builder.class);
      }

      // Construct using SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverSteamids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGameserversSteamclient.internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request getDefaultInstanceForType() {
        return SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.getDefaultInstance();
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request build() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request buildPartial() {
        SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request result = new SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          serverSteamids_ = java.util.Collections.unmodifiableList(serverSteamids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.serverSteamids_ = serverSteamids_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request) {
          return mergeFrom((SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request other) {
        if (other == SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request.getDefaultInstance()) return this;
        if (!other.serverSteamids_.isEmpty()) {
          if (serverSteamids_.isEmpty()) {
            serverSteamids_ = other.serverSteamids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureServerSteamidsIsMutable();
            serverSteamids_.addAll(other.serverSteamids_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesGameserversSteamclient.CGameServers_GetServerIPsBySteamID_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> serverSteamids_ = java.util.Collections.emptyList();
      private void ensureServerSteamidsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          serverSteamids_ = new java.util.ArrayList<java.lang.Long>(serverSteamids_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getServerSteamidsList() {
        return java.util.Collections.unmodifiableList(serverSteamids_);
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public int getServerSteamidsCount() {
        return serverSteamids_.size();
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public long getServerSteamids(int index) {
        return serverSteamids_.get(index);
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public Builder setServerSteamids(
          int index, long value) {
        ensureServerSteamidsIsMutable();
        serverSteamids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public Builder addServerSteamids(long value) {
        ensureServerSteamidsIsMutable();
        serverSteamids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public Builder addAllServerSteamids(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureServerSteamidsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, serverSteamids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 server_steamids = 1;</code>
       */
      public Builder clearServerSteamids() {
        serverSteamids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CGameServers_GetServerIPsBySteamID_Request)
    }

    static {
      defaultInstance = new CGameServers_GetServerIPsBySteamID_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CGameServers_GetServerIPsBySteamID_Request)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_GetServerList_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_GetServerList_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_GetServerList_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_GetServerList_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_GetServerList_Response_Server_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_GetServerList_Response_Server_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_GetServerSteamIDsByIP_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_IPsWithSteamIDs_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_IPsWithSteamIDs_Response_Server_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CGameServers_GetServerIPsBySteamID_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+steammessages_gameservers.steamclient." +
      "proto\032,steammessages_unified_base.steamc" +
      "lient.proto\"\237\001\n\"CGameServers_GetServerLi" +
      "st_Request\022(\n\006filter\030\001 \001(\tB\030\202\265\030\024Query fi" +
      "lter string.\022O\n\005limit\030\002 \001(\r:\003100B;\202\265\0307Th" +
      "e maximum number of servers to return in" +
      " the response\"\340\003\n#CGameServers_GetServer" +
      "List_Response\022e\n\007servers\030\001 \003(\0132+.CGameSe" +
      "rvers_GetServerList_Response.ServerB\'\202\265\030" +
      "#List of servers matching the filter\032\321\002\n",
      "\006Server\0220\n\004addr\030\001 \001(\tB\"\202\265\030\036The server\'s " +
      "IP and query port\022\020\n\010gameport\030\002 \001(\r\022\020\n\010s" +
      "pecport\030\003 \001(\r\022\017\n\007steamid\030\004 \001(\006\022\014\n\004name\030\005" +
      " \001(\t\022\r\n\005appid\030\006 \001(\r\022\017\n\007gamedir\030\007 \001(\t\022\017\n\007" +
      "version\030\010 \001(\t\022\017\n\007product\030\t \001(\t\022\016\n\006region" +
      "\030\n \001(\005\022\017\n\007players\030\013 \001(\005\022\023\n\013max_players\030\014" +
      " \001(\005\022\014\n\004bots\030\r \001(\005\022\013\n\003map\030\016 \001(\t\022\016\n\006secur" +
      "e\030\017 \001(\010\022\021\n\tdedicated\030\020 \001(\010\022\n\n\002os\030\021 \001(\t\022\020" +
      "\n\010gametype\030\022 \001(\t\"@\n*CGameServers_GetServ" +
      "erSteamIDsByIP_Request\022\022\n\nserver_ips\030\001 \003",
      "(\t\"\220\001\n%CGameServers_IPsWithSteamIDs_Resp" +
      "onse\022>\n\007servers\030\001 \003(\0132-.CGameServers_IPs" +
      "WithSteamIDs_Response.Server\032\'\n\006Server\022\014" +
      "\n\004addr\030\001 \001(\t\022\017\n\007steamid\030\002 \001(\006\"E\n*CGameSe" +
      "rvers_GetServerIPsBySteamID_Request\022\027\n\017s" +
      "erver_steamids\030\001 \003(\0062\253\004\n\013GameServers\022\214\001\n" +
      "\rGetServerList\022#.CGameServers_GetServerL" +
      "ist_Request\032$.CGameServers_GetServerList" +
      "_Response\"0\202\265\030,Gets a list of servers gi" +
      "ven a filter string\022\244\001\n\025GetServerSteamID",
      "sByIP\022+.CGameServers_GetServerSteamIDsBy" +
      "IP_Request\032&.CGameServers_IPsWithSteamID" +
      "s_Response\"6\202\265\0302Gets a list of server St" +
      "eamIDs given a list of IPs\022\255\001\n\025GetServer" +
      "IPsBySteamID\022+.CGameServers_GetServerIPs" +
      "BySteamID_Request\032&.CGameServers_IPsWith" +
      "SteamIDs_Response\"?\202\265\030;Gets a list of se" +
      "rver IP addresses given a list of SteamI" +
      "Ds\0326\202\265\0302A service for searching and mana" +
      "ging game servers.B\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_CGameServers_GetServerList_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CGameServers_GetServerList_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_GetServerList_Request_descriptor,
        new java.lang.String[] { "Filter", "Limit", });
    internal_static_CGameServers_GetServerList_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CGameServers_GetServerList_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_GetServerList_Response_descriptor,
        new java.lang.String[] { "Servers", });
    internal_static_CGameServers_GetServerList_Response_Server_descriptor =
      internal_static_CGameServers_GetServerList_Response_descriptor.getNestedTypes().get(0);
    internal_static_CGameServers_GetServerList_Response_Server_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_GetServerList_Response_Server_descriptor,
        new java.lang.String[] { "Addr", "Gameport", "Specport", "Steamid", "Name", "Appid", "Gamedir", "Version", "Product", "Region", "Players", "MaxPlayers", "Bots", "Map", "Secure", "Dedicated", "Os", "Gametype", });
    internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CGameServers_GetServerSteamIDsByIP_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_GetServerSteamIDsByIP_Request_descriptor,
        new java.lang.String[] { "ServerIps", });
    internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CGameServers_IPsWithSteamIDs_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor,
        new java.lang.String[] { "Servers", });
    internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor =
      internal_static_CGameServers_IPsWithSteamIDs_Response_descriptor.getNestedTypes().get(0);
    internal_static_CGameServers_IPsWithSteamIDs_Response_Server_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_IPsWithSteamIDs_Response_Server_descriptor,
        new java.lang.String[] { "Addr", "Steamid", });
    internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CGameServers_GetServerIPsBySteamID_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CGameServers_GetServerIPsBySteamID_Request_descriptor,
        new java.lang.String[] { "ServerSteamids", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.description);
    registry.add(SteammessagesUnifiedBaseSteamclient.description);
    registry.add(SteammessagesUnifiedBaseSteamclient.description);
    registry.add(SteammessagesUnifiedBaseSteamclient.description);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
