package net.protobufs;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_player.steamclient.proto

public final class SteammessagesPlayerSteamclient {
  private SteammessagesPlayerSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CPlayer_GetGameBadgeLevels_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_GetGameBadgeLevels_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 appid = 1;</code>
     */
    boolean hasAppid();
    /**
     * <code>optional uint32 appid = 1;</code>
     */
    int getAppid();
  }
  /**
   * Protobuf type {@code CPlayer_GetGameBadgeLevels_Request}
   */
  public static final class CPlayer_GetGameBadgeLevels_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_GetGameBadgeLevels_Request)
      CPlayer_GetGameBadgeLevels_RequestOrBuilder {
    // Use CPlayer_GetGameBadgeLevels_Request.newBuilder() to construct.
    private CPlayer_GetGameBadgeLevels_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_GetGameBadgeLevels_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_GetGameBadgeLevels_Request defaultInstance;
    public static CPlayer_GetGameBadgeLevels_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_GetGameBadgeLevels_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_GetGameBadgeLevels_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              appid_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_GetGameBadgeLevels_Request> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_GetGameBadgeLevels_Request>() {
      public CPlayer_GetGameBadgeLevels_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_GetGameBadgeLevels_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_GetGameBadgeLevels_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int APPID_FIELD_NUMBER = 1;
    private int appid_;
    /**
     * <code>optional uint32 appid = 1;</code>
     */
    public boolean hasAppid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 appid = 1;</code>
     */
    public int getAppid() {
      return appid_;
    }

    private void initFields() {
      appid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, appid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_GetGameBadgeLevels_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_GetGameBadgeLevels_Request)
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        appid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request build() {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request result = new SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.appid_ = appid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request.getDefaultInstance()) return this;
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int appid_ ;
      /**
       * <code>optional uint32 appid = 1;</code>
       */
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       */
      public int getAppid() {
        return appid_;
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       */
      public Builder setAppid(int value) {
        bitField0_ |= 0x00000001;
        appid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appid = 1;</code>
       */
      public Builder clearAppid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_GetGameBadgeLevels_Request)
    }

    static {
      defaultInstance = new CPlayer_GetGameBadgeLevels_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Request)
  }

  public interface CPlayer_GetGameBadgeLevels_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_GetGameBadgeLevels_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 player_level = 1;</code>
     */
    boolean hasPlayerLevel();
    /**
     * <code>optional uint32 player_level = 1;</code>
     */
    int getPlayerLevel();

    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> 
        getBadgesList();
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge getBadges(int index);
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    int getBadgesCount();
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder> 
        getBadgesOrBuilderList();
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder getBadgesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CPlayer_GetGameBadgeLevels_Response}
   */
  public static final class CPlayer_GetGameBadgeLevels_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_GetGameBadgeLevels_Response)
      CPlayer_GetGameBadgeLevels_ResponseOrBuilder {
    // Use CPlayer_GetGameBadgeLevels_Response.newBuilder() to construct.
    private CPlayer_GetGameBadgeLevels_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_GetGameBadgeLevels_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_GetGameBadgeLevels_Response defaultInstance;
    public static CPlayer_GetGameBadgeLevels_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_GetGameBadgeLevels_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_GetGameBadgeLevels_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerLevel_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                badges_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge>();
                mutable_bitField0_ |= 0x00000002;
              }
              badges_.add(input.readMessage(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          badges_ = java.util.Collections.unmodifiableList(badges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_GetGameBadgeLevels_Response> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_GetGameBadgeLevels_Response>() {
      public CPlayer_GetGameBadgeLevels_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_GetGameBadgeLevels_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_GetGameBadgeLevels_Response> getParserForType() {
      return PARSER;
    }

    public interface BadgeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CPlayer_GetGameBadgeLevels_Response.Badge)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 level = 1;</code>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 1;</code>
       */
      int getLevel();

      /**
       * <code>optional int32 series = 2;</code>
       */
      boolean hasSeries();
      /**
       * <code>optional int32 series = 2;</code>
       */
      int getSeries();

      /**
       * <code>optional uint32 border_color = 3;</code>
       */
      boolean hasBorderColor();
      /**
       * <code>optional uint32 border_color = 3;</code>
       */
      int getBorderColor();
    }
    /**
     * Protobuf type {@code CPlayer_GetGameBadgeLevels_Response.Badge}
     */
    public static final class Badge extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CPlayer_GetGameBadgeLevels_Response.Badge)
        BadgeOrBuilder {
      // Use Badge.newBuilder() to construct.
      private Badge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Badge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Badge defaultInstance;
      public static Badge getDefaultInstance() {
        return defaultInstance;
      }

      public Badge getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Badge(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                level_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                series_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                borderColor_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder.class);
      }

      public static com.google.protobuf.Parser<Badge> PARSER =
          new com.google.protobuf.AbstractParser<Badge>() {
        public Badge parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Badge(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Badge> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LEVEL_FIELD_NUMBER = 1;
      private int level_;
      /**
       * <code>optional int32 level = 1;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 level = 1;</code>
       */
      public int getLevel() {
        return level_;
      }

      public static final int SERIES_FIELD_NUMBER = 2;
      private int series_;
      /**
       * <code>optional int32 series = 2;</code>
       */
      public boolean hasSeries() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 series = 2;</code>
       */
      public int getSeries() {
        return series_;
      }

      public static final int BORDER_COLOR_FIELD_NUMBER = 3;
      private int borderColor_;
      /**
       * <code>optional uint32 border_color = 3;</code>
       */
      public boolean hasBorderColor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 border_color = 3;</code>
       */
      public int getBorderColor() {
        return borderColor_;
      }

      private void initFields() {
        level_ = 0;
        series_ = 0;
        borderColor_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, level_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, series_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, borderColor_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, level_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, series_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, borderColor_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CPlayer_GetGameBadgeLevels_Response.Badge}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CPlayer_GetGameBadgeLevels_Response.Badge)
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder.class);
        }

        // Construct using SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          series_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          borderColor_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor;
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge getDefaultInstanceForType() {
          return SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.getDefaultInstance();
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge build() {
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge buildPartial() {
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge result = new SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.series_ = series_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.borderColor_ = borderColor_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge) {
            return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge other) {
          if (other == SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.getDefaultInstance()) return this;
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasSeries()) {
            setSeries(other.getSeries());
          }
          if (other.hasBorderColor()) {
            setBorderColor(other.getBorderColor());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int level_ ;
        /**
         * <code>optional int32 level = 1;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 level = 1;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 1;</code>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000001;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 1;</code>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          level_ = 0;
          onChanged();
          return this;
        }

        private int series_ ;
        /**
         * <code>optional int32 series = 2;</code>
         */
        public boolean hasSeries() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 series = 2;</code>
         */
        public int getSeries() {
          return series_;
        }
        /**
         * <code>optional int32 series = 2;</code>
         */
        public Builder setSeries(int value) {
          bitField0_ |= 0x00000002;
          series_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 series = 2;</code>
         */
        public Builder clearSeries() {
          bitField0_ = (bitField0_ & ~0x00000002);
          series_ = 0;
          onChanged();
          return this;
        }

        private int borderColor_ ;
        /**
         * <code>optional uint32 border_color = 3;</code>
         */
        public boolean hasBorderColor() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 border_color = 3;</code>
         */
        public int getBorderColor() {
          return borderColor_;
        }
        /**
         * <code>optional uint32 border_color = 3;</code>
         */
        public Builder setBorderColor(int value) {
          bitField0_ |= 0x00000004;
          borderColor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 border_color = 3;</code>
         */
        public Builder clearBorderColor() {
          bitField0_ = (bitField0_ & ~0x00000004);
          borderColor_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CPlayer_GetGameBadgeLevels_Response.Badge)
      }

      static {
        defaultInstance = new Badge(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response.Badge)
    }

    private int bitField0_;
    public static final int PLAYER_LEVEL_FIELD_NUMBER = 1;
    private int playerLevel_;
    /**
     * <code>optional uint32 player_level = 1;</code>
     */
    public boolean hasPlayerLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 player_level = 1;</code>
     */
    public int getPlayerLevel() {
      return playerLevel_;
    }

    public static final int BADGES_FIELD_NUMBER = 2;
    private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> badges_;
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> getBadgesList() {
      return badges_;
    }
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder> 
        getBadgesOrBuilderList() {
      return badges_;
    }
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    public int getBadgesCount() {
      return badges_.size();
    }
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge getBadges(int index) {
      return badges_.get(index);
    }
    /**
     * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder getBadgesOrBuilder(
        int index) {
      return badges_.get(index);
    }

    private void initFields() {
      playerLevel_ = 0;
      badges_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, playerLevel_);
      }
      for (int i = 0; i < badges_.size(); i++) {
        output.writeMessage(2, badges_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playerLevel_);
      }
      for (int i = 0; i < badges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, badges_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_GetGameBadgeLevels_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_GetGameBadgeLevels_Response)
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.class, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBadgesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (badgesBuilder_ == null) {
          badges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          badgesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response build() {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response result = new SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerLevel_ = playerLevel_;
        if (badgesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            badges_ = java.util.Collections.unmodifiableList(badges_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.badges_ = badges_;
        } else {
          result.badges_ = badgesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.getDefaultInstance()) return this;
        if (other.hasPlayerLevel()) {
          setPlayerLevel(other.getPlayerLevel());
        }
        if (badgesBuilder_ == null) {
          if (!other.badges_.isEmpty()) {
            if (badges_.isEmpty()) {
              badges_ = other.badges_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBadgesIsMutable();
              badges_.addAll(other.badges_);
            }
            onChanged();
          }
        } else {
          if (!other.badges_.isEmpty()) {
            if (badgesBuilder_.isEmpty()) {
              badgesBuilder_.dispose();
              badgesBuilder_ = null;
              badges_ = other.badges_;
              bitField0_ = (bitField0_ & ~0x00000002);
              badgesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBadgesFieldBuilder() : null;
            } else {
              badgesBuilder_.addAllMessages(other.badges_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int playerLevel_ ;
      /**
       * <code>optional uint32 player_level = 1;</code>
       */
      public boolean hasPlayerLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_level = 1;</code>
       */
      public int getPlayerLevel() {
        return playerLevel_;
      }
      /**
       * <code>optional uint32 player_level = 1;</code>
       */
      public Builder setPlayerLevel(int value) {
        bitField0_ |= 0x00000001;
        playerLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_level = 1;</code>
       */
      public Builder clearPlayerLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerLevel_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> badges_ =
        java.util.Collections.emptyList();
      private void ensureBadgesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          badges_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge>(badges_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder> badgesBuilder_;

      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> getBadgesList() {
        if (badgesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(badges_);
        } else {
          return badgesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public int getBadgesCount() {
        if (badgesBuilder_ == null) {
          return badges_.size();
        } else {
          return badgesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge getBadges(int index) {
        if (badgesBuilder_ == null) {
          return badges_.get(index);
        } else {
          return badgesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder setBadges(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge value) {
        if (badgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBadgesIsMutable();
          badges_.set(index, value);
          onChanged();
        } else {
          badgesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder setBadges(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder builderForValue) {
        if (badgesBuilder_ == null) {
          ensureBadgesIsMutable();
          badges_.set(index, builderForValue.build());
          onChanged();
        } else {
          badgesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder addBadges(SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge value) {
        if (badgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBadgesIsMutable();
          badges_.add(value);
          onChanged();
        } else {
          badgesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder addBadges(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge value) {
        if (badgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBadgesIsMutable();
          badges_.add(index, value);
          onChanged();
        } else {
          badgesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder addBadges(
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder builderForValue) {
        if (badgesBuilder_ == null) {
          ensureBadgesIsMutable();
          badges_.add(builderForValue.build());
          onChanged();
        } else {
          badgesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder addBadges(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder builderForValue) {
        if (badgesBuilder_ == null) {
          ensureBadgesIsMutable();
          badges_.add(index, builderForValue.build());
          onChanged();
        } else {
          badgesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder addAllBadges(
          java.lang.Iterable<? extends SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge> values) {
        if (badgesBuilder_ == null) {
          ensureBadgesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, badges_);
          onChanged();
        } else {
          badgesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder clearBadges() {
        if (badgesBuilder_ == null) {
          badges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          badgesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public Builder removeBadges(int index) {
        if (badgesBuilder_ == null) {
          ensureBadgesIsMutable();
          badges_.remove(index);
          onChanged();
        } else {
          badgesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder getBadgesBuilder(
          int index) {
        return getBadgesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder getBadgesOrBuilder(
          int index) {
        if (badgesBuilder_ == null) {
          return badges_.get(index);  } else {
          return badgesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder> 
           getBadgesOrBuilderList() {
        if (badgesBuilder_ != null) {
          return badgesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(badges_);
        }
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder addBadgesBuilder() {
        return getBadgesFieldBuilder().addBuilder(
            SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder addBadgesBuilder(
          int index) {
        return getBadgesFieldBuilder().addBuilder(
            index, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder> 
           getBadgesBuilderList() {
        return getBadgesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder> 
          getBadgesFieldBuilder() {
        if (badgesBuilder_ == null) {
          badgesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.Badge.Builder, SteammessagesPlayerSteamclient.CPlayer_GetGameBadgeLevels_Response.BadgeOrBuilder>(
                  badges_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          badges_ = null;
        }
        return badgesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_GetGameBadgeLevels_Response)
    }

    static {
      defaultInstance = new CPlayer_GetGameBadgeLevels_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response)
  }

  public interface CPlayer_GetLastPlayedTimes_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_GetLastPlayedTimes_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 min_last_played = 1;</code>
     */
    boolean hasMinLastPlayed();
    /**
     * <code>optional uint32 min_last_played = 1;</code>
     */
    int getMinLastPlayed();
  }
  /**
   * Protobuf type {@code CPlayer_GetLastPlayedTimes_Request}
   */
  public static final class CPlayer_GetLastPlayedTimes_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_GetLastPlayedTimes_Request)
      CPlayer_GetLastPlayedTimes_RequestOrBuilder {
    // Use CPlayer_GetLastPlayedTimes_Request.newBuilder() to construct.
    private CPlayer_GetLastPlayedTimes_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_GetLastPlayedTimes_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_GetLastPlayedTimes_Request defaultInstance;
    public static CPlayer_GetLastPlayedTimes_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_GetLastPlayedTimes_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_GetLastPlayedTimes_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              minLastPlayed_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_GetLastPlayedTimes_Request> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_GetLastPlayedTimes_Request>() {
      public CPlayer_GetLastPlayedTimes_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_GetLastPlayedTimes_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_GetLastPlayedTimes_Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MIN_LAST_PLAYED_FIELD_NUMBER = 1;
    private int minLastPlayed_;
    /**
     * <code>optional uint32 min_last_played = 1;</code>
     */
    public boolean hasMinLastPlayed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 min_last_played = 1;</code>
     */
    public int getMinLastPlayed() {
      return minLastPlayed_;
    }

    private void initFields() {
      minLastPlayed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, minLastPlayed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, minLastPlayed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_GetLastPlayedTimes_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_GetLastPlayedTimes_Request)
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        minLastPlayed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request build() {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request result = new SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minLastPlayed_ = minLastPlayed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request.getDefaultInstance()) return this;
        if (other.hasMinLastPlayed()) {
          setMinLastPlayed(other.getMinLastPlayed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int minLastPlayed_ ;
      /**
       * <code>optional uint32 min_last_played = 1;</code>
       */
      public boolean hasMinLastPlayed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 min_last_played = 1;</code>
       */
      public int getMinLastPlayed() {
        return minLastPlayed_;
      }
      /**
       * <code>optional uint32 min_last_played = 1;</code>
       */
      public Builder setMinLastPlayed(int value) {
        bitField0_ |= 0x00000001;
        minLastPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 min_last_played = 1;</code>
       */
      public Builder clearMinLastPlayed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minLastPlayed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_GetLastPlayedTimes_Request)
    }

    static {
      defaultInstance = new CPlayer_GetLastPlayedTimes_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Request)
  }

  public interface CPlayer_GetLastPlayedTimes_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_GetLastPlayedTimes_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> 
        getGamesList();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index);
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
        getGamesOrBuilderList();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CPlayer_GetLastPlayedTimes_Response}
   */
  public static final class CPlayer_GetLastPlayedTimes_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_GetLastPlayedTimes_Response)
      CPlayer_GetLastPlayedTimes_ResponseOrBuilder {
    // Use CPlayer_GetLastPlayedTimes_Response.newBuilder() to construct.
    private CPlayer_GetLastPlayedTimes_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_GetLastPlayedTimes_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_GetLastPlayedTimes_Response defaultInstance;
    public static CPlayer_GetLastPlayedTimes_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_GetLastPlayedTimes_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_GetLastPlayedTimes_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                games_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game>();
                mutable_bitField0_ |= 0x00000001;
              }
              games_.add(input.readMessage(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = java.util.Collections.unmodifiableList(games_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_GetLastPlayedTimes_Response> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_GetLastPlayedTimes_Response>() {
      public CPlayer_GetLastPlayedTimes_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_GetLastPlayedTimes_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_GetLastPlayedTimes_Response> getParserForType() {
      return PARSER;
    }

    public interface GameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CPlayer_GetLastPlayedTimes_Response.Game)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 appid = 1;</code>
       */
      boolean hasAppid();
      /**
       * <code>optional int32 appid = 1;</code>
       */
      int getAppid();

      /**
       * <code>optional uint32 last_playtime = 2;</code>
       */
      boolean hasLastPlaytime();
      /**
       * <code>optional uint32 last_playtime = 2;</code>
       */
      int getLastPlaytime();

      /**
       * <code>optional int32 playtime_2weeks = 3;</code>
       */
      boolean hasPlaytime2Weeks();
      /**
       * <code>optional int32 playtime_2weeks = 3;</code>
       */
      int getPlaytime2Weeks();

      /**
       * <code>optional int32 playtime_forever = 4;</code>
       */
      boolean hasPlaytimeForever();
      /**
       * <code>optional int32 playtime_forever = 4;</code>
       */
      int getPlaytimeForever();
    }
    /**
     * Protobuf type {@code CPlayer_GetLastPlayedTimes_Response.Game}
     */
    public static final class Game extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CPlayer_GetLastPlayedTimes_Response.Game)
        GameOrBuilder {
      // Use Game.newBuilder() to construct.
      private Game(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Game(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Game defaultInstance;
      public static Game getDefaultInstance() {
        return defaultInstance;
      }

      public Game getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Game(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                appid_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                lastPlaytime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                playtime2Weeks_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                playtimeForever_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_Game_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder.class);
      }

      public static com.google.protobuf.Parser<Game> PARSER =
          new com.google.protobuf.AbstractParser<Game>() {
        public Game parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Game(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Game> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int APPID_FIELD_NUMBER = 1;
      private int appid_;
      /**
       * <code>optional int32 appid = 1;</code>
       */
      public boolean hasAppid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 appid = 1;</code>
       */
      public int getAppid() {
        return appid_;
      }

      public static final int LAST_PLAYTIME_FIELD_NUMBER = 2;
      private int lastPlaytime_;
      /**
       * <code>optional uint32 last_playtime = 2;</code>
       */
      public boolean hasLastPlaytime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 last_playtime = 2;</code>
       */
      public int getLastPlaytime() {
        return lastPlaytime_;
      }

      public static final int PLAYTIME_2WEEKS_FIELD_NUMBER = 3;
      private int playtime2Weeks_;
      /**
       * <code>optional int32 playtime_2weeks = 3;</code>
       */
      public boolean hasPlaytime2Weeks() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 playtime_2weeks = 3;</code>
       */
      public int getPlaytime2Weeks() {
        return playtime2Weeks_;
      }

      public static final int PLAYTIME_FOREVER_FIELD_NUMBER = 4;
      private int playtimeForever_;
      /**
       * <code>optional int32 playtime_forever = 4;</code>
       */
      public boolean hasPlaytimeForever() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 playtime_forever = 4;</code>
       */
      public int getPlaytimeForever() {
        return playtimeForever_;
      }

      private void initFields() {
        appid_ = 0;
        lastPlaytime_ = 0;
        playtime2Weeks_ = 0;
        playtimeForever_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, appid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, lastPlaytime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, playtime2Weeks_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, playtimeForever_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, appid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, lastPlaytime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, playtime2Weeks_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, playtimeForever_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CPlayer_GetLastPlayedTimes_Response.Game}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CPlayer_GetLastPlayedTimes_Response.Game)
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_Game_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder.class);
        }

        // Construct using SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          appid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          lastPlaytime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          playtime2Weeks_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          playtimeForever_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor;
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getDefaultInstanceForType() {
          return SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance();
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game build() {
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game buildPartial() {
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game result = new SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.appid_ = appid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.lastPlaytime_ = lastPlaytime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.playtime2Weeks_ = playtime2Weeks_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.playtimeForever_ = playtimeForever_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game) {
            return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game other) {
          if (other == SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance()) return this;
          if (other.hasAppid()) {
            setAppid(other.getAppid());
          }
          if (other.hasLastPlaytime()) {
            setLastPlaytime(other.getLastPlaytime());
          }
          if (other.hasPlaytime2Weeks()) {
            setPlaytime2Weeks(other.getPlaytime2Weeks());
          }
          if (other.hasPlaytimeForever()) {
            setPlaytimeForever(other.getPlaytimeForever());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int appid_ ;
        /**
         * <code>optional int32 appid = 1;</code>
         */
        public boolean hasAppid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 appid = 1;</code>
         */
        public int getAppid() {
          return appid_;
        }
        /**
         * <code>optional int32 appid = 1;</code>
         */
        public Builder setAppid(int value) {
          bitField0_ |= 0x00000001;
          appid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 appid = 1;</code>
         */
        public Builder clearAppid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          appid_ = 0;
          onChanged();
          return this;
        }

        private int lastPlaytime_ ;
        /**
         * <code>optional uint32 last_playtime = 2;</code>
         */
        public boolean hasLastPlaytime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 last_playtime = 2;</code>
         */
        public int getLastPlaytime() {
          return lastPlaytime_;
        }
        /**
         * <code>optional uint32 last_playtime = 2;</code>
         */
        public Builder setLastPlaytime(int value) {
          bitField0_ |= 0x00000002;
          lastPlaytime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_playtime = 2;</code>
         */
        public Builder clearLastPlaytime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lastPlaytime_ = 0;
          onChanged();
          return this;
        }

        private int playtime2Weeks_ ;
        /**
         * <code>optional int32 playtime_2weeks = 3;</code>
         */
        public boolean hasPlaytime2Weeks() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 playtime_2weeks = 3;</code>
         */
        public int getPlaytime2Weeks() {
          return playtime2Weeks_;
        }
        /**
         * <code>optional int32 playtime_2weeks = 3;</code>
         */
        public Builder setPlaytime2Weeks(int value) {
          bitField0_ |= 0x00000004;
          playtime2Weeks_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 playtime_2weeks = 3;</code>
         */
        public Builder clearPlaytime2Weeks() {
          bitField0_ = (bitField0_ & ~0x00000004);
          playtime2Weeks_ = 0;
          onChanged();
          return this;
        }

        private int playtimeForever_ ;
        /**
         * <code>optional int32 playtime_forever = 4;</code>
         */
        public boolean hasPlaytimeForever() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 playtime_forever = 4;</code>
         */
        public int getPlaytimeForever() {
          return playtimeForever_;
        }
        /**
         * <code>optional int32 playtime_forever = 4;</code>
         */
        public Builder setPlaytimeForever(int value) {
          bitField0_ |= 0x00000008;
          playtimeForever_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 playtime_forever = 4;</code>
         */
        public Builder clearPlaytimeForever() {
          bitField0_ = (bitField0_ & ~0x00000008);
          playtimeForever_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CPlayer_GetLastPlayedTimes_Response.Game)
      }

      static {
        defaultInstance = new Game(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response.Game)
    }

    public static final int GAMES_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> games_;
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    private void initFields() {
      games_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(1, games_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, games_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_GetLastPlayedTimes_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_GetLastPlayedTimes_Response)
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.class, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGamesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response build() {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response result = new SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response(this);
        int from_bitField0_ = bitField0_;
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.getDefaultInstance()) return this;
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
              gamesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game>(games_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder setGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder setGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder> 
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_GetLastPlayedTimes_Response)
    }

    static {
      defaultInstance = new CPlayer_GetLastPlayedTimes_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response)
  }

  public interface CPlayer_AcceptSSA_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_AcceptSSA_Request)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CPlayer_AcceptSSA_Request}
   */
  public static final class CPlayer_AcceptSSA_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_AcceptSSA_Request)
      CPlayer_AcceptSSA_RequestOrBuilder {
    // Use CPlayer_AcceptSSA_Request.newBuilder() to construct.
    private CPlayer_AcceptSSA_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_AcceptSSA_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_AcceptSSA_Request defaultInstance;
    public static CPlayer_AcceptSSA_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_AcceptSSA_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_AcceptSSA_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.class, SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_AcceptSSA_Request> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_AcceptSSA_Request>() {
      public CPlayer_AcceptSSA_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_AcceptSSA_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_AcceptSSA_Request> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_AcceptSSA_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_AcceptSSA_Request)
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.class, SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Request_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request build() {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request result = new SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_AcceptSSA_Request)
    }

    static {
      defaultInstance = new CPlayer_AcceptSSA_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Request)
  }

  public interface CPlayer_AcceptSSA_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_AcceptSSA_Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CPlayer_AcceptSSA_Response}
   */
  public static final class CPlayer_AcceptSSA_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_AcceptSSA_Response)
      CPlayer_AcceptSSA_ResponseOrBuilder {
    // Use CPlayer_AcceptSSA_Response.newBuilder() to construct.
    private CPlayer_AcceptSSA_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_AcceptSSA_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_AcceptSSA_Response defaultInstance;
    public static CPlayer_AcceptSSA_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_AcceptSSA_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_AcceptSSA_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.class, SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_AcceptSSA_Response> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_AcceptSSA_Response>() {
      public CPlayer_AcceptSSA_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_AcceptSSA_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_AcceptSSA_Response> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_AcceptSSA_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_AcceptSSA_Response)
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.class, SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_AcceptSSA_Response_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response build() {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response result = new SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_AcceptSSA_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_AcceptSSA_Response)
    }

    static {
      defaultInstance = new CPlayer_AcceptSSA_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Response)
  }

  public interface CPlayer_LastPlayedTimes_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayer_LastPlayedTimes_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> 
        getGamesList();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index);
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
        getGamesOrBuilderList();
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CPlayer_LastPlayedTimes_Notification}
   */
  public static final class CPlayer_LastPlayedTimes_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayer_LastPlayedTimes_Notification)
      CPlayer_LastPlayedTimes_NotificationOrBuilder {
    // Use CPlayer_LastPlayedTimes_Notification.newBuilder() to construct.
    private CPlayer_LastPlayedTimes_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayer_LastPlayedTimes_Notification(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayer_LastPlayedTimes_Notification defaultInstance;
    public static CPlayer_LastPlayedTimes_Notification getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayer_LastPlayedTimes_Notification getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayer_LastPlayedTimes_Notification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                games_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game>();
                mutable_bitField0_ |= 0x00000001;
              }
              games_.add(input.readMessage(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = java.util.Collections.unmodifiableList(games_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_LastPlayedTimes_Notification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayer_LastPlayedTimes_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.class, SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayer_LastPlayedTimes_Notification> PARSER =
        new com.google.protobuf.AbstractParser<CPlayer_LastPlayedTimes_Notification>() {
      public CPlayer_LastPlayedTimes_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayer_LastPlayedTimes_Notification(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayer_LastPlayedTimes_Notification> getParserForType() {
      return PARSER;
    }

    public static final int GAMES_FIELD_NUMBER = 1;
    private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> games_;
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    private void initFields() {
      games_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(1, games_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, games_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayer_LastPlayedTimes_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayer_LastPlayedTimes_Notification)
        SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_LastPlayedTimes_Notification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_LastPlayedTimes_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.class, SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGamesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayer_LastPlayedTimes_Notification_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification build() {
        SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification buildPartial() {
        SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification result = new SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification(this);
        int from_bitField0_ = bitField0_;
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification other) {
        if (other == SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification.getDefaultInstance()) return this;
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
              gamesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayer_LastPlayedTimes_Notification) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = new java.util.ArrayList<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game>(games_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder setGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder setGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addGames(
          int index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<? extends SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CPlayer_GetLastPlayedTimes_Response.Game games = 1;</code>
       */
      public java.util.List<SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder> 
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder> 
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.Game.Builder, SteammessagesPlayerSteamclient.CPlayer_GetLastPlayedTimes_Response.GameOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CPlayer_LastPlayedTimes_Notification)
    }

    static {
      defaultInstance = new CPlayer_LastPlayedTimes_Notification(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayer_LastPlayedTimes_Notification)
  }

  public interface CPlayerClient_GetSystemInformation_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayerClient_GetSystemInformation_Request)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CPlayerClient_GetSystemInformation_Request}
   */
  public static final class CPlayerClient_GetSystemInformation_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayerClient_GetSystemInformation_Request)
      CPlayerClient_GetSystemInformation_RequestOrBuilder {
    // Use CPlayerClient_GetSystemInformation_Request.newBuilder() to construct.
    private CPlayerClient_GetSystemInformation_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayerClient_GetSystemInformation_Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayerClient_GetSystemInformation_Request defaultInstance;
    public static CPlayerClient_GetSystemInformation_Request getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayerClient_GetSystemInformation_Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayerClient_GetSystemInformation_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.class, SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayerClient_GetSystemInformation_Request> PARSER =
        new com.google.protobuf.AbstractParser<CPlayerClient_GetSystemInformation_Request>() {
      public CPlayerClient_GetSystemInformation_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayerClient_GetSystemInformation_Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayerClient_GetSystemInformation_Request> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayerClient_GetSystemInformation_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayerClient_GetSystemInformation_Request)
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.class, SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Request_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request build() {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request buildPartial() {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request result = new SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request other) {
        if (other == SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPlayerClient_GetSystemInformation_Request)
    }

    static {
      defaultInstance = new CPlayerClient_GetSystemInformation_Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayerClient_GetSystemInformation_Request)
  }

  public interface CClientSystemInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CClientSystemInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    boolean hasCpu();
    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfo.CPU getCpu();
    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder getCpuOrBuilder();

    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    boolean hasVideoCard();
    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard getVideoCard();
    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder getVideoCardOrBuilder();

    /**
     * <code>optional string operating_system = 3;</code>
     */
    boolean hasOperatingSystem();
    /**
     * <code>optional string operating_system = 3;</code>
     */
    java.lang.String getOperatingSystem();
    /**
     * <code>optional string operating_system = 3;</code>
     */
    com.google.protobuf.ByteString
        getOperatingSystemBytes();

    /**
     * <code>optional bool os_64bit = 4;</code>
     */
    boolean hasOs64Bit();
    /**
     * <code>optional bool os_64bit = 4;</code>
     */
    boolean getOs64Bit();

    /**
     * <code>optional int32 system_ram_mb = 5;</code>
     */
    boolean hasSystemRamMb();
    /**
     * <code>optional int32 system_ram_mb = 5;</code>
     */
    int getSystemRamMb();

    /**
     * <code>optional string audio_device = 6;</code>
     */
    boolean hasAudioDevice();
    /**
     * <code>optional string audio_device = 6;</code>
     */
    java.lang.String getAudioDevice();
    /**
     * <code>optional string audio_device = 6;</code>
     */
    com.google.protobuf.ByteString
        getAudioDeviceBytes();

    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    boolean hasAudioDriverVersion();
    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    java.lang.String getAudioDriverVersion();
    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    com.google.protobuf.ByteString
        getAudioDriverVersionBytes();
  }
  /**
   * Protobuf type {@code CClientSystemInfo}
   */
  public static final class CClientSystemInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CClientSystemInfo)
      CClientSystemInfoOrBuilder {
    // Use CClientSystemInfo.newBuilder() to construct.
    private CClientSystemInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CClientSystemInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CClientSystemInfo defaultInstance;
    public static CClientSystemInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CClientSystemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CClientSystemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = cpu_.toBuilder();
              }
              cpu_ = input.readMessage(SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cpu_);
                cpu_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = videoCard_.toBuilder();
              }
              videoCard_ = input.readMessage(SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(videoCard_);
                videoCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              operatingSystem_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              os64Bit_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              systemRamMb_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              audioDevice_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              audioDriverVersion_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CClientSystemInfo.class, SteammessagesPlayerSteamclient.CClientSystemInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CClientSystemInfo> PARSER =
        new com.google.protobuf.AbstractParser<CClientSystemInfo>() {
      public CClientSystemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CClientSystemInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CClientSystemInfo> getParserForType() {
      return PARSER;
    }

    public interface CPUOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CClientSystemInfo.CPU)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 speed_mhz = 1;</code>
       */
      boolean hasSpeedMhz();
      /**
       * <code>optional int32 speed_mhz = 1;</code>
       */
      int getSpeedMhz();

      /**
       * <code>optional string vendor = 2;</code>
       */
      boolean hasVendor();
      /**
       * <code>optional string vendor = 2;</code>
       */
      java.lang.String getVendor();
      /**
       * <code>optional string vendor = 2;</code>
       */
      com.google.protobuf.ByteString
          getVendorBytes();

      /**
       * <code>optional int32 logical_processors = 3;</code>
       */
      boolean hasLogicalProcessors();
      /**
       * <code>optional int32 logical_processors = 3;</code>
       */
      int getLogicalProcessors();

      /**
       * <code>optional int32 physical_processors = 4;</code>
       */
      boolean hasPhysicalProcessors();
      /**
       * <code>optional int32 physical_processors = 4;</code>
       */
      int getPhysicalProcessors();

      /**
       * <code>optional bool hyperthreading = 5;</code>
       */
      boolean hasHyperthreading();
      /**
       * <code>optional bool hyperthreading = 5;</code>
       */
      boolean getHyperthreading();

      /**
       * <code>optional bool fcmov = 6;</code>
       */
      boolean hasFcmov();
      /**
       * <code>optional bool fcmov = 6;</code>
       */
      boolean getFcmov();

      /**
       * <code>optional bool sse2 = 7;</code>
       */
      boolean hasSse2();
      /**
       * <code>optional bool sse2 = 7;</code>
       */
      boolean getSse2();

      /**
       * <code>optional bool sse3 = 8;</code>
       */
      boolean hasSse3();
      /**
       * <code>optional bool sse3 = 8;</code>
       */
      boolean getSse3();

      /**
       * <code>optional bool ssse3 = 9;</code>
       */
      boolean hasSsse3();
      /**
       * <code>optional bool ssse3 = 9;</code>
       */
      boolean getSsse3();

      /**
       * <code>optional bool sse4a = 10;</code>
       */
      boolean hasSse4A();
      /**
       * <code>optional bool sse4a = 10;</code>
       */
      boolean getSse4A();

      /**
       * <code>optional bool sse41 = 11;</code>
       */
      boolean hasSse41();
      /**
       * <code>optional bool sse41 = 11;</code>
       */
      boolean getSse41();

      /**
       * <code>optional bool sse42 = 12;</code>
       */
      boolean hasSse42();
      /**
       * <code>optional bool sse42 = 12;</code>
       */
      boolean getSse42();
    }
    /**
     * Protobuf type {@code CClientSystemInfo.CPU}
     */
    public static final class CPU extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CClientSystemInfo.CPU)
        CPUOrBuilder {
      // Use CPU.newBuilder() to construct.
      private CPU(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CPU(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CPU defaultInstance;
      public static CPU getDefaultInstance() {
        return defaultInstance;
      }

      public CPU getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CPU(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                speedMhz_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                vendor_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                logicalProcessors_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                physicalProcessors_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                hyperthreading_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                fcmov_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                sse2_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                sse3_ = input.readBool();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                ssse3_ = input.readBool();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                sse4A_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                sse41_ = input.readBool();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                sse42_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_CPU_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_CPU_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.class, SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder.class);
      }

      public static com.google.protobuf.Parser<CPU> PARSER =
          new com.google.protobuf.AbstractParser<CPU>() {
        public CPU parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CPU(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CPU> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SPEED_MHZ_FIELD_NUMBER = 1;
      private int speedMhz_;
      /**
       * <code>optional int32 speed_mhz = 1;</code>
       */
      public boolean hasSpeedMhz() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 speed_mhz = 1;</code>
       */
      public int getSpeedMhz() {
        return speedMhz_;
      }

      public static final int VENDOR_FIELD_NUMBER = 2;
      private java.lang.Object vendor_;
      /**
       * <code>optional string vendor = 2;</code>
       */
      public boolean hasVendor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string vendor = 2;</code>
       */
      public java.lang.String getVendor() {
        java.lang.Object ref = vendor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vendor_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string vendor = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVendorBytes() {
        java.lang.Object ref = vendor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vendor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOGICAL_PROCESSORS_FIELD_NUMBER = 3;
      private int logicalProcessors_;
      /**
       * <code>optional int32 logical_processors = 3;</code>
       */
      public boolean hasLogicalProcessors() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 logical_processors = 3;</code>
       */
      public int getLogicalProcessors() {
        return logicalProcessors_;
      }

      public static final int PHYSICAL_PROCESSORS_FIELD_NUMBER = 4;
      private int physicalProcessors_;
      /**
       * <code>optional int32 physical_processors = 4;</code>
       */
      public boolean hasPhysicalProcessors() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 physical_processors = 4;</code>
       */
      public int getPhysicalProcessors() {
        return physicalProcessors_;
      }

      public static final int HYPERTHREADING_FIELD_NUMBER = 5;
      private boolean hyperthreading_;
      /**
       * <code>optional bool hyperthreading = 5;</code>
       */
      public boolean hasHyperthreading() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hyperthreading = 5;</code>
       */
      public boolean getHyperthreading() {
        return hyperthreading_;
      }

      public static final int FCMOV_FIELD_NUMBER = 6;
      private boolean fcmov_;
      /**
       * <code>optional bool fcmov = 6;</code>
       */
      public boolean hasFcmov() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool fcmov = 6;</code>
       */
      public boolean getFcmov() {
        return fcmov_;
      }

      public static final int SSE2_FIELD_NUMBER = 7;
      private boolean sse2_;
      /**
       * <code>optional bool sse2 = 7;</code>
       */
      public boolean hasSse2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool sse2 = 7;</code>
       */
      public boolean getSse2() {
        return sse2_;
      }

      public static final int SSE3_FIELD_NUMBER = 8;
      private boolean sse3_;
      /**
       * <code>optional bool sse3 = 8;</code>
       */
      public boolean hasSse3() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool sse3 = 8;</code>
       */
      public boolean getSse3() {
        return sse3_;
      }

      public static final int SSSE3_FIELD_NUMBER = 9;
      private boolean ssse3_;
      /**
       * <code>optional bool ssse3 = 9;</code>
       */
      public boolean hasSsse3() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool ssse3 = 9;</code>
       */
      public boolean getSsse3() {
        return ssse3_;
      }

      public static final int SSE4A_FIELD_NUMBER = 10;
      private boolean sse4A_;
      /**
       * <code>optional bool sse4a = 10;</code>
       */
      public boolean hasSse4A() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool sse4a = 10;</code>
       */
      public boolean getSse4A() {
        return sse4A_;
      }

      public static final int SSE41_FIELD_NUMBER = 11;
      private boolean sse41_;
      /**
       * <code>optional bool sse41 = 11;</code>
       */
      public boolean hasSse41() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool sse41 = 11;</code>
       */
      public boolean getSse41() {
        return sse41_;
      }

      public static final int SSE42_FIELD_NUMBER = 12;
      private boolean sse42_;
      /**
       * <code>optional bool sse42 = 12;</code>
       */
      public boolean hasSse42() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool sse42 = 12;</code>
       */
      public boolean getSse42() {
        return sse42_;
      }

      private void initFields() {
        speedMhz_ = 0;
        vendor_ = "";
        logicalProcessors_ = 0;
        physicalProcessors_ = 0;
        hyperthreading_ = false;
        fcmov_ = false;
        sse2_ = false;
        sse3_ = false;
        ssse3_ = false;
        sse4A_ = false;
        sse41_ = false;
        sse42_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, speedMhz_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getVendorBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, logicalProcessors_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, physicalProcessors_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, hyperthreading_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, fcmov_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, sse2_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(8, sse3_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(9, ssse3_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, sse4A_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(11, sse41_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBool(12, sse42_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, speedMhz_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getVendorBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, logicalProcessors_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, physicalProcessors_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, hyperthreading_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, fcmov_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, sse2_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, sse3_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, ssse3_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, sse4A_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, sse41_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, sse42_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesPlayerSteamclient.CClientSystemInfo.CPU prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CClientSystemInfo.CPU}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CClientSystemInfo.CPU)
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_CPU_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_CPU_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.class, SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder.class);
        }

        // Construct using SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          speedMhz_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          vendor_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          logicalProcessors_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          physicalProcessors_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          hyperthreading_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          fcmov_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          sse2_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          sse3_ = false;
          bitField0_ = (bitField0_ & ~0x00000080);
          ssse3_ = false;
          bitField0_ = (bitField0_ & ~0x00000100);
          sse4A_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          sse41_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          sse42_ = false;
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_CPU_descriptor;
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU getDefaultInstanceForType() {
          return SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance();
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU build() {
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU buildPartial() {
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU result = new SteammessagesPlayerSteamclient.CClientSystemInfo.CPU(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.speedMhz_ = speedMhz_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.vendor_ = vendor_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.logicalProcessors_ = logicalProcessors_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.physicalProcessors_ = physicalProcessors_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.hyperthreading_ = hyperthreading_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.fcmov_ = fcmov_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.sse2_ = sse2_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.sse3_ = sse3_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.ssse3_ = ssse3_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.sse4A_ = sse4A_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.sse41_ = sse41_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.sse42_ = sse42_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesPlayerSteamclient.CClientSystemInfo.CPU) {
            return mergeFrom((SteammessagesPlayerSteamclient.CClientSystemInfo.CPU)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesPlayerSteamclient.CClientSystemInfo.CPU other) {
          if (other == SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance()) return this;
          if (other.hasSpeedMhz()) {
            setSpeedMhz(other.getSpeedMhz());
          }
          if (other.hasVendor()) {
            bitField0_ |= 0x00000002;
            vendor_ = other.vendor_;
            onChanged();
          }
          if (other.hasLogicalProcessors()) {
            setLogicalProcessors(other.getLogicalProcessors());
          }
          if (other.hasPhysicalProcessors()) {
            setPhysicalProcessors(other.getPhysicalProcessors());
          }
          if (other.hasHyperthreading()) {
            setHyperthreading(other.getHyperthreading());
          }
          if (other.hasFcmov()) {
            setFcmov(other.getFcmov());
          }
          if (other.hasSse2()) {
            setSse2(other.getSse2());
          }
          if (other.hasSse3()) {
            setSse3(other.getSse3());
          }
          if (other.hasSsse3()) {
            setSsse3(other.getSsse3());
          }
          if (other.hasSse4A()) {
            setSse4A(other.getSse4A());
          }
          if (other.hasSse41()) {
            setSse41(other.getSse41());
          }
          if (other.hasSse42()) {
            setSse42(other.getSse42());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesPlayerSteamclient.CClientSystemInfo.CPU) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int speedMhz_ ;
        /**
         * <code>optional int32 speed_mhz = 1;</code>
         */
        public boolean hasSpeedMhz() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 speed_mhz = 1;</code>
         */
        public int getSpeedMhz() {
          return speedMhz_;
        }
        /**
         * <code>optional int32 speed_mhz = 1;</code>
         */
        public Builder setSpeedMhz(int value) {
          bitField0_ |= 0x00000001;
          speedMhz_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 speed_mhz = 1;</code>
         */
        public Builder clearSpeedMhz() {
          bitField0_ = (bitField0_ & ~0x00000001);
          speedMhz_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object vendor_ = "";
        /**
         * <code>optional string vendor = 2;</code>
         */
        public boolean hasVendor() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string vendor = 2;</code>
         */
        public java.lang.String getVendor() {
          java.lang.Object ref = vendor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              vendor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string vendor = 2;</code>
         */
        public com.google.protobuf.ByteString
            getVendorBytes() {
          java.lang.Object ref = vendor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            vendor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string vendor = 2;</code>
         */
        public Builder setVendor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          vendor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string vendor = 2;</code>
         */
        public Builder clearVendor() {
          bitField0_ = (bitField0_ & ~0x00000002);
          vendor_ = getDefaultInstance().getVendor();
          onChanged();
          return this;
        }
        /**
         * <code>optional string vendor = 2;</code>
         */
        public Builder setVendorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          vendor_ = value;
          onChanged();
          return this;
        }

        private int logicalProcessors_ ;
        /**
         * <code>optional int32 logical_processors = 3;</code>
         */
        public boolean hasLogicalProcessors() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 logical_processors = 3;</code>
         */
        public int getLogicalProcessors() {
          return logicalProcessors_;
        }
        /**
         * <code>optional int32 logical_processors = 3;</code>
         */
        public Builder setLogicalProcessors(int value) {
          bitField0_ |= 0x00000004;
          logicalProcessors_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 logical_processors = 3;</code>
         */
        public Builder clearLogicalProcessors() {
          bitField0_ = (bitField0_ & ~0x00000004);
          logicalProcessors_ = 0;
          onChanged();
          return this;
        }

        private int physicalProcessors_ ;
        /**
         * <code>optional int32 physical_processors = 4;</code>
         */
        public boolean hasPhysicalProcessors() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 physical_processors = 4;</code>
         */
        public int getPhysicalProcessors() {
          return physicalProcessors_;
        }
        /**
         * <code>optional int32 physical_processors = 4;</code>
         */
        public Builder setPhysicalProcessors(int value) {
          bitField0_ |= 0x00000008;
          physicalProcessors_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 physical_processors = 4;</code>
         */
        public Builder clearPhysicalProcessors() {
          bitField0_ = (bitField0_ & ~0x00000008);
          physicalProcessors_ = 0;
          onChanged();
          return this;
        }

        private boolean hyperthreading_ ;
        /**
         * <code>optional bool hyperthreading = 5;</code>
         */
        public boolean hasHyperthreading() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool hyperthreading = 5;</code>
         */
        public boolean getHyperthreading() {
          return hyperthreading_;
        }
        /**
         * <code>optional bool hyperthreading = 5;</code>
         */
        public Builder setHyperthreading(boolean value) {
          bitField0_ |= 0x00000010;
          hyperthreading_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool hyperthreading = 5;</code>
         */
        public Builder clearHyperthreading() {
          bitField0_ = (bitField0_ & ~0x00000010);
          hyperthreading_ = false;
          onChanged();
          return this;
        }

        private boolean fcmov_ ;
        /**
         * <code>optional bool fcmov = 6;</code>
         */
        public boolean hasFcmov() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool fcmov = 6;</code>
         */
        public boolean getFcmov() {
          return fcmov_;
        }
        /**
         * <code>optional bool fcmov = 6;</code>
         */
        public Builder setFcmov(boolean value) {
          bitField0_ |= 0x00000020;
          fcmov_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool fcmov = 6;</code>
         */
        public Builder clearFcmov() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fcmov_ = false;
          onChanged();
          return this;
        }

        private boolean sse2_ ;
        /**
         * <code>optional bool sse2 = 7;</code>
         */
        public boolean hasSse2() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool sse2 = 7;</code>
         */
        public boolean getSse2() {
          return sse2_;
        }
        /**
         * <code>optional bool sse2 = 7;</code>
         */
        public Builder setSse2(boolean value) {
          bitField0_ |= 0x00000040;
          sse2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool sse2 = 7;</code>
         */
        public Builder clearSse2() {
          bitField0_ = (bitField0_ & ~0x00000040);
          sse2_ = false;
          onChanged();
          return this;
        }

        private boolean sse3_ ;
        /**
         * <code>optional bool sse3 = 8;</code>
         */
        public boolean hasSse3() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional bool sse3 = 8;</code>
         */
        public boolean getSse3() {
          return sse3_;
        }
        /**
         * <code>optional bool sse3 = 8;</code>
         */
        public Builder setSse3(boolean value) {
          bitField0_ |= 0x00000080;
          sse3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool sse3 = 8;</code>
         */
        public Builder clearSse3() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sse3_ = false;
          onChanged();
          return this;
        }

        private boolean ssse3_ ;
        /**
         * <code>optional bool ssse3 = 9;</code>
         */
        public boolean hasSsse3() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bool ssse3 = 9;</code>
         */
        public boolean getSsse3() {
          return ssse3_;
        }
        /**
         * <code>optional bool ssse3 = 9;</code>
         */
        public Builder setSsse3(boolean value) {
          bitField0_ |= 0x00000100;
          ssse3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool ssse3 = 9;</code>
         */
        public Builder clearSsse3() {
          bitField0_ = (bitField0_ & ~0x00000100);
          ssse3_ = false;
          onChanged();
          return this;
        }

        private boolean sse4A_ ;
        /**
         * <code>optional bool sse4a = 10;</code>
         */
        public boolean hasSse4A() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bool sse4a = 10;</code>
         */
        public boolean getSse4A() {
          return sse4A_;
        }
        /**
         * <code>optional bool sse4a = 10;</code>
         */
        public Builder setSse4A(boolean value) {
          bitField0_ |= 0x00000200;
          sse4A_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool sse4a = 10;</code>
         */
        public Builder clearSse4A() {
          bitField0_ = (bitField0_ & ~0x00000200);
          sse4A_ = false;
          onChanged();
          return this;
        }

        private boolean sse41_ ;
        /**
         * <code>optional bool sse41 = 11;</code>
         */
        public boolean hasSse41() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bool sse41 = 11;</code>
         */
        public boolean getSse41() {
          return sse41_;
        }
        /**
         * <code>optional bool sse41 = 11;</code>
         */
        public Builder setSse41(boolean value) {
          bitField0_ |= 0x00000400;
          sse41_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool sse41 = 11;</code>
         */
        public Builder clearSse41() {
          bitField0_ = (bitField0_ & ~0x00000400);
          sse41_ = false;
          onChanged();
          return this;
        }

        private boolean sse42_ ;
        /**
         * <code>optional bool sse42 = 12;</code>
         */
        public boolean hasSse42() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional bool sse42 = 12;</code>
         */
        public boolean getSse42() {
          return sse42_;
        }
        /**
         * <code>optional bool sse42 = 12;</code>
         */
        public Builder setSse42(boolean value) {
          bitField0_ |= 0x00000800;
          sse42_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool sse42 = 12;</code>
         */
        public Builder clearSse42() {
          bitField0_ = (bitField0_ & ~0x00000800);
          sse42_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CClientSystemInfo.CPU)
      }

      static {
        defaultInstance = new CPU(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CClientSystemInfo.CPU)
    }

    public interface VideoCardOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CClientSystemInfo.VideoCard)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string driver = 1;</code>
       */
      boolean hasDriver();
      /**
       * <code>optional string driver = 1;</code>
       */
      java.lang.String getDriver();
      /**
       * <code>optional string driver = 1;</code>
       */
      com.google.protobuf.ByteString
          getDriverBytes();

      /**
       * <code>optional string driver_version = 2;</code>
       */
      boolean hasDriverVersion();
      /**
       * <code>optional string driver_version = 2;</code>
       */
      java.lang.String getDriverVersion();
      /**
       * <code>optional string driver_version = 2;</code>
       */
      com.google.protobuf.ByteString
          getDriverVersionBytes();

      /**
       * <code>optional uint32 driver_date = 3;</code>
       */
      boolean hasDriverDate();
      /**
       * <code>optional uint32 driver_date = 3;</code>
       */
      int getDriverDate();

      /**
       * <code>optional string directx_version = 4;</code>
       */
      boolean hasDirectxVersion();
      /**
       * <code>optional string directx_version = 4;</code>
       */
      java.lang.String getDirectxVersion();
      /**
       * <code>optional string directx_version = 4;</code>
       */
      com.google.protobuf.ByteString
          getDirectxVersionBytes();

      /**
       * <code>optional string opengl_version = 5;</code>
       */
      boolean hasOpenglVersion();
      /**
       * <code>optional string opengl_version = 5;</code>
       */
      java.lang.String getOpenglVersion();
      /**
       * <code>optional string opengl_version = 5;</code>
       */
      com.google.protobuf.ByteString
          getOpenglVersionBytes();

      /**
       * <code>optional int32 vendorid = 6;</code>
       */
      boolean hasVendorid();
      /**
       * <code>optional int32 vendorid = 6;</code>
       */
      int getVendorid();

      /**
       * <code>optional int32 deviceid = 7;</code>
       */
      boolean hasDeviceid();
      /**
       * <code>optional int32 deviceid = 7;</code>
       */
      int getDeviceid();

      /**
       * <code>optional int32 vram_mb = 8;</code>
       */
      boolean hasVramMb();
      /**
       * <code>optional int32 vram_mb = 8;</code>
       */
      int getVramMb();
    }
    /**
     * Protobuf type {@code CClientSystemInfo.VideoCard}
     */
    public static final class VideoCard extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CClientSystemInfo.VideoCard)
        VideoCardOrBuilder {
      // Use VideoCard.newBuilder() to construct.
      private VideoCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private VideoCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final VideoCard defaultInstance;
      public static VideoCard getDefaultInstance() {
        return defaultInstance;
      }

      public VideoCard getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private VideoCard(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                driver_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                driverVersion_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                driverDate_ = input.readUInt32();
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                directxVersion_ = bs;
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                openglVersion_ = bs;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                vendorid_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                deviceid_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                vramMb_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_VideoCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_VideoCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.class, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder.class);
      }

      public static com.google.protobuf.Parser<VideoCard> PARSER =
          new com.google.protobuf.AbstractParser<VideoCard>() {
        public VideoCard parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VideoCard(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<VideoCard> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int DRIVER_FIELD_NUMBER = 1;
      private java.lang.Object driver_;
      /**
       * <code>optional string driver = 1;</code>
       */
      public boolean hasDriver() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string driver = 1;</code>
       */
      public java.lang.String getDriver() {
        java.lang.Object ref = driver_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            driver_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string driver = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDriverBytes() {
        java.lang.Object ref = driver_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          driver_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DRIVER_VERSION_FIELD_NUMBER = 2;
      private java.lang.Object driverVersion_;
      /**
       * <code>optional string driver_version = 2;</code>
       */
      public boolean hasDriverVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string driver_version = 2;</code>
       */
      public java.lang.String getDriverVersion() {
        java.lang.Object ref = driverVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            driverVersion_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string driver_version = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDriverVersionBytes() {
        java.lang.Object ref = driverVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          driverVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DRIVER_DATE_FIELD_NUMBER = 3;
      private int driverDate_;
      /**
       * <code>optional uint32 driver_date = 3;</code>
       */
      public boolean hasDriverDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 driver_date = 3;</code>
       */
      public int getDriverDate() {
        return driverDate_;
      }

      public static final int DIRECTX_VERSION_FIELD_NUMBER = 4;
      private java.lang.Object directxVersion_;
      /**
       * <code>optional string directx_version = 4;</code>
       */
      public boolean hasDirectxVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string directx_version = 4;</code>
       */
      public java.lang.String getDirectxVersion() {
        java.lang.Object ref = directxVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            directxVersion_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string directx_version = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDirectxVersionBytes() {
        java.lang.Object ref = directxVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          directxVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OPENGL_VERSION_FIELD_NUMBER = 5;
      private java.lang.Object openglVersion_;
      /**
       * <code>optional string opengl_version = 5;</code>
       */
      public boolean hasOpenglVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string opengl_version = 5;</code>
       */
      public java.lang.String getOpenglVersion() {
        java.lang.Object ref = openglVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            openglVersion_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string opengl_version = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOpenglVersionBytes() {
        java.lang.Object ref = openglVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          openglVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VENDORID_FIELD_NUMBER = 6;
      private int vendorid_;
      /**
       * <code>optional int32 vendorid = 6;</code>
       */
      public boolean hasVendorid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 vendorid = 6;</code>
       */
      public int getVendorid() {
        return vendorid_;
      }

      public static final int DEVICEID_FIELD_NUMBER = 7;
      private int deviceid_;
      /**
       * <code>optional int32 deviceid = 7;</code>
       */
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 deviceid = 7;</code>
       */
      public int getDeviceid() {
        return deviceid_;
      }

      public static final int VRAM_MB_FIELD_NUMBER = 8;
      private int vramMb_;
      /**
       * <code>optional int32 vram_mb = 8;</code>
       */
      public boolean hasVramMb() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 vram_mb = 8;</code>
       */
      public int getVramMb() {
        return vramMb_;
      }

      private void initFields() {
        driver_ = "";
        driverVersion_ = "";
        driverDate_ = 0;
        directxVersion_ = "";
        openglVersion_ = "";
        vendorid_ = 0;
        deviceid_ = 0;
        vramMb_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getDriverBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDriverVersionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, driverDate_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getDirectxVersionBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getOpenglVersionBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, vendorid_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, deviceid_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, vramMb_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getDriverBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDriverVersionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, driverDate_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getDirectxVersionBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getOpenglVersionBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, vendorid_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, deviceid_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, vramMb_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CClientSystemInfo.VideoCard}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CClientSystemInfo.VideoCard)
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_VideoCard_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_VideoCard_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.class, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder.class);
        }

        // Construct using SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          driver_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          driverVersion_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          driverDate_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          directxVersion_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          openglVersion_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          vendorid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          deviceid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          vramMb_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_VideoCard_descriptor;
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard getDefaultInstanceForType() {
          return SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance();
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard build() {
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard buildPartial() {
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard result = new SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.driver_ = driver_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.driverVersion_ = driverVersion_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.driverDate_ = driverDate_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.directxVersion_ = directxVersion_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.openglVersion_ = openglVersion_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.vendorid_ = vendorid_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.deviceid_ = deviceid_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.vramMb_ = vramMb_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard) {
            return mergeFrom((SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard other) {
          if (other == SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance()) return this;
          if (other.hasDriver()) {
            bitField0_ |= 0x00000001;
            driver_ = other.driver_;
            onChanged();
          }
          if (other.hasDriverVersion()) {
            bitField0_ |= 0x00000002;
            driverVersion_ = other.driverVersion_;
            onChanged();
          }
          if (other.hasDriverDate()) {
            setDriverDate(other.getDriverDate());
          }
          if (other.hasDirectxVersion()) {
            bitField0_ |= 0x00000008;
            directxVersion_ = other.directxVersion_;
            onChanged();
          }
          if (other.hasOpenglVersion()) {
            bitField0_ |= 0x00000010;
            openglVersion_ = other.openglVersion_;
            onChanged();
          }
          if (other.hasVendorid()) {
            setVendorid(other.getVendorid());
          }
          if (other.hasDeviceid()) {
            setDeviceid(other.getDeviceid());
          }
          if (other.hasVramMb()) {
            setVramMb(other.getVramMb());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object driver_ = "";
        /**
         * <code>optional string driver = 1;</code>
         */
        public boolean hasDriver() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string driver = 1;</code>
         */
        public java.lang.String getDriver() {
          java.lang.Object ref = driver_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              driver_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string driver = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDriverBytes() {
          java.lang.Object ref = driver_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            driver_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string driver = 1;</code>
         */
        public Builder setDriver(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          driver_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string driver = 1;</code>
         */
        public Builder clearDriver() {
          bitField0_ = (bitField0_ & ~0x00000001);
          driver_ = getDefaultInstance().getDriver();
          onChanged();
          return this;
        }
        /**
         * <code>optional string driver = 1;</code>
         */
        public Builder setDriverBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          driver_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object driverVersion_ = "";
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public boolean hasDriverVersion() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public java.lang.String getDriverVersion() {
          java.lang.Object ref = driverVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              driverVersion_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDriverVersionBytes() {
          java.lang.Object ref = driverVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            driverVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public Builder setDriverVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          driverVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public Builder clearDriverVersion() {
          bitField0_ = (bitField0_ & ~0x00000002);
          driverVersion_ = getDefaultInstance().getDriverVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string driver_version = 2;</code>
         */
        public Builder setDriverVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          driverVersion_ = value;
          onChanged();
          return this;
        }

        private int driverDate_ ;
        /**
         * <code>optional uint32 driver_date = 3;</code>
         */
        public boolean hasDriverDate() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 driver_date = 3;</code>
         */
        public int getDriverDate() {
          return driverDate_;
        }
        /**
         * <code>optional uint32 driver_date = 3;</code>
         */
        public Builder setDriverDate(int value) {
          bitField0_ |= 0x00000004;
          driverDate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 driver_date = 3;</code>
         */
        public Builder clearDriverDate() {
          bitField0_ = (bitField0_ & ~0x00000004);
          driverDate_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object directxVersion_ = "";
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public boolean hasDirectxVersion() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public java.lang.String getDirectxVersion() {
          java.lang.Object ref = directxVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              directxVersion_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public com.google.protobuf.ByteString
            getDirectxVersionBytes() {
          java.lang.Object ref = directxVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            directxVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public Builder setDirectxVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          directxVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public Builder clearDirectxVersion() {
          bitField0_ = (bitField0_ & ~0x00000008);
          directxVersion_ = getDefaultInstance().getDirectxVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string directx_version = 4;</code>
         */
        public Builder setDirectxVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          directxVersion_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object openglVersion_ = "";
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public boolean hasOpenglVersion() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public java.lang.String getOpenglVersion() {
          java.lang.Object ref = openglVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              openglVersion_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public com.google.protobuf.ByteString
            getOpenglVersionBytes() {
          java.lang.Object ref = openglVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            openglVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public Builder setOpenglVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          openglVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public Builder clearOpenglVersion() {
          bitField0_ = (bitField0_ & ~0x00000010);
          openglVersion_ = getDefaultInstance().getOpenglVersion();
          onChanged();
          return this;
        }
        /**
         * <code>optional string opengl_version = 5;</code>
         */
        public Builder setOpenglVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          openglVersion_ = value;
          onChanged();
          return this;
        }

        private int vendorid_ ;
        /**
         * <code>optional int32 vendorid = 6;</code>
         */
        public boolean hasVendorid() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 vendorid = 6;</code>
         */
        public int getVendorid() {
          return vendorid_;
        }
        /**
         * <code>optional int32 vendorid = 6;</code>
         */
        public Builder setVendorid(int value) {
          bitField0_ |= 0x00000020;
          vendorid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 vendorid = 6;</code>
         */
        public Builder clearVendorid() {
          bitField0_ = (bitField0_ & ~0x00000020);
          vendorid_ = 0;
          onChanged();
          return this;
        }

        private int deviceid_ ;
        /**
         * <code>optional int32 deviceid = 7;</code>
         */
        public boolean hasDeviceid() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int32 deviceid = 7;</code>
         */
        public int getDeviceid() {
          return deviceid_;
        }
        /**
         * <code>optional int32 deviceid = 7;</code>
         */
        public Builder setDeviceid(int value) {
          bitField0_ |= 0x00000040;
          deviceid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 deviceid = 7;</code>
         */
        public Builder clearDeviceid() {
          bitField0_ = (bitField0_ & ~0x00000040);
          deviceid_ = 0;
          onChanged();
          return this;
        }

        private int vramMb_ ;
        /**
         * <code>optional int32 vram_mb = 8;</code>
         */
        public boolean hasVramMb() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 vram_mb = 8;</code>
         */
        public int getVramMb() {
          return vramMb_;
        }
        /**
         * <code>optional int32 vram_mb = 8;</code>
         */
        public Builder setVramMb(int value) {
          bitField0_ |= 0x00000080;
          vramMb_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 vram_mb = 8;</code>
         */
        public Builder clearVramMb() {
          bitField0_ = (bitField0_ & ~0x00000080);
          vramMb_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CClientSystemInfo.VideoCard)
      }

      static {
        defaultInstance = new VideoCard(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CClientSystemInfo.VideoCard)
    }

    private int bitField0_;
    public static final int CPU_FIELD_NUMBER = 1;
    private SteammessagesPlayerSteamclient.CClientSystemInfo.CPU cpu_;
    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    public boolean hasCpu() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU getCpu() {
      return cpu_;
    }
    /**
     * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder getCpuOrBuilder() {
      return cpu_;
    }

    public static final int VIDEO_CARD_FIELD_NUMBER = 2;
    private SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard videoCard_;
    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    public boolean hasVideoCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard getVideoCard() {
      return videoCard_;
    }
    /**
     * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder getVideoCardOrBuilder() {
      return videoCard_;
    }

    public static final int OPERATING_SYSTEM_FIELD_NUMBER = 3;
    private java.lang.Object operatingSystem_;
    /**
     * <code>optional string operating_system = 3;</code>
     */
    public boolean hasOperatingSystem() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string operating_system = 3;</code>
     */
    public java.lang.String getOperatingSystem() {
      java.lang.Object ref = operatingSystem_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          operatingSystem_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string operating_system = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOperatingSystemBytes() {
      java.lang.Object ref = operatingSystem_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatingSystem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OS_64BIT_FIELD_NUMBER = 4;
    private boolean os64Bit_;
    /**
     * <code>optional bool os_64bit = 4;</code>
     */
    public boolean hasOs64Bit() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool os_64bit = 4;</code>
     */
    public boolean getOs64Bit() {
      return os64Bit_;
    }

    public static final int SYSTEM_RAM_MB_FIELD_NUMBER = 5;
    private int systemRamMb_;
    /**
     * <code>optional int32 system_ram_mb = 5;</code>
     */
    public boolean hasSystemRamMb() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 system_ram_mb = 5;</code>
     */
    public int getSystemRamMb() {
      return systemRamMb_;
    }

    public static final int AUDIO_DEVICE_FIELD_NUMBER = 6;
    private java.lang.Object audioDevice_;
    /**
     * <code>optional string audio_device = 6;</code>
     */
    public boolean hasAudioDevice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string audio_device = 6;</code>
     */
    public java.lang.String getAudioDevice() {
      java.lang.Object ref = audioDevice_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          audioDevice_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string audio_device = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAudioDeviceBytes() {
      java.lang.Object ref = audioDevice_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        audioDevice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUDIO_DRIVER_VERSION_FIELD_NUMBER = 7;
    private java.lang.Object audioDriverVersion_;
    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    public boolean hasAudioDriverVersion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    public java.lang.String getAudioDriverVersion() {
      java.lang.Object ref = audioDriverVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          audioDriverVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string audio_driver_version = 7;</code>
     */
    public com.google.protobuf.ByteString
        getAudioDriverVersionBytes() {
      java.lang.Object ref = audioDriverVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        audioDriverVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      cpu_ = SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance();
      videoCard_ = SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance();
      operatingSystem_ = "";
      os64Bit_ = false;
      systemRamMb_ = 0;
      audioDevice_ = "";
      audioDriverVersion_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, videoCard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOperatingSystemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, os64Bit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, systemRamMb_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getAudioDeviceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getAudioDriverVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, videoCard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOperatingSystemBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, os64Bit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, systemRamMb_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getAudioDeviceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getAudioDriverVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CClientSystemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CClientSystemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CClientSystemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CClientSystemInfo)
        SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CClientSystemInfo.class, SteammessagesPlayerSteamclient.CClientSystemInfo.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CClientSystemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCpuFieldBuilder();
          getVideoCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cpuBuilder_ == null) {
          cpu_ = SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance();
        } else {
          cpuBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (videoCardBuilder_ == null) {
          videoCard_ = SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance();
        } else {
          videoCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        operatingSystem_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        os64Bit_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        systemRamMb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        audioDevice_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        audioDriverVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CClientSystemInfo_descriptor;
      }

      public SteammessagesPlayerSteamclient.CClientSystemInfo getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CClientSystemInfo build() {
        SteammessagesPlayerSteamclient.CClientSystemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CClientSystemInfo buildPartial() {
        SteammessagesPlayerSteamclient.CClientSystemInfo result = new SteammessagesPlayerSteamclient.CClientSystemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (cpuBuilder_ == null) {
          result.cpu_ = cpu_;
        } else {
          result.cpu_ = cpuBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (videoCardBuilder_ == null) {
          result.videoCard_ = videoCard_;
        } else {
          result.videoCard_ = videoCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operatingSystem_ = operatingSystem_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.os64Bit_ = os64Bit_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.systemRamMb_ = systemRamMb_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.audioDevice_ = audioDevice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.audioDriverVersion_ = audioDriverVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CClientSystemInfo) {
          return mergeFrom((SteammessagesPlayerSteamclient.CClientSystemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CClientSystemInfo other) {
        if (other == SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance()) return this;
        if (other.hasCpu()) {
          mergeCpu(other.getCpu());
        }
        if (other.hasVideoCard()) {
          mergeVideoCard(other.getVideoCard());
        }
        if (other.hasOperatingSystem()) {
          bitField0_ |= 0x00000004;
          operatingSystem_ = other.operatingSystem_;
          onChanged();
        }
        if (other.hasOs64Bit()) {
          setOs64Bit(other.getOs64Bit());
        }
        if (other.hasSystemRamMb()) {
          setSystemRamMb(other.getSystemRamMb());
        }
        if (other.hasAudioDevice()) {
          bitField0_ |= 0x00000020;
          audioDevice_ = other.audioDevice_;
          onChanged();
        }
        if (other.hasAudioDriverVersion()) {
          bitField0_ |= 0x00000040;
          audioDriverVersion_ = other.audioDriverVersion_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CClientSystemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CClientSystemInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SteammessagesPlayerSteamclient.CClientSystemInfo.CPU cpu_ = SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU, SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder> cpuBuilder_;
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public boolean hasCpu() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU getCpu() {
        if (cpuBuilder_ == null) {
          return cpu_;
        } else {
          return cpuBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public Builder setCpu(SteammessagesPlayerSteamclient.CClientSystemInfo.CPU value) {
        if (cpuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cpu_ = value;
          onChanged();
        } else {
          cpuBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public Builder setCpu(
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder builderForValue) {
        if (cpuBuilder_ == null) {
          cpu_ = builderForValue.build();
          onChanged();
        } else {
          cpuBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public Builder mergeCpu(SteammessagesPlayerSteamclient.CClientSystemInfo.CPU value) {
        if (cpuBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              cpu_ != SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance()) {
            cpu_ =
              SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.newBuilder(cpu_).mergeFrom(value).buildPartial();
          } else {
            cpu_ = value;
          }
          onChanged();
        } else {
          cpuBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public Builder clearCpu() {
        if (cpuBuilder_ == null) {
          cpu_ = SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.getDefaultInstance();
          onChanged();
        } else {
          cpuBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder getCpuBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCpuFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder getCpuOrBuilder() {
        if (cpuBuilder_ != null) {
          return cpuBuilder_.getMessageOrBuilder();
        } else {
          return cpu_;
        }
      }
      /**
       * <code>optional .CClientSystemInfo.CPU cpu = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo.CPU, SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder> 
          getCpuFieldBuilder() {
        if (cpuBuilder_ == null) {
          cpuBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SteammessagesPlayerSteamclient.CClientSystemInfo.CPU, SteammessagesPlayerSteamclient.CClientSystemInfo.CPU.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.CPUOrBuilder>(
                  getCpu(),
                  getParentForChildren(),
                  isClean());
          cpu_ = null;
        }
        return cpuBuilder_;
      }

      private SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard videoCard_ = SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder> videoCardBuilder_;
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public boolean hasVideoCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard getVideoCard() {
        if (videoCardBuilder_ == null) {
          return videoCard_;
        } else {
          return videoCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public Builder setVideoCard(SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard value) {
        if (videoCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          videoCard_ = value;
          onChanged();
        } else {
          videoCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public Builder setVideoCard(
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder builderForValue) {
        if (videoCardBuilder_ == null) {
          videoCard_ = builderForValue.build();
          onChanged();
        } else {
          videoCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public Builder mergeVideoCard(SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard value) {
        if (videoCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              videoCard_ != SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance()) {
            videoCard_ =
              SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.newBuilder(videoCard_).mergeFrom(value).buildPartial();
          } else {
            videoCard_ = value;
          }
          onChanged();
        } else {
          videoCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public Builder clearVideoCard() {
        if (videoCardBuilder_ == null) {
          videoCard_ = SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.getDefaultInstance();
          onChanged();
        } else {
          videoCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder getVideoCardBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVideoCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder getVideoCardOrBuilder() {
        if (videoCardBuilder_ != null) {
          return videoCardBuilder_.getMessageOrBuilder();
        } else {
          return videoCard_;
        }
      }
      /**
       * <code>optional .CClientSystemInfo.VideoCard video_card = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder> 
          getVideoCardFieldBuilder() {
        if (videoCardBuilder_ == null) {
          videoCardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCard.Builder, SteammessagesPlayerSteamclient.CClientSystemInfo.VideoCardOrBuilder>(
                  getVideoCard(),
                  getParentForChildren(),
                  isClean());
          videoCard_ = null;
        }
        return videoCardBuilder_;
      }

      private java.lang.Object operatingSystem_ = "";
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public boolean hasOperatingSystem() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public java.lang.String getOperatingSystem() {
        java.lang.Object ref = operatingSystem_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            operatingSystem_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOperatingSystemBytes() {
        java.lang.Object ref = operatingSystem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatingSystem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public Builder setOperatingSystem(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        operatingSystem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public Builder clearOperatingSystem() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operatingSystem_ = getDefaultInstance().getOperatingSystem();
        onChanged();
        return this;
      }
      /**
       * <code>optional string operating_system = 3;</code>
       */
      public Builder setOperatingSystemBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        operatingSystem_ = value;
        onChanged();
        return this;
      }

      private boolean os64Bit_ ;
      /**
       * <code>optional bool os_64bit = 4;</code>
       */
      public boolean hasOs64Bit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool os_64bit = 4;</code>
       */
      public boolean getOs64Bit() {
        return os64Bit_;
      }
      /**
       * <code>optional bool os_64bit = 4;</code>
       */
      public Builder setOs64Bit(boolean value) {
        bitField0_ |= 0x00000008;
        os64Bit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool os_64bit = 4;</code>
       */
      public Builder clearOs64Bit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        os64Bit_ = false;
        onChanged();
        return this;
      }

      private int systemRamMb_ ;
      /**
       * <code>optional int32 system_ram_mb = 5;</code>
       */
      public boolean hasSystemRamMb() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 system_ram_mb = 5;</code>
       */
      public int getSystemRamMb() {
        return systemRamMb_;
      }
      /**
       * <code>optional int32 system_ram_mb = 5;</code>
       */
      public Builder setSystemRamMb(int value) {
        bitField0_ |= 0x00000010;
        systemRamMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 system_ram_mb = 5;</code>
       */
      public Builder clearSystemRamMb() {
        bitField0_ = (bitField0_ & ~0x00000010);
        systemRamMb_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object audioDevice_ = "";
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public boolean hasAudioDevice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public java.lang.String getAudioDevice() {
        java.lang.Object ref = audioDevice_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            audioDevice_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAudioDeviceBytes() {
        java.lang.Object ref = audioDevice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          audioDevice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public Builder setAudioDevice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        audioDevice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public Builder clearAudioDevice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        audioDevice_ = getDefaultInstance().getAudioDevice();
        onChanged();
        return this;
      }
      /**
       * <code>optional string audio_device = 6;</code>
       */
      public Builder setAudioDeviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        audioDevice_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object audioDriverVersion_ = "";
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public boolean hasAudioDriverVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public java.lang.String getAudioDriverVersion() {
        java.lang.Object ref = audioDriverVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            audioDriverVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public com.google.protobuf.ByteString
          getAudioDriverVersionBytes() {
        java.lang.Object ref = audioDriverVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          audioDriverVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public Builder setAudioDriverVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        audioDriverVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public Builder clearAudioDriverVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        audioDriverVersion_ = getDefaultInstance().getAudioDriverVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string audio_driver_version = 7;</code>
       */
      public Builder setAudioDriverVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        audioDriverVersion_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CClientSystemInfo)
    }

    static {
      defaultInstance = new CClientSystemInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CClientSystemInfo)
  }

  public interface CPlayerClient_GetSystemInformation_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPlayerClient_GetSystemInformation_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    boolean hasSystemInfo();
    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfo getSystemInfo();
    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder getSystemInfoOrBuilder();
  }
  /**
   * Protobuf type {@code CPlayerClient_GetSystemInformation_Response}
   */
  public static final class CPlayerClient_GetSystemInformation_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPlayerClient_GetSystemInformation_Response)
      CPlayerClient_GetSystemInformation_ResponseOrBuilder {
    // Use CPlayerClient_GetSystemInformation_Response.newBuilder() to construct.
    private CPlayerClient_GetSystemInformation_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPlayerClient_GetSystemInformation_Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPlayerClient_GetSystemInformation_Response defaultInstance;
    public static CPlayerClient_GetSystemInformation_Response getDefaultInstance() {
      return defaultInstance;
    }

    public CPlayerClient_GetSystemInformation_Response getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPlayerClient_GetSystemInformation_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              SteammessagesPlayerSteamclient.CClientSystemInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = systemInfo_.toBuilder();
              }
              systemInfo_ = input.readMessage(SteammessagesPlayerSteamclient.CClientSystemInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(systemInfo_);
                systemInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.class, SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.Builder.class);
    }

    public static com.google.protobuf.Parser<CPlayerClient_GetSystemInformation_Response> PARSER =
        new com.google.protobuf.AbstractParser<CPlayerClient_GetSystemInformation_Response>() {
      public CPlayerClient_GetSystemInformation_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPlayerClient_GetSystemInformation_Response(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPlayerClient_GetSystemInformation_Response> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SYSTEM_INFO_FIELD_NUMBER = 1;
    private SteammessagesPlayerSteamclient.CClientSystemInfo systemInfo_;
    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    public boolean hasSystemInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfo getSystemInfo() {
      return systemInfo_;
    }
    /**
     * <code>optional .CClientSystemInfo system_info = 1;</code>
     */
    public SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder getSystemInfoOrBuilder() {
      return systemInfo_;
    }

    private void initFields() {
      systemInfo_ = SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, systemInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, systemInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPlayerClient_GetSystemInformation_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPlayerClient_GetSystemInformation_Response)
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.class, SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.Builder.class);
      }

      // Construct using SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSystemInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (systemInfoBuilder_ == null) {
          systemInfo_ = SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance();
        } else {
          systemInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesPlayerSteamclient.internal_static_CPlayerClient_GetSystemInformation_Response_descriptor;
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response getDefaultInstanceForType() {
        return SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.getDefaultInstance();
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response build() {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response buildPartial() {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response result = new SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (systemInfoBuilder_ == null) {
          result.systemInfo_ = systemInfo_;
        } else {
          result.systemInfo_ = systemInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response) {
          return mergeFrom((SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response other) {
        if (other == SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response.getDefaultInstance()) return this;
        if (other.hasSystemInfo()) {
          mergeSystemInfo(other.getSystemInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesPlayerSteamclient.CPlayerClient_GetSystemInformation_Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private SteammessagesPlayerSteamclient.CClientSystemInfo systemInfo_ = SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo, SteammessagesPlayerSteamclient.CClientSystemInfo.Builder, SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder> systemInfoBuilder_;
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public boolean hasSystemInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo getSystemInfo() {
        if (systemInfoBuilder_ == null) {
          return systemInfo_;
        } else {
          return systemInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public Builder setSystemInfo(SteammessagesPlayerSteamclient.CClientSystemInfo value) {
        if (systemInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          systemInfo_ = value;
          onChanged();
        } else {
          systemInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public Builder setSystemInfo(
          SteammessagesPlayerSteamclient.CClientSystemInfo.Builder builderForValue) {
        if (systemInfoBuilder_ == null) {
          systemInfo_ = builderForValue.build();
          onChanged();
        } else {
          systemInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public Builder mergeSystemInfo(SteammessagesPlayerSteamclient.CClientSystemInfo value) {
        if (systemInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              systemInfo_ != SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance()) {
            systemInfo_ =
              SteammessagesPlayerSteamclient.CClientSystemInfo.newBuilder(systemInfo_).mergeFrom(value).buildPartial();
          } else {
            systemInfo_ = value;
          }
          onChanged();
        } else {
          systemInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public Builder clearSystemInfo() {
        if (systemInfoBuilder_ == null) {
          systemInfo_ = SteammessagesPlayerSteamclient.CClientSystemInfo.getDefaultInstance();
          onChanged();
        } else {
          systemInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfo.Builder getSystemInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSystemInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      public SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder getSystemInfoOrBuilder() {
        if (systemInfoBuilder_ != null) {
          return systemInfoBuilder_.getMessageOrBuilder();
        } else {
          return systemInfo_;
        }
      }
      /**
       * <code>optional .CClientSystemInfo system_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SteammessagesPlayerSteamclient.CClientSystemInfo, SteammessagesPlayerSteamclient.CClientSystemInfo.Builder, SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder> 
          getSystemInfoFieldBuilder() {
        if (systemInfoBuilder_ == null) {
          systemInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SteammessagesPlayerSteamclient.CClientSystemInfo, SteammessagesPlayerSteamclient.CClientSystemInfo.Builder, SteammessagesPlayerSteamclient.CClientSystemInfoOrBuilder>(
                  getSystemInfo(),
                  getParentForChildren(),
                  isClean());
          systemInfo_ = null;
        }
        return systemInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CPlayerClient_GetSystemInformation_Response)
    }

    static {
      defaultInstance = new CPlayerClient_GetSystemInformation_Response(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPlayerClient_GetSystemInformation_Response)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetGameBadgeLevels_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetGameBadgeLevels_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetLastPlayedTimes_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetLastPlayedTimes_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_GetLastPlayedTimes_Response_Game_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_AcceptSSA_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_AcceptSSA_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_AcceptSSA_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_AcceptSSA_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayer_LastPlayedTimes_Notification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayer_LastPlayedTimes_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayerClient_GetSystemInformation_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayerClient_GetSystemInformation_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CClientSystemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CClientSystemInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CClientSystemInfo_CPU_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CClientSystemInfo_CPU_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CClientSystemInfo_VideoCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CClientSystemInfo_VideoCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPlayerClient_GetSystemInformation_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPlayerClient_GetSystemInformation_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&steammessages_player.steamclient.proto" +
      "\032,steammessages_unified_base.steamclient" +
      ".proto\"3\n\"CPlayer_GetGameBadgeLevels_Req" +
      "uest\022\r\n\005appid\030\001 \001(\r\"\265\001\n#CPlayer_GetGameB" +
      "adgeLevels_Response\022\024\n\014player_level\030\001 \001(" +
      "\r\022:\n\006badges\030\002 \003(\0132*.CPlayer_GetGameBadge" +
      "Levels_Response.Badge\032<\n\005Badge\022\r\n\005level\030" +
      "\001 \001(\005\022\016\n\006series\030\002 \001(\005\022\024\n\014border_color\030\003 " +
      "\001(\r\"\202\001\n\"CPlayer_GetLastPlayedTimes_Reque" +
      "st\022\\\n\017min_last_played\030\001 \001(\rBC\202\265\030?The mos",
      "t recent last-played time the client alr" +
      "eady knows about\"\300\001\n#CPlayer_GetLastPlay" +
      "edTimes_Response\0228\n\005games\030\001 \003(\0132).CPlaye" +
      "r_GetLastPlayedTimes_Response.Game\032_\n\004Ga" +
      "me\022\r\n\005appid\030\001 \001(\005\022\025\n\rlast_playtime\030\002 \001(\r" +
      "\022\027\n\017playtime_2weeks\030\003 \001(\005\022\030\n\020playtime_fo" +
      "rever\030\004 \001(\005\"\033\n\031CPlayer_AcceptSSA_Request" +
      "\"\034\n\032CPlayer_AcceptSSA_Response\"`\n$CPlaye" +
      "r_LastPlayedTimes_Notification\0228\n\005games\030" +
      "\001 \003(\0132).CPlayer_GetLastPlayedTimes_Respo",
      "nse.Game\",\n*CPlayerClient_GetSystemInfor" +
      "mation_Request\"\365\004\n\021CClientSystemInfo\022#\n\003" +
      "cpu\030\001 \001(\0132\026.CClientSystemInfo.CPU\0220\n\nvid" +
      "eo_card\030\002 \001(\0132\034.CClientSystemInfo.VideoC" +
      "ard\022\030\n\020operating_system\030\003 \001(\t\022\020\n\010os_64bi" +
      "t\030\004 \001(\010\022\025\n\rsystem_ram_mb\030\005 \001(\005\022\024\n\014audio_" +
      "device\030\006 \001(\t\022\034\n\024audio_driver_version\030\007 \001" +
      "(\t\032\340\001\n\003CPU\022\021\n\tspeed_mhz\030\001 \001(\005\022\016\n\006vendor\030" +
      "\002 \001(\t\022\032\n\022logical_processors\030\003 \001(\005\022\033\n\023phy" +
      "sical_processors\030\004 \001(\005\022\026\n\016hyperthreading",
      "\030\005 \001(\010\022\r\n\005fcmov\030\006 \001(\010\022\014\n\004sse2\030\007 \001(\010\022\014\n\004s" +
      "se3\030\010 \001(\010\022\r\n\005ssse3\030\t \001(\010\022\r\n\005sse4a\030\n \001(\010\022" +
      "\r\n\005sse41\030\013 \001(\010\022\r\n\005sse42\030\014 \001(\010\032\256\001\n\tVideoC" +
      "ard\022\016\n\006driver\030\001 \001(\t\022\026\n\016driver_version\030\002 " +
      "\001(\t\022\023\n\013driver_date\030\003 \001(\r\022\027\n\017directx_vers" +
      "ion\030\004 \001(\t\022\026\n\016opengl_version\030\005 \001(\t\022\020\n\010ven" +
      "dorid\030\006 \001(\005\022\020\n\010deviceid\030\007 \001(\005\022\017\n\007vram_mb" +
      "\030\010 \001(\005\"V\n+CPlayerClient_GetSystemInforma" +
      "tion_Response\022\'\n\013system_info\030\001 \001(\0132\022.CCl" +
      "ientSystemInfo2\355\003\n\006Player\022\266\001\n\022GetGameBad",
      "geLevels\022#.CPlayer_GetGameBadgeLevels_Re" +
      "quest\032$.CPlayer_GetGameBadgeLevels_Respo" +
      "nse\"U\202\265\030QReturns the Steam Level of a us" +
      "er, the Badge level for the game, and if" +
      " it\'s foil\022\225\001\n\030ClientGetLastPlayedTimes\022" +
      "#.CPlayer_GetLastPlayedTimes_Request\032$.C" +
      "Player_GetLastPlayedTimes_Response\".\202\265\030*" +
      "Gets the last-played times for the accou" +
      "nt\022c\n\tAcceptSSA\022\032.CPlayer_AcceptSSA_Requ" +
      "est\032\033.CPlayer_AcceptSSA_Response\"\035\202\265\030\031Us",
      "er is accepting the SSA\032-\202\265\030)A service f" +
      "or accessing Steam player data2\223\003\n\014Playe" +
      "rClient\022\214\001\n\025NotifyLastPlayedTimes\022%.CPla" +
      "yer_LastPlayedTimes_Notification\032\013.NoRes" +
      "ponse\"?\202\265\030;Notification from server to c" +
      "lient of more recent play time\022\303\001\n\024GetSy" +
      "stemInformation\022+.CPlayerClient_GetSyste" +
      "mInformation_Request\032,.CPlayerClient_Get" +
      "SystemInformation_Response\"P\202\265\030LRequest " +
      "from the server to the client for inform",
      "ation about the users system\032.\202\265\030&Steam " +
      "player data client notifications\300\265\030\002B\003\200\001" +
      "\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        }, assigner);
    internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CPlayer_GetGameBadgeLevels_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetGameBadgeLevels_Request_descriptor,
        new java.lang.String[] { "Appid", });
    internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CPlayer_GetGameBadgeLevels_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor,
        new java.lang.String[] { "PlayerLevel", "Badges", });
    internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor =
      internal_static_CPlayer_GetGameBadgeLevels_Response_descriptor.getNestedTypes().get(0);
    internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetGameBadgeLevels_Response_Badge_descriptor,
        new java.lang.String[] { "Level", "Series", "BorderColor", });
    internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CPlayer_GetLastPlayedTimes_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetLastPlayedTimes_Request_descriptor,
        new java.lang.String[] { "MinLastPlayed", });
    internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CPlayer_GetLastPlayedTimes_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor,
        new java.lang.String[] { "Games", });
    internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor =
      internal_static_CPlayer_GetLastPlayedTimes_Response_descriptor.getNestedTypes().get(0);
    internal_static_CPlayer_GetLastPlayedTimes_Response_Game_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_GetLastPlayedTimes_Response_Game_descriptor,
        new java.lang.String[] { "Appid", "LastPlaytime", "Playtime2Weeks", "PlaytimeForever", });
    internal_static_CPlayer_AcceptSSA_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CPlayer_AcceptSSA_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_AcceptSSA_Request_descriptor,
        new java.lang.String[] { });
    internal_static_CPlayer_AcceptSSA_Response_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CPlayer_AcceptSSA_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_AcceptSSA_Response_descriptor,
        new java.lang.String[] { });
    internal_static_CPlayer_LastPlayedTimes_Notification_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CPlayer_LastPlayedTimes_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayer_LastPlayedTimes_Notification_descriptor,
        new java.lang.String[] { "Games", });
    internal_static_CPlayerClient_GetSystemInformation_Request_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CPlayerClient_GetSystemInformation_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayerClient_GetSystemInformation_Request_descriptor,
        new java.lang.String[] { });
    internal_static_CClientSystemInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CClientSystemInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CClientSystemInfo_descriptor,
        new java.lang.String[] { "Cpu", "VideoCard", "OperatingSystem", "Os64Bit", "SystemRamMb", "AudioDevice", "AudioDriverVersion", });
    internal_static_CClientSystemInfo_CPU_descriptor =
      internal_static_CClientSystemInfo_descriptor.getNestedTypes().get(0);
    internal_static_CClientSystemInfo_CPU_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CClientSystemInfo_CPU_descriptor,
        new java.lang.String[] { "SpeedMhz", "Vendor", "LogicalProcessors", "PhysicalProcessors", "Hyperthreading", "Fcmov", "Sse2", "Sse3", "Ssse3", "Sse4A", "Sse41", "Sse42", });
    internal_static_CClientSystemInfo_VideoCard_descriptor =
      internal_static_CClientSystemInfo_descriptor.getNestedTypes().get(1);
    internal_static_CClientSystemInfo_VideoCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CClientSystemInfo_VideoCard_descriptor,
        new java.lang.String[] { "Driver", "DriverVersion", "DriverDate", "DirectxVersion", "OpenglVersion", "Vendorid", "Deviceid", "VramMb", });
    internal_static_CPlayerClient_GetSystemInformation_Response_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CPlayerClient_GetSystemInformation_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPlayerClient_GetSystemInformation_Response_descriptor,
        new java.lang.String[] { "SystemInfo", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.description);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceExecutionSite);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
